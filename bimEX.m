(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Input::Initialization:: *)
SafeSimplification::usage =
"SafeSimplification[ expr_ ] := Simplify@ToCanonical[ expr, UseMetricOnVBundle \[Rule] None ]

It is similar to the xAct function Simplification, but does not use any metrics to contract, raise or lower indices.";


(* ::Input::Initialization:: *)
\[CapitalSigma]t::usage =
"\[CapitalSigma]t is the spacelike hypersurface where the initial data are specified. It constitutes the manifold where all the tensors in bimEX are defined.";


(* ::Input::Initialization:: *)
t::usage =
"t is the time coordinate. All the tensors depend on it.";


(* ::Input::Initialization:: *)
g\[Digamma]::usage =
"g\[Digamma] is a parameter used to allow to take derivatives with the differential operator \!\(\*SubscriptBox[\(\[PartialD]\), \(t\)]\)-\!\(\*SubscriptBox[\(\[ScriptCapitalL]\), \(\[Beta]\)]\). All the tensors depend on it.";


(* ::Input::Initialization:: *)
f\[Digamma]::usage =
"f\[Digamma] is a parameter used to allow to take derivatives with the differential operator \!\(\*SubscriptBox[\(\[PartialD]\), \(t\)]\)-\!\(\*SubscriptBox[\(\[ScriptCapitalL]\), OverscriptBox[\(\[Beta]\), \(~\)]]\). All the tensors depend on it.";


(* ::Input::Initialization:: *)
h\[Digamma]::usage =
"h\[Digamma] is a parameter used to allow to take derivatives with the differential operator \!\(\*SubscriptBox[\(\[PartialD]\), \(t\)]\)-\!\(\*SubscriptBox[\(\[ScriptCapitalL]\), \(q\)]\). All the tensors depend on it.";


(* ::Input::Initialization:: *)
$Ksign::usage =
"$Ksign defines the sign convention in the definition of the extrinsic curvature, i.e., minus or plus the Lie derivative of the metric along the vector field normal to the spacelike hypersurface \[CapitalSigma]t. The default value is -1.";


(* ::Input::Initialization:: *)
$Vsign::usage =
"$Vsign defines the sign in front of the bimetric potential in the bimetric action. The default value is -1.";


(* ::Input::Initialization:: *)
\[Kappa]g::usage =
"\[Kappa]g is the constant in front of the bimetric and external stress energy tensors in the bimetric field equations for the metric g.";


(* ::Input::Initialization:: *)
\[Kappa]f::usage =
"\[Kappa]f is the constant in front of the bimetric and external stress energy tensors in the bimetric field equations for the metric f.";


(* ::Input::Initialization:: *)
\[ScriptCapitalE]::usage =
"\!\(\*SubscriptBox[\(\[ScriptCapitalE]\), \(n_\)]\)[ X_ ] := If[ n < 0 \[Or] n > Length@X, 0,\[IndentingNewLine]SymmetricPolynomial[ n , Eigenvalues[X] ]\[IndentingNewLine]]
This function returns the \!\(\*SuperscriptBox[\(n\), \(th\)]\) elementary symemtric polynomial of the matrix X.";


(* ::Input::Initialization:: *)
Y::usage =
"\!\(\*SubscriptBox[\(Y\), \(n_\)]\)[ X_ ] := If[ n < 0 \[Or] n \[GreaterEqual] Length@X, 0,\[IndentingNewLine]If[ n \[Equal] 0, IdentityMatrix[ Length@X ],\[IndentingNewLine]\!\(\*UnderoverscriptBox[\(\[Sum]\), \(k = 0\), \(n\)]\)(-1\!\(\*SuperscriptBox[\()\), \(n + k\)]\)\!\(\*SubscriptBox[\(\[ScriptCapitalE]\), \(k\)]\)[X]MatrixPower[X,n-k]\[IndentingNewLine]]]
This function returns the derivative of the (n+1\!\(\*SuperscriptBox[\()\), \(th\)]\) elementary symemtric polynomial of the matrix X.";


(* ::Input::Initialization:: *)
UpperTriangularQ::usage =
"UpperTriangularQ[ M ] returns True if the matrix M is upper triangular, False otherwise.";


(* ::Input::Initialization:: *)
DefChartScalars::usage =
"DefChartScalars[ ChartName, {x1, x2, x3} ] defines a chart on the spacelike hypersurface \[CapitalSigma]t, named ''ChartName'' and with coordinates {x1, x2, x3}. It has the same options of the xAct function xChart. It assigns components to the identity matrix in the chart, set the independence between the spatial coordinates, and the parameters t, g\[Digamma], f\[Digamma], h\[Digamma]. Finally, it sets the derivative of the \[Beta] parameters to zero, since they are constants.";


(* ::Input::Initialization:: *)
ChartAssumptions::usage =
"ChartAssumptions is an option for DefChartScalars and allows to specify the assumptions on the coordinates of the Chart.";


(* ::Input::Initialization:: *)
SquareRootOf3DPositiveDefiniteMatrix::usage =
"SquareRootOf3DPositiveDefiniteMatrix[ Araw ] computes the square root of a positive definite 3x3 matrix using the algorithm in L.P. Franca, ''\!\(\*
StyleBox[\"An\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"algorithm\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"to\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"compute\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"the\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"square\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"root\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"of\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"a\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"3\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"\[Times]\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"3\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"positive\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"definite\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"matrix\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"''\",\nFontSlant->\"Italic\"]\), Computers & Mathematics with Applications, Volume 18, Issue 5, 1989, Pages 459-466, \!\(\*
StyleBox[\"ISSN\",\nFontWeight->\"Bold\"]\)\!\(\*
StyleBox[\" \",\nFontWeight->\"Bold\"]\)\!\(\*
StyleBox[\"0898\",\nFontWeight->\"Bold\"]\)\!\(\*
StyleBox[\"-\",\nFontWeight->\"Bold\"]\)\*
StyleBox[\(\!\(\*
StyleBox[\"1221\",\nFontWeight->\"Bold\"]\).\)] It has ApplyFunction as option.";


(* ::Input::Initialization:: *)
ApplyFunction::usage =
"ApplyFunction is an option for various functions in bimEX, which allows to specify a function to be applied at the end of most of the computations made by the function. Depending on the chosen function, this option can speed up or slow down the execution of the function.";


(* ::Input::Initialization:: *)
PolarDecomposition::usage =
"PolarDecomposition[ M ] computes the polar decomposition of real matrix M.";


(* ::Input::Initialization:: *)
RealMatrixSqrt::usage =
"RealMatrixSqrt[ M ] computes the square root of the real matrix M.";


(* ::Input::Initialization:: *)
ChartName::usage =
"ChartName is an option for various functions in bimEX which allows to specify the chart to use, by setting it to the name of the chart. Its default value is DefaultChart.";


(* ::Input::Initialization:: *)
DefaultChart::usage =
"DefaultChart is a variable which is set to the last defined chart. It can be changed according to the user's preferences.";


(* ::Input::Initialization:: *)
FirstChart::usage =
"FirstChart is a variable which is set to the first defined chart. It is protected, hence its value cannot be changed.";


(* ::Input::Initialization:: *)
ComputeGeometryOf::usage =
"ComputeGeometryOf is an option for ComputeBSSNDecomposition. It allows to specify what spatial geometries to compute via the xAct function MetricCompute. It can be set to a list containing the symbols of the spatial parts of the metrics, i.e., {\[Gamma], \[CurlyPhi], \[Chi]}. Each symbol refers to the physical and the conformal metric, hence ComputeGeometryOf \[Rule] {\[Gamma]} make ComputeBSSNDecomposition to compute the geometries for both \[Gamma] and \!\(\*OverscriptBox[\(\[Gamma]\), \(_\)]\). The default value is {\[Gamma], \[CurlyPhi]}.";


(* ::Input::Initialization:: *)
SqrtAlgorithm::usage =
"CSqrtAlgorithm is an option for ComputeBSSNDecomposition. It allows to specify what algorithm to use in computing the square root of the positive definite 3x3 matrix defined in the decomposition. It has to be set to one of the three strings ''MatSqrt'', ''PolDec'', ''PosDefSqrt''. The three options make ComputeBSSN decomposition to compute the square root with, respectively, RealMatrixSqrt, PolarDecomposition, SqrtOf3DPositiveDefiniteMatrix. The default value is ''MatSqrt''.";


(* ::Input::Initialization:: *)
IndVariables::usage =
"IndVariables is an option for ComputeBSSNDecomposition. It allows to specify a list containing the independent variables which the components of the abstract tensors depend on. The default value is ''AutoDetect'', which make ComputeBSSNDecomposition to detect the variables contained in the ansatz provided by the user. Sometimes, the ansatz may contain a variable on which the fields do not depend on, as in spherical symmetry with \[Theta]. IndVariables allows the user to avoid this potential issue and specify the desired independent variables.";


(* ::Input::Initialization:: *)
ComputeBSSNDecomposition::usage =
"ComputeBSSNDecomposition[ e, m0, p, q, gA, fA, g\[CapitalLambda], f\[CapitalLambda], gback, fback, hback ] takes as arguments the following quantities (in order),

- The triangular vielbein of \[Gamma], e
- The triangular vielbein of \[CurlyPhi], m0
- The vector p
- The shift vector of the geometric mean q
- The extrinsic curvatures in operator form (up-down indices), gA, fA
- The conformal connections, g\[CapitalLambda], f\[CapitalLambda]
- The background metrics for \[Gamma], \[CurlyPhi] and \[Chi]

The above quantities constitute the ansatz specified by the user.

The function computes the entire (c)BSSN decomposition for the conformal metrics, which is the same as the standard 3+1 decomposition for the physical metrics. It assigns the computed expressions as components of the abstract tensors, and saves them as plain lists as well. It performs many checks to verify that the computations are correct, and it Aborts the evaluation, printing an appropriate error message, if one of them fails. Its options are ChartName, ComputeGeometryOf, ApplyFunction, SqrtAlgorithm.";


(* ::Input::Initialization:: *)
AssignComponents::usage =
"AssignComponents[ tensors, components ] takes two ordered lists, and assigns the elements of the second list as components of the elements of the first list, which must be abstract tensors in xAct. Its options are ChartName and ApplyFunction. It works up to rank-2 tensors.";


(* ::Input::Initialization:: *)
ExportDecomposition::usage =
"ExportDecomposition[ e, m0, p, q, gA, fA, g\[CapitalLambda], f\[CapitalLambda], gback, fback, hback ] takes as arguments the following quantities (in order),

- The triangular vielbein of \[Gamma], e
- The triangular vielbein of \[CurlyPhi], m0
- The vector p
- The shift vector of the geometric mean q
- The extrinsic curvatures in operator form (up-down indices), gA, fA
- The conformal connections, g\[CapitalLambda], f\[CapitalLambda]
- The background metrics for \[Gamma], \[CurlyPhi] and \[Chi]

The above quantities constitu\[Section]te the ansatz specified by the user. By default, it exports the decomposition, not the equations, in the form of lists which are independent from xAct. It has four options, ChartName, ApplyFunction, NameFile, OtherQuantities. The option OtherQuantities allows to export more objects, e.g., the equations.

If the option OtherQuantities is used, one should load the exported file as follows,

Get[<NameFile>];
MapThread[Set,{$$names,$$values}];

If the second line is not evaluated, the variables specified in the option OtherQuantities are not set to their values.";


(* ::Input::Initialization:: *)
NameFile::usage =
"NameFile is an option for ExportDecomposition and ExportDecomposition$xAct. It has to be set to the name of the exported .m file. The default value is StringReplace[''Bimetric_decomposition_''<>DateString[''ISODateTime'']<>''.m'','':''\[Rule]''-'']";


(* ::Input::Initialization:: *)
OtherQuantities::usage =
"OtherQuantities is an option for ExportDecomposition. It has to be set to a list of two lists. The first list contains the names of the exported variables, whereas the second list contains the quantities to be exported in the variables. The default value is {Nothing, Nothing}.";


(* ::Input::Initialization:: *)
ExportDecomposition$xAct::usage =
"ExportDecomposition$xAct[] takes no argument. It exports all the information concerning the abstract tensors and their components in xAct. It has one option, NameFile.";


(* ::Input::Initialization:: *)
PrintDecomposition::usage =
"PrintDecomposition[] takes no argument. It prints the main variables in the bimetric (c)BSSN decomposition. It has three options, ChartName, ApplyFunction, Of.";


(* ::Input::Initialization:: *)
Of::usage =
"Of is an option for PrintDecomposition which allows to specify what quantities to compute. It has to be set to a list containing the symbols of the sectors whose quantities we want to print. The default value is {g, f, h}, i.e., it prints the decomposition in the g-sector, the f-sector, the h-sector and the Lorentz frame. Nothe that the symbol h refers both to the h-sector and to the Lorentz frame.";


(* ::Input::Initialization:: *)
ToConcrete::usage =
"ToConcrete[ expr ] writes the xAct abstract expression expr into components. It has four options, ChartName, ConcreteSources, ConcreteRicci and ConcreteShift. The last three are boolean options allowing to specify the level of instantiation; their default value is False.";


(* ::Input::Initialization:: *)
ToConcrete$Basic::usage =
"ToConcrete$Basic[ expr ] writes the xAct abstract expression expr into components. It has one options, ChartName.";


(* ::Input::Initialization:: *)
ToConcreteSources::usage =
"ToConcreteSources[ expr ] instantiate the components of the bimetric sources in the expression expr. Its options are ChartName and ApplyFunction.";


(* ::Input::Initialization:: *)
ToConcreteRicci::usage =
"ToConcreteRicci[ expr ] instantiates the components of the Ricci tensors in the evolution equations for the extrinsic curvatures, if they are contained in expr. Its options are ChartName and ApplyFunction.";


(* ::Input::Initialization:: *)
ToConcreteShift::usage =
"ToConcreteShift[ expr ] instantiates the components of the shift vectors of g and f in expr. Its options are ChartName and ApplyFunction.";


(* ::Input::Initialization:: *)
ConcreteSources::usage =
"ConcreteSources is a boolean option for ToConcrete. If True, it makes ToConcrete to instantiate the components of the bimetric sources in the expression expr.";


(* ::Input::Initialization:: *)
ConcreteRicci::usage =
"ConcreteRicci is a boolean option for ToConcrete. If True, it makes ToConcrete to instantiate the components of the Ricci tensors in the evolution equations for the extrinsic curvatures, if they are contained in expr.";


(* ::Input::Initialization:: *)
ConcreteShift::usage =
"ConcreteShift is a boolean option for ToConcrete. If True, it makes ToConcrete to instantiate the components of the shift vectors of g and f in expr.";


(* ::Input::Initialization:: *)
<<xAct`xTensor`
<<xAct`xCoba`
<<xAct`ShowTime1`
<<xAct`TexAct`
$PrePrint=ScreenDollarIndices;
$CVVerbose=False;
$DefInfoQ=$UndefInfoQ=False;
SetOptions[MetricCompute,Verbose->False];
$xCobaCacheVerbose=False;
Unprotect[InChart];
$Assumptions={};
SetDirectory[NotebookDirectory[]];


(* ::Input::Initialization:: *)
Print[xAct`xCore`Private`bars];
Print["
Package bimEX, bimetric exact computations in 3+1 formalism
Copyright (C) 2019 Francesco Torsello
--------------------------------------------------------------------------------
This program is free software; you can redistribute it and/or modify\[IndentingNewLine] it under the terms of the GNU General Public License as published\[IndentingNewLine] by the Free Software Foundation; either version 3 of the License,\[IndentingNewLine]  or (at your option) any later version.
--------------------------------------------------------------------------------
This program is distributed WITHOUT ANY WARRANTY; without even the implied warranty of\[IndentingNewLine] MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\[IndentingNewLine] General Public License for more details.
--------------------------------------------------------------------------------
You should have received a copy of the GNU General Public License\[IndentingNewLine] along with this program; if not, write to the Free Software\[IndentingNewLine] Foundation, Inc., 59 Temple Place-Suite 330, Boston, MA 02111-1307,\[IndentingNewLine]  USA.
"];
Print[xAct`xCore`Private`bars];


(* ::Input::Initialization:: *)
Clear[SafeSimplification]
SafeSimplification[expr_]:=Simplify@ToCanonical[expr,UseMetricOnVBundle->None]


(* ::Input::Initialization:: *)
DefManifold[\[CapitalSigma]t,3,{i,j,k,q,r,s}]


(* ::Input::Initialization:: *)
DefParameter[t]


(* ::Input::Initialization:: *)
DefParameter[g\[Digamma],PrintAs->"\!\(\*
StyleBox[\"\[Perpendicular]\",\nFontColor->RGBColor[0, 0, 1]]\)"]
DefParameter[f\[Digamma],PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"\[Perpendicular]\", \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)"]
DefParameter[h\[Digamma],PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"\[Perpendicular]\", \"^\"],\nFontColor->RGBColor[0., 0.5019607843137255, 0.]]\)"]


(* ::Input::Initialization:: *)
$Ksign=-1;


(* ::Input::Initialization:: *)
$Vsign=-1;


(* ::Input::Initialization:: *)
DefConstantSymbol[\[Kappa]g,PrintAs->"\!\(\*
StyleBox[SubscriptBox[\"\[Kappa]\", \"g\"],\nFontColor->RGBColor[0, 0, 1]]\)"]
DefConstantSymbol[\[Kappa]f,PrintAs->"\!\(\*
StyleBox[SubscriptBox[\"\[Kappa]\", \"f\"],\nFontColor->RGBColor[1., 0.2901960784313726, 0.2901960784313726]]\)"]


(* ::Input::Initialization:: *)
Quiet@DefInertHead[\[Beta]]
gCD[i_][\[Beta][j_]]:=0;
fCD[i_][\[Beta][j_]]:=0;
\[Chi]CD[i_][\[Beta][j_]]:=0;
gCDc[i_][\[Beta][j_]]:=0;
fCDc[i_][\[Beta][j_]]:=0;
\[Chi]CDc[i_][\[Beta][j_]]:=0;


(* ::Input::Initialization:: *)
$Assumptions=Union@Flatten@Append[$Assumptions,{\[Beta][0]\[Element]Reals,\[Beta][1]\[Element]Reals,\[Beta][2]\[Element]Reals,\[Beta][3]\[Element]Reals,\[Beta][4]\[Element]Reals}];


(* ::Input::Initialization:: *)
DefMetric[1,\[Gamma][-i,-j],gCD,SymbolOfCovD->{"\!\(\*
StyleBox[\";\",\nFontColor->RGBColor[0, 0, 1]]\)","\!\(\*
StyleBox[\"D\",\nFontColor->RGBColor[0, 0, 1]]\)"},PrintAs->"\!\(\*
StyleBox[\"\[Gamma]\",\nFontColor->RGBColor[0, 0, 1]]\)",OtherDependencies->{t,g\[Digamma],f\[Digamma],h\[Digamma]}]//Quiet


(* ::Input::Initialization:: *)
gCD[i_][t]:=0;
gCD[i_][g\[Digamma]]:=0;
gCD[i_][f\[Digamma]]:=0;
gCD[i_][h\[Digamma]]:=0;


(* ::Input::Initialization:: *)
DefMetric[1,\[Gamma]c[-i,-j],gCDc,SymbolOfCovD->{"\!\(\*
StyleBox[\"|\",\nFontColor->RGBColor[0, 0, 1]]\)","\!\(\*
StyleBox[OverscriptBox[\"D\", \"_\"],\nFontColor->RGBColor[0, 0, 1]]\)"},PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"\[Gamma]\", \"_\"],\nFontColor->RGBColor[0, 0, 1]]\)",OtherDependencies->{t,g\[Digamma],f\[Digamma],h\[Digamma]}]//Quiet


(* ::Input::Initialization:: *)
DefTensor[det\[Gamma]c[],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"\[CapitalDelta]\", \"_\"],\nFontColor->RGBColor[0, 0, 1]]\)"]


(* ::Input::Initialization:: *)
gCDc[i_][t]:=0;
gCDc[i_][g\[Digamma]]:=0;
gCDc[i_][f\[Digamma]]:=0;
gCDc[i_][h\[Digamma]]:=0;


(* ::Input::Initialization:: *)
DefTensor[gLap[],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[\"\[Alpha]\",\nFontColor->RGBColor[0, 0, 1]]\)"]


(* ::Input::Initialization:: *)
DefTensor[gShi[i],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[\"N\",\nFontColor->RGBColor[0, 0, 1]]\)"]


(* ::Input::Initialization:: *)
DefTensor[gconf[],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[\"\[Phi]\",\nFontColor->RGBColor[0, 0, 1]]\)"]


(* ::Input::Initialization:: *)
DefTensor[gK[-i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},Symmetric[{-i,-j}],PrintAs->"\!\(\*
StyleBox[\"K\",\nFontColor->RGBColor[0, 0, 1]]\)"]


(* ::Input::Initialization:: *)
DefTensor[gA[-i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},Symmetric[{-i,-j}],PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"A\", \"_\"],\nFontColor->RGBColor[0, 0, 1]]\)"]


(* ::Input::Initialization:: *)
DefTensor[TrgK[],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"K\",\nFontColor->RGBColor[0, 0, 1]], \"_\"],\nFontColor->RGBColor[0, 0, 1]]\)"]


(* ::Input::Initialization:: *)
DefTensor[TrgA[],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[\"\[ScriptCapitalA]\",\nFontColor->RGBColor[0, 0, 1]]\)"]


(* ::Input::Initialization:: *)
DefTensor[g\[CapitalLambda][i],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[\"\[CapitalLambda]\",\nFontColor->RGBColor[0, 0, 1]]\)"]


(* ::Input::Initialization:: *)
DefTensor[gR[-i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[\"\[DoubleStruckCapitalR]\",\nFontColor->RGBColor[0, 0, 1]]\)"]


(* ::Input::Initialization:: *)
DefTensor[gC[i,-j,-k],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[\"C\",\nFontColor->RGBColor[0, 0, 1]]\)"]


(* ::Input::Initialization:: *)
DefMetric[1,gback[-i,-j],gCDback,SymbolOfCovD->{"\!\(\*
StyleBox[\"'\",\nFontColor->RGBColor[0, 0, 1]]\)","\!\(\*
StyleBox[OverscriptBox[\"\[Del]\", 
RowBox[{\"g\", \" \", \"b\"}]],\nFontColor->RGBColor[0, 0, 1]]\)"},PrintAs->"\!\(\*
StyleBox[SubscriptBox[
StyleBox[\"\[Gamma]\",\nFontColor->RGBColor[0, 0, 1]], \"back\"],\nFontColor->RGBColor[0, 0, 1]]\)",OtherDependencies->{t,g\[Digamma],f\[Digamma],h\[Digamma]}]//Quiet


(* ::Input::Initialization:: *)
gCDback[i_][t]:=0;


(* ::Input::Initialization:: *)
DefTensor[grhob[],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[SubscriptBox[\"\[Rho]\", \"b\"],\nFontColor->RGBColor[0, 0, 1]]\)"]


(* ::Input::Initialization:: *)
DefTensor[gjb[i],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[SubscriptBox[\"j\", \"b\"],\nFontColor->RGBColor[0, 0, 1]]\)"]


(* ::Input::Initialization:: *)
DefTensor[gJb[-i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[SubscriptBox[\"J\", \"b\"],\nFontColor->RGBColor[0, 0, 1]]\)"]


(* ::Input::Initialization:: *)
DefTensor[grhobc[],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[SubscriptBox[\"\[Rho]\", \"b\"], \"_\"],\nFontColor->RGBColor[0, 0, 1]]\)"]


(* ::Input::Initialization:: *)
DefTensor[gjbc[i],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[SubscriptBox[\"j\", \"b\"], \"_\"],\nFontColor->RGBColor[0, 0, 1]]\)"]


(* ::Input::Initialization:: *)
DefTensor[gJbc[-i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[SubscriptBox[\"J\", \"b\"], \"_\"],\nFontColor->RGBColor[0, 0, 1]]\)"]


(* ::Input::Initialization:: *)
DefTensor[grho[],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[\"\[Rho]\",\nFontColor->RGBColor[0, 0, 1]]\)"]


(* ::Input::Initialization:: *)
DefTensor[gj[i],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[\"j\",\nFontColor->RGBColor[0, 0, 1]]\)"]


(* ::Input::Initialization:: *)
DefTensor[gJ[-i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[\"J\",\nFontColor->RGBColor[0, 0, 1]]\)"]


(* ::Input::Initialization:: *)
DefTensor[e[i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[\"e\",\nFontColor->RGBColor[0, 0, 1]]\)"]


(* ::Input::Initialization:: *)
DefTensor[ec[i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"e\",\nFontColor->RGBColor[0, 0, 1]], \"_\"],\nFontColor->RGBColor[0, 0, 1]]\)"]


(* ::Input::Initialization:: *)
DefTensor[Inve[i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*SuperscriptBox[
StyleBox[\"e\",\nFontColor->RGBColor[0, 0, 1]], 
StyleBox[
RowBox[{\"-\", \"1\"}],\nFontColor->RGBColor[0, 0, 1]]]\)"]


(* ::Input::Initialization:: *)
DefTensor[Invec[i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*SuperscriptBox[
StyleBox[OverscriptBox[
StyleBox[\"e\",\nFontColor->RGBColor[0, 0, 1]], \"_\"],\nFontColor->RGBColor[0, 0, 1]], 
StyleBox[
RowBox[{\"-\", \"1\"}],\nFontColor->RGBColor[0, 0, 1]]]\)"]


(* ::Input::Initialization:: *)
DefTensor[gn[i],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[\"n\",\nFontColor->RGBColor[0, 0, 1]]\)"]


(* ::Input::Initialization:: *)
DefTensor[gnc[i],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"n\", \"_\"],\nFontColor->RGBColor[0, 0, 1]]\)"]


(* ::Input::Initialization:: *)
DefTensor[gQ[i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[\"\[ScriptCapitalQ]\",\nFontColor->RGBColor[0, 0, 1]]\)"]


(* ::Input::Initialization:: *)
DefTensor[gB[i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[\"\[ScriptCapitalB]\",\nFontColor->RGBColor[0, 0, 1]]\)"]


(* ::Input::Initialization:: *)
DefTensor[gD[i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[\"\[ScriptCapitalD]\",\nFontColor->RGBColor[0, 0, 1]]\)"]


(* ::Input::Initialization:: *)
DefTensor[gU[i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[\"\[ScriptCapitalU]\",\nFontColor->RGBColor[0, 0, 1]]\)"]


(* ::Input::Initialization:: *)
DefTensor[gQc[i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"\[ScriptCapitalQ]\", \"_\"],\nFontColor->RGBColor[0, 0, 1]]\)"]


(* ::Input::Initialization:: *)
DefTensor[gBc[i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"\[ScriptCapitalB]\", \"_\"],\nFontColor->RGBColor[0, 0, 1]]\)"]


(* ::Input::Initialization:: *)
DefTensor[gDc[i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"\[ScriptCapitalD]\", \"_\"],\nFontColor->RGBColor[0, 0, 1]]\)"]


(* ::Input::Initialization:: *)
DefTensor[gUc[i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"\[ScriptCapitalU]\", \"_\"],\nFontColor->RGBColor[0, 0, 1]]\)"]


(* ::Input::Initialization:: *)
DefMetric[1,\[CurlyPhi][-i,-j],fCD,SymbolOfCovD->{"\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)","\!\(\*
StyleBox[OverscriptBox[\"D\", \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)"},PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"\[CurlyPhi]\", \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)",OtherDependencies->{t,f\[Digamma]}]//Quiet


(* ::Input::Initialization:: *)
fCD[i_][t]:=0;
fCD[i_][g\[Digamma]]:=0;
fCD[i_][f\[Digamma]]:=0;
fCD[i_][h\[Digamma]]:=0;


(* ::Input::Initialization:: *)
DefMetric[1,\[CurlyPhi]c[-i,-j],fCDc,SymbolOfCovD->{"\!\(\*
StyleBox[\":\",\nFontColor->RGBColor[1, 0, 0]]\)","\!\(\*
StyleBox[OverscriptBox[\"D\", \"^\"],\nFontColor->RGBColor[1, 0, 0]]\)"},PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"\[CurlyPhi]\", \"^\"],\nFontColor->RGBColor[1, 0, 0]]\)",OtherDependencies->{t,f\[Digamma]}]//Quiet


(* ::Input::Initialization:: *)
DefTensor[det\[CurlyPhi]c[],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"\[CapitalDelta]\", \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)"]


(* ::Input::Initialization:: *)
fCDc[i_][t]:=0;
fCDc[i_][g\[Digamma]]:=0;
fCDc[i_][f\[Digamma]]:=0;
fCDc[i_][h\[Digamma]]:=0;


(* ::Input::Initialization:: *)
DefTensor[fLap[],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"\[Alpha]\", \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)"]


(* ::Input::Initialization:: *)
DefTensor[fShi[i],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[\"M\",\nFontColor->RGBColor[1, 0, 0]]\)"]


(* ::Input::Initialization:: *)
DefTensor[fconf[],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[\"\[Psi]\",\nFontColor->RGBColor[1, 0, 0]]\)"]


(* ::Input::Initialization:: *)
DefTensor[fK[-i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},Symmetric[{-i,-j}],PrintAs->"\!\(\*
StyleBox[\"K\",\nFontColor->RGBColor[1, 0, 0]]\)"]


(* ::Input::Initialization:: *)
DefTensor[fA[-i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},Symmetric[{-i,-j}],PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"A\", \"^\"],\nFontColor->RGBColor[1, 0, 0]]\)"]


(* ::Input::Initialization:: *)
DefTensor[TrfK[],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"K\", \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)"]


(* ::Input::Initialization:: *)
DefTensor[TrfA[],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"\[ScriptCapitalA]\", \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)"]


(* ::Input::Initialization:: *)
DefTensor[f\[CapitalLambda][i],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"\[CapitalLambda]\", \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)"]


(* ::Input::Initialization:: *)
DefTensor[fR[-i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"\[DoubleStruckCapitalR]\",\nFontColor->RGBColor[1, 0, 0]], \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)"]


(* ::Input::Initialization:: *)
DefTensor[fC[i,-j,-k],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"C\", \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)"]


(* ::Input::Initialization:: *)
DefMetric[1,fback[-i,-j],fCDback,SymbolOfCovD->{"\!\(\*
StyleBox[\"'\",\nFontColor->RGBColor[1, 0, 0]]\)","\!\(\*
StyleBox[OverscriptBox[\"\[Del]\", 
RowBox[{\"f\", \" \", \"b\"}]],\nFontColor->RGBColor[1, 0, 0]]\)"},PrintAs->"\!\(\*
StyleBox[SubscriptBox[\"\[CurlyPhi]\", \"back\"],\nFontColor->RGBColor[1, 0, 0]]\)",OtherDependencies->{t,f\[Digamma]}]//Quiet


(* ::Input::Initialization:: *)
fCDback[i_][t]:=0;


(* ::Input::Initialization:: *)
DefTensor[frhob[],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[SubscriptBox[\"\[Rho]\", \"b\"], \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)"]


(* ::Input::Initialization:: *)
DefTensor[fjb[i],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[SubscriptBox[\"j\", \"b\"], \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)"]


(* ::Input::Initialization:: *)
DefTensor[fJb[-i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[SubscriptBox[\"J\", \"b\"], \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)"]


(* ::Input::Initialization:: *)
DefTensor[frhobc[],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[SubscriptBox[\"\[Rho]\", \"b\"], \"^\"],\nFontColor->RGBColor[1, 0, 0]]\)"]


(* ::Input::Initialization:: *)
DefTensor[fjbc[i],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[SubscriptBox[\"j\", \"b\"], \"^\"],\nFontColor->RGBColor[1, 0, 0]]\)"]


(* ::Input::Initialization:: *)
DefTensor[fJbc[-i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[SubscriptBox[\"J\", \"b\"], \"^\"],\nFontColor->RGBColor[1, 0, 0]]\)"]


(* ::Input::Initialization:: *)
DefTensor[frho[],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"\[Rho]\", \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)"]


(* ::Input::Initialization:: *)
DefTensor[fj[i],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"j\", \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)"]


(* ::Input::Initialization:: *)
DefTensor[fJ[-i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"J\", \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)"]


(* ::Input::Initialization:: *)
DefTensor[mTr[i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[UnderscriptBox[\"m\", \"_\"], \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)"]


(* ::Input::Initialization:: *)
DefTensor[mTrc[i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[UnderscriptBox[\"m\", \"_\"], \"^\"],\nFontColor->RGBColor[1, 0, 0]]\)"]


(* ::Input::Initialization:: *)
DefTensor[InvmTr[i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*SuperscriptBox[
StyleBox[OverscriptBox[UnderscriptBox[\"m\", \"_\"], \"~\"],\nFontColor->RGBColor[1, 0, 0]], 
StyleBox[
RowBox[{\"-\", \"1\"}],\nFontColor->RGBColor[1, 0, 0]]]\)"]


(* ::Input::Initialization:: *)
DefTensor[InvmTrc[i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[SuperscriptBox[
StyleBox[OverscriptBox[UnderscriptBox[\"m\", \"_\"], \"^\"],\nFontColor->RGBColor[1, 0, 0]], 
RowBox[{\"-\", \"1\"}]],\nFontColor->RGBColor[1, 0, 0]]\)"]


(* ::Input::Initialization:: *)
DefTensor[m[i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"m\", \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)"]


(* ::Input::Initialization:: *)
DefTensor[mc[i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"m\", \"^\"],\nFontColor->RGBColor[1, 0, 0]]\)"]


(* ::Input::Initialization:: *)
DefTensor[Invm[i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*SuperscriptBox[
StyleBox[OverscriptBox[\"m\", \"~\"],\nFontColor->RGBColor[1, 0, 0]], 
StyleBox[
RowBox[{\"-\", \"1\"}],\nFontColor->RGBColor[1, 0, 0]]]\)"]


(* ::Input::Initialization:: *)
DefTensor[Invmc[i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[SuperscriptBox[
StyleBox[OverscriptBox[\"m\", \"^\"],\nFontColor->RGBColor[1, 0, 0]], 
RowBox[{\"-\", \"1\"}]],\nFontColor->RGBColor[1, 0, 0]]\)"]


(* ::Input::Initialization:: *)
DefTensor[fn[i],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"n\", \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)"]


(* ::Input::Initialization:: *)
DefTensor[fnc[i],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"n\", \"^\"],\nFontColor->RGBColor[1, 0, 0]]\)"]


(* ::Input::Initialization:: *)
DefTensor[fQ[i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"\[ScriptCapitalQ]\", \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)"]


(* ::Input::Initialization:: *)
DefTensor[fB[i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"\[ScriptCapitalB]\", \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)"]


(* ::Input::Initialization:: *)
DefTensor[fD[i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"\[ScriptCapitalD]\", \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)"]


(* ::Input::Initialization:: *)
DefTensor[fU[i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"\[ScriptCapitalU]\", \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)"]


(* ::Input::Initialization:: *)
DefTensor[fQc[i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"\[ScriptCapitalQ]\", \"^\"],\nFontColor->RGBColor[1, 0, 0]]\)"]


(* ::Input::Initialization:: *)
DefTensor[fBc[i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"\[ScriptCapitalB]\", \"^\"],\nFontColor->RGBColor[1, 0, 0]]\)"]


(* ::Input::Initialization:: *)
DefTensor[fDc[i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"\[ScriptCapitalD]\", \"^\"],\nFontColor->RGBColor[1, 0, 0]]\)"]


(* ::Input::Initialization:: *)
DefTensor[fUc[i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"\[ScriptCapitalU]\", \"^\"],\nFontColor->RGBColor[1, 0, 0]]\)"]


(* ::Input::Initialization:: *)
DefMetric[1,\[Chi][-i,-j],\[Chi]CD,SymbolOfCovD->{"\!\(\*
StyleBox[\"*\",\nFontColor->RGBColor[0., 0.5019607843137255, 0.]]\)","\!\(\*
StyleBox[OverscriptBox[\"D\", \"\[Chi]\"],\nFontColor->RGBColor[0., 0.5019607843137255, 0.]]\)"},PrintAs->"\!\(\*
StyleBox[\"\[Chi]\",\nFontColor->RGBColor[0., 0.5019607843137255, 0.]]\)",OtherDependencies->{t,g\[Digamma],f\[Digamma],h\[Digamma]}]//Quiet


(* ::Input::Initialization:: *)
DefMetric[1,\[Chi]c[-i,-j],\[Chi]CDc,SymbolOfCovD->{"\!\(\*
StyleBox[\"*\",\nFontColor->RGBColor[0., 0.5019607843137255, 0.]]\)","\!\(\*
StyleBox[OverscriptBox[\"D\", OverscriptBox[\"\[Chi]\", \"^\"]],\nFontColor->RGBColor[0., 0.5019607843137255, 0.]]\)"},PrintAs->"\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"\[Chi]\",\nFontColor->RGBColor[0., 0.5019607843137255, 0.]], \"^\"],\nFontColor->RGBColor[0., 0.5019607843137255, 0.]]\)",OtherDependencies->{t,g\[Digamma],f\[Digamma],h\[Digamma]}]//Quiet


(* ::Input::Initialization:: *)
\[Chi]CD[i_][t]:=0;
\[Chi]CD[i_][g\[Digamma]]:=0;
\[Chi]CD[i_][f\[Digamma]]:=0;
\[Chi]CD[i_][h\[Digamma]]:=0;
\[Chi]CDc[i_][t]:=0;
\[Chi]CDc[i_][g\[Digamma]]:=0;
\[Chi]CDc[i_][f\[Digamma]]:=0;
\[Chi]CDc[i_][h\[Digamma]]:=0;


(* ::Input::Initialization:: *)
DefTensor[hLap[],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[\"H\",\nFontColor->RGBColor[0., 0.5019607843137255, 0.]]\)"]


(* ::Input::Initialization:: *)
DefTensor[hShi[i],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[\"q\",\nFontColor->RGBColor[0., 0.5019607843137255, 0.]]\)"]


(* ::Input::Initialization:: *)
DefTensor[hn[i],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[\"n\",\nFontColor->RGBColor[0., 0.5019607843137255, 0.]]\)"]


(* ::Input::Initialization:: *)
DefTensor[hnc[i],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"n\",\nFontColor->RGBColor[0., 0.5019607843137255, 0.]], \"^\"],\nFontColor->RGBColor[0., 0.5019607843137255, 0.]]\)"]


(* ::Input::Initialization:: *)
DefTensor[h\[CapitalLambda][i],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"\[CapitalLambda]\",\nFontColor->RGBColor[0., 0.5019607843137255, 0.]], \"^\"],\nFontColor->RGBColor[0., 0.5019607843137255, 0.]]\)"]


(* ::Input::Initialization:: *)
DefTensor[hR[-i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"\[DoubleStruckCapitalR]\", \"^\"],\nFontColor->RGBColor[0., 0.5019607843137255, 0.]]\)"]


(* ::Input::Initialization:: *)
DefTensor[hC[i,-j,-k],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"C\", \"^\"],\nFontColor->RGBColor[0., 0.5019607843137255, 0.]]\)"]


(* ::Input::Initialization:: *)
DefMetric[1,hback[-i,-j],hCDback,SymbolOfCovD->{"\!\(\*
StyleBox[\"'\",\nFontColor->RGBColor[0, 0, 1]]\)","\!\(\*
StyleBox[OverscriptBox[\"\[Del]\", 
RowBox[{\"h\", \" \", \"b\"}]],\nFontColor->RGBColor[0., 0.5019607843137255, 0.]]\)"},PrintAs->"\!\(\*
StyleBox[SubscriptBox[\"\[Chi]\", \"back\"],\nFontColor->RGBColor[0., 0.5019607843137255, 0.25098039215686274`]]\)",OtherDependencies->{t,g\[Digamma],f\[Digamma],h\[Digamma]}]//Quiet


(* ::Input::Initialization:: *)
hCDback[i_][t]:=0;


(* ::Input::Initialization:: *)
DefTensor[\[Iota][i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[\"\[Iota]\",\nFontColor->RGBColor[0., 0.5019607843137255, 0.25098039215686274`]]\)"]


(* ::Input::Initialization:: *)
DefTensor[\[Iota]c[i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"\[Iota]\", \"^\"],\nFontColor->RGBColor[0., 0.5019607843137255, 0.]]\)"]


(* ::Input::Initialization:: *)
DefTensor[Inv\[Iota][i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*SuperscriptBox[
StyleBox[\"\[Iota]\",\nFontColor->RGBColor[0., 0.5019607843137255, 0.25098039215686274`]], 
StyleBox[
RowBox[{\"-\", \"1\"}],\nFontColor->RGBColor[0., 0.5019607843137255, 0.]]]\)"]


(* ::Input::Initialization:: *)
DefTensor[Inv\[Iota]c[i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[SuperscriptBox[OverscriptBox[\"\[Iota]\", \"^\"], 
RowBox[{\"-\", \"1\"}]],\nFontColor->RGBColor[0., 0.5019607843137255, 0.]]\)"]


(* ::Input::Initialization:: *)
DefTensor[\[CapitalLambda][i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[\"\[DoubleStruckCapitalL]\",\nFontColor->RGBColor[1, 0.5, 0]]\)"]


(* ::Input::Initialization:: *)
DefTensor[p[i],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[\"p\",\nFontColor->RGBColor[1, 0.5, 0]]\)"]


(* ::Input::Initialization:: *)
DefTensor[v[i],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[\"v\",\nFontColor->RGBColor[1, 0.5, 0]]\)"]


(* ::Input::Initialization:: *)
DefTensor[R[i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[\"R\",\nFontColor->RGBColor[1, 0.5, 0]]\)"]


(* ::Input::Initialization:: *)
DefTensor[\[Delta][-i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[\"\[Delta]\",\nFontColor->RGBColor[1, 0.5, 0]]\)"]


(* ::Input::Initialization:: *)
DefTensor[Id[i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[\"I\",\nFontColor->RGBColor[1, 0.5, 0]]\)"]


(* ::Input::Initialization:: *)
DefTensor[Lt[],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[\"\[Lambda]\",\nFontColor->RGBColor[1, 0.5, 0]]\)"]


(* ::Input::Initialization:: *)
InstantiateConstraints={};


(* ::Input::Initialization:: *)
DefTensor[cBSSN$gHamiltonianConstraint[],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"\[GothicCapitalH]\", \"_\"],\nFontColor->RGBColor[0, 0, 1]]\)"];
Instantiate$gHC=IndexRule[cBSSN$gHamiltonianConstraint[],-gA[-i,-j]gA[-q,-r]Inv\[Gamma]c[i,q]Inv\[Gamma]c[j,r]+2/3 (TrgK[]+TrgA[])^2+1/3 TrgA[]^2+E^(-4gconf[]) (RicciScalargCDc[]-8Inv\[Gamma]c[i,j]gCDc[-i][gconf[]]gCDc[-j][gconf[]]-8Inv\[Gamma]c[i,j]gCDc[-i][gCDc[-j][gconf[]]])-2\[Kappa]g(grho[]+grhob[])];
AppendTo[InstantiateConstraints,Instantiate$gHC];


(* ::Input::Initialization:: *)
DefTensor[cBSSN$fHamiltonianConstraint[],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"\[GothicCapitalH]\", \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)"];
Instantiate$fHC=IndexRule[cBSSN$fHamiltonianConstraint[],-fA[-i,-j]fA[-q,-r]Inv\[CurlyPhi]c[i,q]Inv\[CurlyPhi]c[j,r]+2/3 (TrfK[]+TrfA[])^2+1/3 TrfA[]^2+E^(-4fconf[]) (RicciScalarfCDc[]-8Inv\[CurlyPhi]c[i,j]fCDc[-i][fconf[]]fCDc[-j][fconf[]]-8Inv\[CurlyPhi]c[i,j]fCDc[-i][fCDc[-j][fconf[]]])-2\[Kappa]f(frho[]+frhob[])];
AppendTo[InstantiateConstraints,Instantiate$fHC];


(* ::Input::Initialization:: *)
DefTensor[cBSSN$gMomentumConstraint[i],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"\[GothicCapitalC]\", \"_\"],\nFontColor->RGBColor[0, 0, 1]]\)"];
Instantiate$gMC=IndexRule[cBSSN$gMomentumConstraint[i_],1/Sqrt[Det\[Gamma]c[]] E^(-4gconf[]) gCDback[-j][Sqrt[Det\[Gamma]c[]]gA[i,j]]+6E^(-4gconf[]) (gA[i,j]-TrgA[] Inv\[Gamma]c[i,j]/3)PD[-j][gconf[]]-E^(-4gconf[]) Inv\[Gamma]c[i,j]PD[-j][2/3 TrgK[]+TrgA[]]+E^(-4gconf[]) gC[i,-j,-k]gA[j,k]-\[Kappa]g (gj[i]+gjb[i])];
AppendTo[InstantiateConstraints,Instantiate$gMC];


(* ::Input::Initialization:: *)
DefTensor[cBSSN$fMomentumConstraint[i],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"\[GothicCapitalC]\", \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)"];
Instantiate$fMC=IndexRule[cBSSN$fMomentumConstraint[i_],1/Sqrt[Det\[CurlyPhi]c[]] E^(-4fconf[]) fCDback[-j][Sqrt[Det\[CurlyPhi]c[]]fA[i,j]]+6E^(-4fconf[]) (fA[i,j]-TrfA[] Inv\[CurlyPhi]c[i,j]/3)PD[-j][fconf[]]-E^(-4fconf[]) Inv\[CurlyPhi]c[i,j]PD[-j][2/3 TrfK[]+TrfA[]]+E^(-4fconf[]) fC[i,-j,-k]fA[j,k]-\[Kappa]f (fj[i]+fjb[i])];
AppendTo[InstantiateConstraints,Instantiate$fMC];


(* ::Input::Initialization:: *)
DefTensor[cBSSN$ConservationLaw[],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[SubscriptBox[
StyleBox[OverscriptBox[
StyleBox[\"\[GothicCapitalC]\",\nFontColor->RGBColor[0.5, 0, 0.5]], 
StyleBox[\"_\",\nFontColor->RGBColor[0.5, 0, 0.5]]],\nFontColor->RGBColor[0, 0, 1]], 
StyleBox[
RowBox[{\"(\", \"2\", \")\"}],\nFontSize->7,\nFontWeight->\"Plain\"]],\nFontColor->RGBColor[0.5, 0, 0.5]]\)"];
Instantiate$CL=IndexRule[cBSSN$ConservationLaw[],gU[i,-j](gCD[-i][gn[j]]+$Ksign gK[j,-i])+fU[i,-j](fCD[-i][fn[j]]-$Ksign fK[j,-i])-gCD[-i][gU[i,-j]gn[j]]];
AppendTo[InstantiateConstraints,Instantiate$CL];


(* ::Input::Initialization:: *)
DefTensor[cBSSN$gConstraint\[CapitalLambda][i],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"\[GothicCapitalL]\", \"_\"],\nFontColor->RGBColor[0, 0, 1]]\)"];
Instantiate$g\[CapitalLambda]C=IndexRule[cBSSN$gConstraint\[CapitalLambda][i_],Inv\[Gamma]c[j,k]gC[i,-j,-k]-g\[CapitalLambda][i]];
AppendTo[InstantiateConstraints,Instantiate$g\[CapitalLambda]C];


(* ::Input::Initialization:: *)
DefTensor[cBSSN$fConstraint\[CapitalLambda][i],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"\[GothicCapitalL]\", \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)"];
Instantiate$f\[CapitalLambda]C=IndexRule[cBSSN$fConstraint\[CapitalLambda][i_],Inv\[CurlyPhi]c[j,k]fC[i,-j,-k]-f\[CapitalLambda][i]];
AppendTo[InstantiateConstraints,Instantiate$f\[CapitalLambda]C];


(* ::Input::Initialization:: *)
InstantiateEvolution={};


(* ::Input::Initialization:: *)
DefTensor[cBSSN$gEvolutionEquationconf[],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[SubscriptBox[
StyleBox[OverscriptBox[\"\[GothicCapitalE]\", \"_\"],\nFontColor->RGBColor[0, 0, 1]], \"\[Phi]\"],\nFontColor->RGBColor[0, 0, 1]]\)"];
Instantiate$EEgconf=IndexRule[cBSSN$gEvolutionEquationconf[],-(ParamD[t][gconf[]]-LieD[gShi[i]][gconf[]])-1/12 ParamD[g\[Digamma]][Log[det\[Gamma]c[]]]-1/6 gLap[](TrgK[]+TrgA[])//LieDToCovD[#,gCDc]&];
AppendTo[InstantiateEvolution,Instantiate$EEgconf];


(* ::Input::Initialization:: *)
DefTensor[cBSSN$fEvolutionEquationconf[],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[SubscriptBox[
StyleBox[OverscriptBox[\"\[GothicCapitalE]\", \"~\"],\nFontColor->RGBColor[1, 0, 0]], \"\[Psi]\"],\nFontColor->RGBColor[1, 0, 0]]\)"];
Instantiate$EEfconf=IndexRule[cBSSN$fEvolutionEquationconf[],-(ParamD[t][fconf[]]-LieD[fShi[i]][fconf[]])-1/12 ParamD[f\[Digamma]][Log[det\[CurlyPhi]c[]]]-1/6 fLap[](TrfK[]+TrfA[])//LieDToCovD[#,fCDc]&];
AppendTo[InstantiateEvolution,Instantiate$EEfconf];


(* ::Input::Initialization:: *)
DefTensor[cBSSN$gEvolutionEquationK[],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[SubscriptBox[
StyleBox[OverscriptBox[\"\[GothicCapitalE]\", \"_\"],\nFontColor->RGBColor[0, 0, 1]], OverscriptBox[\"K\", \"_\"]],\nFontColor->RGBColor[0, 0, 1]]\)"];
Instantiate$EEgK=IndexRule[cBSSN$gEvolutionEquationK[],-(ParamD[t][TrgK[]]-LieD[gShi[i]][TrgK[]])-ParamD[g\[Digamma]][TrgA[]]+gLap[]/3 (TrgK[]^2+2TrgK[]TrgA[])+\[Kappa]g/2 gLap[](\[Gamma][q,r]gJ[-q,-r]+grho[]+\[Gamma][q,r]gJb[-q,-r]+grhob[])+gLap[]gA[-i,-j]gA[-q,-r]Inv\[Gamma]c[i,q]Inv\[Gamma]c[j,r]-E^(-4gconf[]) (Inv\[Gamma]c[q,r]gCDc[-q][gCDc[-r][gLap[]]]+2Inv\[Gamma]c[q,r]gCDc[-q][gLap[]]gCDc[-r][gconf[]])//LieDToCovD[#,gCDc]&];
AppendTo[InstantiateEvolution,Instantiate$EEgK];


(* ::Input::Initialization:: *)
DefTensor[cBSSN$fEvolutionEquationK[],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[SubscriptBox[
StyleBox[OverscriptBox[\"\[GothicCapitalE]\", \"~\"],\nFontColor->RGBColor[1, 0, 0]], OverscriptBox[\"K\", \"~\"]],\nFontColor->RGBColor[1, 0, 0]]\)"];
Instantiate$EEfK=IndexRule[cBSSN$fEvolutionEquationK[],-(ParamD[t][TrfK[]]-LieD[fShi[i]][TrfK[]])-ParamD[f\[Digamma]][TrfA[]]+fLap[]/3 (TrfK[]^2+2TrfK[]TrfA[])+\[Kappa]f/2 fLap[](Inv\[CurlyPhi][q,r]fJ[-q,-r]+frho[]+Inv\[CurlyPhi][q,r]fJb[-q,-r]+frhob[])+fLap[]fA[-i,-j]fA[-q,-r]Inv\[CurlyPhi]c[i,q]Inv\[CurlyPhi]c[j,r]-E^(-4fconf[]) (Inv\[CurlyPhi]c[q,r]fCDc[-q][fCDc[-r][fLap[]]]+2Inv\[CurlyPhi]c[q,r]fCDc[-q][fLap[]]fCDc[-r][fconf[]])//LieDToCovD[#,fCDc]&];
AppendTo[InstantiateEvolution,Instantiate$EEfK];


(* ::Input::Initialization:: *)
DefTensor[cBSSN$gEvolutionEquation\[Gamma]c[-i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[SubscriptBox[
StyleBox[OverscriptBox[\"\[GothicCapitalE]\", \"_\"],\nFontColor->RGBColor[0, 0, 1]], OverscriptBox[\"\[Gamma]\", \"_\"]],\nFontColor->RGBColor[0, 0, 1]]\)"];
Instantiate$EE\[Gamma]c=IndexRule[cBSSN$gEvolutionEquation\[Gamma]c[-i_,-j_],-(ParamD[t][\[Gamma]c[-i,-j]]-LieD[gShi[i]][\[Gamma]c[-i,-j]])+1/3 \[Gamma]c[-i,-j]ParamD[g\[Digamma]][Log[det\[Gamma]c[]]]-2gLap[]gA[-i,-j]+2/3 gLap[]\[Gamma]c[-i,-j]TrgA[]//LieDToCovD[#,gCDc]&];
AppendTo[InstantiateEvolution,Instantiate$EE\[Gamma]c];


(* ::Input::Initialization:: *)
DefTensor[cBSSN$fEvolutionEquation\[CurlyPhi]c[-i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[SubscriptBox[
StyleBox[OverscriptBox[\"\[GothicCapitalE]\", \"~\"],\nFontColor->RGBColor[1, 0, 0]], OverscriptBox[\"\[CurlyPhi]\", \"~\"]],\nFontColor->RGBColor[1, 0, 0]]\)"];
Instantiate$EE\[CurlyPhi]c=IndexRule[cBSSN$fEvolutionEquation\[CurlyPhi]c[-i_,-j_],-(ParamD[t][\[CurlyPhi]c[-i,-j]]-LieD[fShi[i]][\[CurlyPhi]c[-i,-j]])+1/3 \[CurlyPhi]c[-i,-j]ParamD[f\[Digamma]][Log[det\[CurlyPhi]c[]]]-2fLap[]fA[-i,-j]+2/3 fLap[]\[CurlyPhi]c[-i,-j]TrfA[]//LieDToCovD[#,fCDc]&];
AppendTo[InstantiateEvolution,Instantiate$EE\[CurlyPhi]c];


(* ::Input::Initialization:: *)
Clear[InstantiateRicci$Abstract];
InstantiateRicci$Abstract[expr_]:=Block[{gR,fR},
gR[i_,j_]:=Module[{d1=NewIndexIn[Tangent\[CapitalSigma]t],d2=NewIndexIn[Tangent\[CapitalSigma]t],d3=NewIndexIn[Tangent\[CapitalSigma]t],d4=NewIndexIn[Tangent\[CapitalSigma]t]},
-1/2 Inv\[Gamma]c[d1,d2]gCDback[-d1][gCDback[-d2][\[Gamma]c[i,j]]]+1/2 (\[Gamma]c[-d1,i]gCDback[j][g\[CapitalLambda][d1]]+\[Gamma]c[-d1,j]gCDback[i][g\[CapitalLambda][d1]])-1/2 (Inv\[Gamma]c[d1,d2]\[Gamma]c[-d3,i]RiemanngCDback[j,-d1,-d2,d3]+Inv\[Gamma]c[d1,d2]\[Gamma]c[-d3,j]RiemanngCDback[i,-d1,-d2,d3])+1/2 Inv\[Gamma]c[d2,d3]gC[d1,-d2,-d3](\[Gamma]c[i,-d4]gC[d4,j,-d1]+\[Gamma]c[j,-d4]gC[d4,i,-d1])+Inv\[Gamma]c[d1,d2](gC[d3,-d1,i]Inv\[Gamma]c[j,-d4]gC[d4,-d3,-d2]+gC[d3,-d1,j]Inv\[Gamma]c[i,-d4]gC[d4,-d3,-d2]+gC[d3,i,-d1]Inv\[Gamma]c[-d3,-d4]gC[d4,j,-d2])
];
fR[i_,j_]:=Module[{d1=NewIndexIn[Tangent\[CapitalSigma]t],d2=NewIndexIn[Tangent\[CapitalSigma]t],d3=NewIndexIn[Tangent\[CapitalSigma]t],d4=NewIndexIn[Tangent\[CapitalSigma]t]},
-1/2 Inv\[CurlyPhi]c[d1,d2]fCDback[-d1][fCDback[-d2][\[CurlyPhi]c[i,j]]]+1/2 (\[CurlyPhi]c[-d1,i]fCDback[j][f\[CapitalLambda][d1]]+\[CurlyPhi]c[-d1,j]fCDback[i][f\[CapitalLambda][d1]])-1/2 (Inv\[CurlyPhi]c[d1,d2]\[CurlyPhi]c[-d3,i]RiemannfCDback[j,-d1,-d2,d3]+Inv\[CurlyPhi]c[d1,d2]\[CurlyPhi]c[-d3,j]RiemannfCDback[i,-d1,-d2,d3])+1/2 Inv\[CurlyPhi]c[d2,d3]fC[d1,-d2,-d3](\[CurlyPhi]c[i,-d4]fC[d4,j,-d1]+\[CurlyPhi]c[j,-d4]fC[d4,i,-d1])+Inv\[CurlyPhi]c[d1,d2](fC[d3,-d1,i]Inv\[CurlyPhi]c[j,-d4]fC[d4,-d3,-d2]+fC[d3,-d1,j]Inv\[CurlyPhi]c[i,-d4]fC[d4,-d3,-d2]+fC[d3,i,-d1]Inv\[CurlyPhi]c[-d3,-d4]fC[d4,j,-d2])
];
expr
]


(* ::Input::Initialization:: *)
Clear[InstantiateRicci$Concrete];
InstantiateRicci$Concrete[expr_]:=Block[{gR\[FilledSmallCircle],fR\[FilledSmallCircle]},
gR\[FilledSmallCircle]=Function[{},
(Module[{d1=NewIndexIn[Tangent\[CapitalSigma]t],d2=NewIndexIn[Tangent\[CapitalSigma]t],d3=NewIndexIn[Tangent\[CapitalSigma]t],d4=NewIndexIn[Tangent\[CapitalSigma]t]},
-1/2 Inv\[Gamma]c[d1,d2]gCDback[-d1][gCDback[-d2][\[Gamma]c[i,j]]]+1/2 (\[Gamma]c[-d1,i]gCDback[j][g\[CapitalLambda][d1]]+\[Gamma]c[-d1,j]gCDback[i][g\[CapitalLambda][d1]])-1/2 (Inv\[Gamma]c[d1,d2]\[Gamma]c[-d3,i]RiemanngCDback[j,-d1,-d2,d3]+Inv\[Gamma]c[d1,d2]\[Gamma]c[-d3,j]RiemanngCDback[i,-d1,-d2,d3])+1/2 Inv\[Gamma]c[d2,d3]gC[d1,-d2,-d3](\[Gamma]c[i,-d4]gC[d4,j,-d1]+\[Gamma]c[j,-d4]gC[d4,i,-d1])+Inv\[Gamma]c[d1,d2](gC[d3,-d1,i]Inv\[Gamma]c[j,-d4]gC[d4,-d3,-d2]+gC[d3,-d1,j]Inv\[Gamma]c[i,-d4]gC[d4,-d3,-d2]+gC[d3,i,-d1]Inv\[Gamma]c[-d3,-d4]gC[d4,j,-d2])
]//ToConcrete)
];
fR\[FilledSmallCircle]=Module[{d1=NewIndexIn[Tangent\[CapitalSigma]t],d2=NewIndexIn[Tangent\[CapitalSigma]t],d3=NewIndexIn[Tangent\[CapitalSigma]t],d4=NewIndexIn[Tangent\[CapitalSigma]t]},
-1/2 Inv\[CurlyPhi]c[d1,d2]fCDback[-d1][fCDback[-d2][\[CurlyPhi]c[i,j]]]+1/2 (\[CurlyPhi]c[-d1,i]fCDback[j][f\[CapitalLambda][d1]]+\[CurlyPhi]c[-d1,j]fCDback[i][f\[CapitalLambda][d1]])-1/2 (Inv\[CurlyPhi]c[d1,d2]\[CurlyPhi]c[-d3,i]RiemannfCDback[j,-d1,-d2,d3]+Inv\[CurlyPhi]c[d1,d2]\[CurlyPhi]c[-d3,j]RiemannfCDback[i,-d1,-d2,d3])+1/2 Inv\[CurlyPhi]c[d2,d3]fC[d1,-d2,-d3](\[CurlyPhi]c[i,-d4]fC[d4,j,-d1]+\[CurlyPhi]c[j,-d4]fC[d4,i,-d1])+Inv\[CurlyPhi]c[d1,d2](fC[d3,-d1,i]Inv\[CurlyPhi]c[j,-d4]fC[d4,-d3,-d2]+fC[d3,-d1,j]Inv\[CurlyPhi]c[i,-d4]fC[d4,-d3,-d2]+fC[d3,i,-d1]Inv\[CurlyPhi]c[-d3,-d4]fC[d4,j,-d2])
];
expr
]


(* ::Input::Initialization:: *)
DefTensor[cBSSN$gEvolutionEquationA[-i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[SubscriptBox[
StyleBox[OverscriptBox[\"\[GothicCapitalE]\", \"_\"],\nFontColor->RGBColor[0, 0, 1]], OverscriptBox[\"A\", \"_\"]],\nFontColor->RGBColor[0, 0, 1]]\)"];
Instantiate$EEgA=IndexRule[cBSSN$gEvolutionEquationA[-i_,-j_],-(ParamD[t][gA[-i,-j]]-LieD[gShi[k]][gA[-i,-j]])+1/3 gA[-i,-j]ParamD[g\[Digamma]][Log[det\[Gamma]c[]]]+
1/3 \[Gamma]c[-i,-j]ParamD[g\[Digamma]][TrgA[]]
-2gLap[]gA[-i,-q]Inv\[Gamma]c[q,r]gA[-r,-j]+
gLap[]gA[-i,-j]TrgK[]+(gLap[]TrgA[])/3 (5gA[-i,-j]-TrgA[]\[Gamma]c[-i,-j]-TrgK[]\[Gamma]c[-i,-j])+
E^(-4gconf[]) (-(2gLap[]gCDc[-j][gCDc[-i][gconf[]]]-1/3 2gLap[]\[Gamma]c[-i,-j]Inv\[Gamma]c[q,r]gCDc[-q][gCDc[-r][gconf[]]])+(4gLap[]gCDc[-i][gconf[]]gCDc[-j][gconf[]]-4/3 gLap[]\[Gamma]c[-i,-j]Inv\[Gamma]c[q,r]gCDc[-q][gconf[]]gCDc[-r][gconf[]])+(2gCDc[-i][gconf[]]gCDc[-j][gLap[]]+2gCDc[-j][gconf[]]gCDc[-i][gLap[]]-4/3 \[Gamma]c[-i,-j]Inv\[Gamma]c[q,r]gCDc[-q][gconf[]]gCDc[-r][gLap[]])-(gCDc[-j][gCDc[-i][gLap[]]]-(\[Gamma]c[-i,-j]Inv\[Gamma]c[q,r]gCDc[-q][gCDc[-r][gLap[]]])/3)+
gLap[](gR[-i,-j]-\[Gamma]c[-i,-j]Inv\[Gamma]c[q,r] gR[-q,-r]/3)-\[Kappa]g gLap[](gJ[-i,-j]-(\[Gamma][q,r]gJ[-q,-r]\[Gamma][-i,-j])/3+gJb[-i,-j]-(\[Gamma][q,r]gJb[-q,-r]\[Gamma][-i,-j])/3))//LieDToCovD[#,gCDc]&];
AppendTo[InstantiateEvolution,Instantiate$EEgA];


(* ::Input::Initialization:: *)
DefTensor[cBSSN$fEvolutionEquationA[-i,-j],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[SubscriptBox[
StyleBox[OverscriptBox[\"\[GothicCapitalE]\", \"~\"],\nFontColor->RGBColor[1, 0, 0]], OverscriptBox[\"A\", \"~\"]],\nFontColor->RGBColor[1, 0, 0]]\)"];
Instantiate$EEfA=IndexRule[cBSSN$fEvolutionEquationA[-i_,-j_],-(ParamD[t][fA[-i,-j]]-LieD[fShi[k]][fA[-i,-j]])+1/3 fA[-i,-j]ParamD[f\[Digamma]][Log[det\[CurlyPhi]c[]]]+
1/3 \[CurlyPhi]c[-i,-j]ParamD[f\[Digamma]][TrfA[]]
-2fLap[]fA[-i,-q]Inv\[CurlyPhi]c[q,r]fA[-r,-j]+
fLap[]fA[-i,-j]TrfK[]+(fLap[]TrfA[])/3 (5fA[-i,-j]-TrfA[]\[CurlyPhi]c[-i,-j]-TrfK[]\[CurlyPhi]c[-i,-j])+
E^(-4fconf[]) (-(2fLap[]fCDc[-j][fCDc[-i][fconf[]]]-1/3 2fLap[]\[CurlyPhi]c[-i,-j]Inv\[CurlyPhi]c[q,r]fCDc[-q][fCDc[-r][fconf[]]])+(4fLap[]fCDc[-i][fconf[]]fCDc[-j][fconf[]]-4/3 fLap[]\[CurlyPhi]c[-i,-j]Inv\[CurlyPhi]c[q,r]fCDc[-q][fconf[]]fCDc[-r][fconf[]])+(2fCDc[-i][fconf[]]fCDc[-j][fLap[]]+2fCDc[-j][fconf[]]fCDc[-i][fLap[]]-4/3 \[CurlyPhi]c[-i,-j]Inv\[CurlyPhi]c[q,r]fCDc[-q][fconf[]]fCDc[-r][fLap[]])-(fCDc[-j][fCDc[-i][fLap[]]]-(\[CurlyPhi]c[-i,-j]Inv\[CurlyPhi]c[q,r]fCDc[-q][fCDc[-r][fLap[]]])/3)+
fLap[](fR[-i,-j]-\[CurlyPhi]c[-i,-j]Inv\[CurlyPhi]c[q,r] fR[-q,-r]/3)-\[Kappa]f fLap[](fJ[-i,-j]-(Inv\[CurlyPhi][q,r]fJ[-q,-r]\[CurlyPhi][-i,-j])/3+fJb[-i,-j]-(Inv\[CurlyPhi][q,r]fJb[-q,-r]\[CurlyPhi][-i,-j])/3))//LieDToCovD[#,fCDc]&];
AppendTo[InstantiateEvolution,Instantiate$EEfA];


(* ::Input::Initialization:: *)
DefTensor[cBSSN$gEvolutionEquation\[CapitalLambda][i],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[SubscriptBox[
StyleBox[OverscriptBox[\"\[GothicCapitalE]\", \"_\"],\nFontColor->RGBColor[0, 0, 1]], \"\[CapitalLambda]\"],\nFontColor->RGBColor[0, 0, 1]]\)"];
Instantiate$EEg\[CapitalLambda]=IndexRule[cBSSN$gEvolutionEquation\[CapitalLambda][i_],-(ParamD[t][g\[CapitalLambda][i]]-LieD[gShi[k]][g\[CapitalLambda][i]])
+Inv\[Gamma]c[j,k]gCDback[-j][gCDback[-k][gShi[i]]]+-\[Gamma]c[j,k]RiemanngCDback[i,-j,-k,-q]gShi[q]-1/3 g\[CapitalLambda][i]ParamD[g\[Digamma]][Log[det\[Gamma]c[]]]-1/6 Inv\[Gamma]c[i,j]PD[-j][ParamD[g\[Digamma]][Log[det\[Gamma]c[]]]]-2(gA[k,j]-1/3 TrgA[]Inv\[Gamma]c[k,j])(Id[i,-k]PD[-j][gLap[]]-6gLap[]Id[i,-k]PD[-j][gconf[]]
-gLap[]gC[i,-j,-k])-4/3 gLap[]Inv\[Gamma]c[i,j]PD[-j][TrgK[]+TrgA[]]-2\[Kappa]g gLap[]E^(4gconf[]) (gj[i]+gjb[i])//LieDToCovD[#,gCDc]&];
AppendTo[InstantiateEvolution,Instantiate$EEg\[CapitalLambda]];


(* ::Input::Initialization:: *)
DefTensor[cBSSN$fEvolutionEquation\[CapitalLambda][i],{\[CapitalSigma]t,t,g\[Digamma],f\[Digamma],h\[Digamma]},PrintAs->"\!\(\*
StyleBox[SubscriptBox[
StyleBox[OverscriptBox[\"\[GothicCapitalE]\", \"~\"],\nFontColor->RGBColor[1, 0, 0]], \"\[CapitalLambda]\"],\nFontColor->RGBColor[1, 0, 0]]\)"];
Instantiate$EEf\[CapitalLambda]=IndexRule[cBSSN$fEvolutionEquation\[CapitalLambda][i_],-(ParamD[t][f\[CapitalLambda][i]]-LieD[fShi[k]][f\[CapitalLambda][i]])
+Inv\[CurlyPhi]c[j,k]fCDback[-j][fCDback[-k][fShi[i]]]+-\[CurlyPhi]c[j,k]RiemannfCDback[i,-j,-k,-q]fShi[q]-1/3 f\[CapitalLambda][i]ParamD[f\[Digamma]][Log[det\[CurlyPhi]c[]]]-1/6 Inv\[CurlyPhi]c[i,j]PD[-j][ParamD[f\[Digamma]][Log[det\[CurlyPhi]c[]]]]-2(fA[k,j]-1/3 TrfA[]Inv\[CurlyPhi]c[k,j])(Id[i,-k]PD[-j][fLap[]]-6fLap[]Id[i,-k]PD[-j][fconf[]]
-fLap[]fC[i,-j,-k])-4/3 fLap[]Inv\[CurlyPhi]c[i,j]PD[-j][TrfK[]+TrfA[]]-2\[Kappa]f fLap[]E^(4fconf[]) (fj[i]+fjb[i])//LieDToCovD[#,fCDc]&];
AppendTo[InstantiateEvolution,Instantiate$EEf\[CapitalLambda]];


(* ::Input::Initialization:: *)
InstantiatePDE=InstantiateConstraints~Join~InstantiateEvolution;


(* ::Input::Initialization:: *)
Subscript[\[ScriptCapitalE], n_][X_]:=If[n<0\[Or]n>Length@X,0,
SymmetricPolynomial[n,Eigenvalues[X]]
]


(* ::Input::Initialization:: *)
Subscript[Y, n_][X_]:=If[n<0\[Or]n>=Length@X,0,
If[n==0,IdentityMatrix[Length@X],
\!\(
\*UnderoverscriptBox[\(\[Sum]\), \(k = 0\), \(n\)]\(
\*SuperscriptBox[\((\(-1\))\), \(n + k\)] 
\(\*SubscriptBox[\(\[ScriptCapitalE]\), \(k\)]\)[X] MatrixPower[X, n - k]\)\)
]]


(* ::Input::Initialization:: *)
Clear[UpperTriangularQ]
UpperTriangularQ[m_?SquareMatrixQ]:=VectorQ[Range[Length@m-1],m[[#+1, ;;#]]==ConstantArray[0,#]&]


(* ::Input::Initialization:: *)
\[Delta]\[FilledRectangle]=({
 {1, 0, 0},
 {0, 1, 0},
 {0, 0, 1}
});


(* ::Input::Initialization:: *)
Clear[DefChartScalars]
DefChartScalars[ChartName_,{x1_,x2_,x3_},DefChartOptions:OptionsPattern[{{ChartAssumptions->Nothing},DefChart}]]:=Module[{},
$Assumptions=Union@Flatten@Append[$Assumptions,OptionValue[ChartAssumptions]];
If[ValueQ@DefaultChart,Null,DefaultChart=ChartName];
If[ChartsOfManifold[\[CapitalSigma]t]=={},FirstChart=ChartName;Protect[FirstChart];,Null];
DefChart[ChartName,\[CapitalSigma]t,{1,2,3},{x1,x2,x3},Evaluate@FilterRules[{DefChartOptions},Options[DefChart]]];
PDOfBasis[ChartName][i_][t]:=0;
PDOfBasis[ChartName][i_][g\[Digamma]]:=0;
PDOfBasis[ChartName][i_][f\[Digamma]]:=0;
PDOfBasis[ChartName][i_][h\[Digamma]]:=0;
PDOfBasis[ChartName][\[Beta][j_]]:=0;
AllComponentValues[Id[{i,ChartName},-{j,ChartName}],\[Delta]\[FilledRectangle]];
AllComponentValues[Id[-{i,ChartName},{j,ChartName}],\[Delta]\[FilledRectangle]];
]


(* ::Input::Initialization:: *)
SequenceOfCoordinates[ChartName_:DefaultChart]:=Sequence@@ScalarsOfChart[ChartName]


(* ::Input::Initialization:: *)
DefScalarFunction[gLap\[FilledSmallCircle],PrintAs->"\!\(\*
StyleBox[\"\[Alpha]\",\nFontColor->RGBColor[0, 0, 1]]\)"];
DefScalarFunction[fLap\[FilledSmallCircle],PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"\[Alpha]\", \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)"];
DefScalarFunction[hLap\[FilledSmallCircle],PrintAs->"\!\(\*
StyleBox[\"H\",\nFontColor->RGBColor[0., 0.5019607843137255, 0.25098039215686274`]]\)"];
DefScalarFunction[gShi1,PrintAs->"\!\(\*
StyleBox[SuperscriptBox[
StyleBox[\"N\",\nFontColor->RGBColor[0, 0, 1]], \"1\"],\nFontColor->RGBColor[0, 0, 1]]\)"];
DefScalarFunction[gShi2,PrintAs->"\!\(\*
StyleBox[SuperscriptBox[
StyleBox[\"N\",\nFontColor->RGBColor[0, 0, 1]], \"2\"],\nFontColor->RGBColor[0, 0, 1]]\)"];
DefScalarFunction[gShi3,PrintAs->"\!\(\*
StyleBox[SuperscriptBox[
StyleBox[\"N\",\nFontColor->RGBColor[0, 0, 1]], \"3\"],\nFontColor->RGBColor[0, 0, 1]]\)"];
DefScalarFunction[fShi1,PrintAs->"\!\(\*
StyleBox[SuperscriptBox[
StyleBox[\"M\",\nFontColor->RGBColor[1, 0, 0]], \"1\"],\nFontColor->RGBColor[1, 0, 0]]\)"];
DefScalarFunction[fShi2,PrintAs->"\!\(\*
StyleBox[SuperscriptBox[
StyleBox[\"M\",\nFontColor->RGBColor[1, 0, 0]], \"2\"],\nFontColor->RGBColor[1, 0, 0]]\)"];
DefScalarFunction[fShi3,PrintAs->"\!\(\*
StyleBox[SuperscriptBox[
StyleBox[\"M\",\nFontColor->RGBColor[1, 0, 0]], \"3\"],\nFontColor->RGBColor[1, 0, 0]]\)"];
DefScalarFunction[gconf\[FilledSmallCircle],PrintAs->"\!\(\*
StyleBox[\"\[Phi]\",\nFontColor->RGBColor[0, 0, 1]]\)"];
DefScalarFunction[fconf\[FilledSmallCircle],PrintAs->"\!\(\*
StyleBox[\"\[Psi]\",\nFontColor->RGBColor[1, 0, 0]]\)"];
DefScalarFunction[TrgK\[FilledSmallCircle],PrintAs->"\!\(\*
StyleBox[\"K\",\nFontColor->RGBColor[0, 0, 1]]\)"];
DefScalarFunction[TrfK\[FilledSmallCircle],PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"K\", \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)"];
DefScalarFunction[TrgA\[FilledSmallCircle],PrintAs->"\!\(\*
StyleBox[\"\[ScriptCapitalA]\",\nFontColor->RGBColor[0, 0, 1]]\)"];
DefScalarFunction[TrfA\[FilledSmallCircle],PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"\[ScriptCapitalA]\", \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)"];
DefScalarFunction[det\[Gamma]c\[FilledSmallCircle],PrintAs->"\!\(\*
StyleBox[\"\[CapitalDelta]\",\nFontColor->RGBColor[0, 0, 1]]\)"];
DefScalarFunction[det\[CurlyPhi]c\[FilledSmallCircle],PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"\[CapitalDelta]\", \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)"];
DefScalarFunction[\[Lambda]\[FilledSmallCircle],PrintAs->"\!\(\*
StyleBox[\"\[Lambda]\",\nFontColor->RGBColor[1, 0.5, 0]]\)"];
DefScalarFunction[grhob\[FilledSmallCircle]];
DefScalarFunction[frhob\[FilledSmallCircle]];
DefScalarFunction[grho\[FilledSmallCircle],PrintAs->"\!\(\*
StyleBox[\"\[Rho]\",\nFontColor->RGBColor[0, 0, 1]]\)"];
DefScalarFunction[frho\[FilledSmallCircle],PrintAs->"\!\(\*
StyleBox[OverscriptBox[\"\[Rho]\", \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)"];
DefScalarFunction[gj1\[FilledSmallCircle],PrintAs->"\!\(\*SubscriptBox[
StyleBox[\"j\",\nFontColor->RGBColor[0, 0, 1]], 
StyleBox[\"1\",\nFontColor->RGBColor[0, 0, 1]]]\)"];
DefScalarFunction[gj2\[FilledSmallCircle],PrintAs->"\!\(\*SubscriptBox[
StyleBox[\"j\",\nFontColor->RGBColor[0, 0, 1]], 
StyleBox[\"2\",\nFontColor->RGBColor[0, 0, 1]]]\)"];
DefScalarFunction[gj3\[FilledSmallCircle],PrintAs->"\!\(\*SubscriptBox[
StyleBox[\"j\",\nFontColor->RGBColor[0, 0, 1]], 
StyleBox[\"3\",\nFontColor->RGBColor[0, 0, 1]]]\)"];
DefScalarFunction[fj1\[FilledSmallCircle],PrintAs->"\!\(\*
StyleBox[OverscriptBox[SubscriptBox[\"j\", \"1\"], \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)"];
DefScalarFunction[fj2\[FilledSmallCircle],PrintAs->"\!\(\*
StyleBox[OverscriptBox[SubscriptBox[\"j\", \"2\"], \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)"];
DefScalarFunction[fj3\[FilledSmallCircle],PrintAs->"\!\(\*
StyleBox[OverscriptBox[SubscriptBox[\"j\", \"3\"], \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)"];
DefScalarFunction[gJ11\[FilledSmallCircle],PrintAs->"\!\(\*
StyleBox[SubscriptBox[SuperscriptBox[
StyleBox[\"J\",\nFontColor->RGBColor[0, 0, 1]], \"1\"], 
StyleBox[\"1\",\nFontColor->RGBColor[0, 0, 1]]],\nFontColor->RGBColor[0, 0, 1]]\)"];
DefScalarFunction[gJ12\[FilledSmallCircle],PrintAs->"\!\(\*
StyleBox[SubscriptBox[SuperscriptBox[
StyleBox[\"J\",\nFontColor->RGBColor[0, 0, 1]], \"1\"], 
StyleBox[\"2\",\nFontColor->RGBColor[0, 0, 1]]],\nFontColor->RGBColor[0, 0, 1]]\)"];
DefScalarFunction[gJ13\[FilledSmallCircle],PrintAs->"\!\(\*
StyleBox[SubscriptBox[SuperscriptBox[
StyleBox[\"J\",\nFontColor->RGBColor[0, 0, 1]], \"1\"], 
StyleBox[\"3\",\nFontColor->RGBColor[0, 0, 1]]],\nFontColor->RGBColor[0, 0, 1]]\)"];
DefScalarFunction[gJ21\[FilledSmallCircle],PrintAs->"\!\(\*
StyleBox[SubscriptBox[SuperscriptBox[
StyleBox[\"J\",\nFontColor->RGBColor[0, 0, 1]], \"2\"], 
StyleBox[\"1\",\nFontColor->RGBColor[0, 0, 1]]],\nFontColor->RGBColor[0, 0, 1]]\)"];
DefScalarFunction[gJ22\[FilledSmallCircle],PrintAs->"\!\(\*SubscriptBox[
StyleBox[SuperscriptBox[
StyleBox[\"J\",\nFontColor->RGBColor[0, 0, 1]], \"2\"],\nFontColor->RGBColor[0, 0, 1]], 
StyleBox[\"2\",\nFontColor->RGBColor[0, 0, 1]]]\)"];
DefScalarFunction[gJ23\[FilledSmallCircle],PrintAs->"\!\(\*
StyleBox[SubscriptBox[SuperscriptBox[
StyleBox[\"J\",\nFontColor->RGBColor[0, 0, 1]], \"2\"], 
StyleBox[\"3\",\nFontColor->RGBColor[0, 0, 1]]],\nFontColor->RGBColor[0, 0, 1]]\)"];
DefScalarFunction[gJ31\[FilledSmallCircle],PrintAs->"\!\(\*
StyleBox[SubscriptBox[SuperscriptBox[
StyleBox[\"J\",\nFontColor->RGBColor[0, 0, 1]], \"3\"], 
StyleBox[\"1\",\nFontColor->RGBColor[0, 0, 1]]],\nFontColor->RGBColor[0, 0, 1]]\)"];
DefScalarFunction[gJ32\[FilledSmallCircle],PrintAs->"\!\(\*
StyleBox[SubscriptBox[SuperscriptBox[
StyleBox[\"J\",\nFontColor->RGBColor[0, 0, 1]], \"3\"], 
StyleBox[\"2\",\nFontColor->RGBColor[0, 0, 1]]],\nFontColor->RGBColor[0, 0, 1]]\)"];
DefScalarFunction[gJ33\[FilledSmallCircle],PrintAs->"\!\(\*
StyleBox[SubscriptBox[SuperscriptBox[
StyleBox[\"J\",\nFontColor->RGBColor[0, 0, 1]], \"3\"], 
StyleBox[\"3\",\nFontColor->RGBColor[0, 0, 1]]],\nFontColor->RGBColor[0, 0, 1]]\)"];
DefScalarFunction[fJ11\[FilledSmallCircle],PrintAs->"\!\(\*
StyleBox[SubscriptBox[SuperscriptBox[OverscriptBox[\"J\", \"~\"], \"1\"], \"1\"],\nFontColor->RGBColor[1, 0, 0]]\)"];
DefScalarFunction[fJ12\[FilledSmallCircle],PrintAs->"\!\(\*
StyleBox[SubscriptBox[SuperscriptBox[OverscriptBox[\"J\", \"~\"], \"1\"], \"2\"],\nFontColor->RGBColor[1, 0, 0]]\)"];
DefScalarFunction[fJ13\[FilledSmallCircle],PrintAs->"\!\(\*
StyleBox[SubscriptBox[SuperscriptBox[OverscriptBox[\"J\", \"~\"], \"1\"], \"3\"],\nFontColor->RGBColor[1, 0, 0]]\)"];
DefScalarFunction[fJ21\[FilledSmallCircle],PrintAs->"\!\(\*
StyleBox[SubscriptBox[SuperscriptBox[OverscriptBox[\"J\", \"~\"], \"2\"], \"1\"],\nFontColor->RGBColor[1, 0, 0]]\)"];
DefScalarFunction[fJ22\[FilledSmallCircle],PrintAs->"\!\(\*
StyleBox[SubscriptBox[SuperscriptBox[OverscriptBox[\"J\", \"~\"], \"2\"], \"2\"],\nFontColor->RGBColor[1, 0, 0]]\)"];
DefScalarFunction[fJ23\[FilledSmallCircle],PrintAs->"\!\(\*
StyleBox[SubscriptBox[SuperscriptBox[OverscriptBox[\"J\", \"~\"], \"2\"], \"3\"],\nFontColor->RGBColor[1, 0, 0]]\)"];
DefScalarFunction[fJ31\[FilledSmallCircle],PrintAs->"\!\(\*
StyleBox[SubscriptBox[SuperscriptBox[OverscriptBox[\"J\", \"~\"], \"3\"], \"1\"],\nFontColor->RGBColor[1, 0, 0]]\)"];
DefScalarFunction[fJ32\[FilledSmallCircle],PrintAs->"\!\(\*
StyleBox[SubscriptBox[SuperscriptBox[OverscriptBox[\"J\", \"~\"], \"3\"], \"2\"],\nFontColor->RGBColor[1, 0, 0]]\)"];
DefScalarFunction[fJ33\[FilledSmallCircle],PrintAs->"\!\(\*
StyleBox[SubscriptBox[SuperscriptBox[OverscriptBox[\"J\", \"~\"], \"3\"], \"3\"],\nFontColor->RGBColor[1, 0, 0]]\)"];
DefScalarFunction[gR11\[FilledSmallCircle],PrintAs->"\!\(\*SubscriptBox[
StyleBox[\"\[DoubleStruckCapitalR]\",\nFontColor->RGBColor[0, 0, 1]], 
StyleBox[\"11\",\nFontColor->RGBColor[0, 0, 1]]]\)"];
DefScalarFunction[gR12\[FilledSmallCircle],PrintAs->"\!\(\*SubscriptBox[
StyleBox[\"\[DoubleStruckCapitalR]\",\nFontColor->RGBColor[0, 0, 1]], 
StyleBox[\"12\",\nFontColor->RGBColor[0, 0, 1]]]\)"];
DefScalarFunction[gR13\[FilledSmallCircle],PrintAs->"\!\(\*SubscriptBox[
StyleBox[\"\[DoubleStruckCapitalR]\",\nFontColor->RGBColor[0, 0, 1]], 
StyleBox[\"13\",\nFontColor->RGBColor[0, 0, 1]]]\)"];
DefScalarFunction[gR22\[FilledSmallCircle],PrintAs->"\!\(\*SubscriptBox[
StyleBox[\"\[DoubleStruckCapitalR]\",\nFontColor->RGBColor[0, 0, 1]], 
StyleBox[\"22\",\nFontColor->RGBColor[0, 0, 1]]]\)"];
DefScalarFunction[gR23\[FilledSmallCircle],PrintAs->"\!\(\*SubscriptBox[
StyleBox[\"\[DoubleStruckCapitalR]\",\nFontColor->RGBColor[0, 0, 1]], 
StyleBox[\"23\",\nFontColor->RGBColor[0, 0, 1]]]\)"];
DefScalarFunction[gR33\[FilledSmallCircle],PrintAs->"\!\(\*SubscriptBox[
StyleBox[\"\[DoubleStruckCapitalR]\",\nFontColor->RGBColor[0, 0, 1]], 
StyleBox[\"33\",\nFontColor->RGBColor[0, 0, 1]]]\)"];
DefScalarFunction[fR11\[FilledSmallCircle],PrintAs->"\!\(\*
StyleBox[SubscriptBox[OverscriptBox[\"\[DoubleStruckCapitalR]\", \"~\"], \"11\"],\nFontColor->RGBColor[1, 0, 0]]\)"];
DefScalarFunction[fR12\[FilledSmallCircle],PrintAs->"\!\(\*
StyleBox[SubscriptBox[OverscriptBox[\"\[DoubleStruckCapitalR]\", \"~\"], \"12\"],\nFontColor->RGBColor[1, 0, 0]]\)"];
DefScalarFunction[fR13\[FilledSmallCircle],PrintAs->"\!\(\*
StyleBox[SubscriptBox[OverscriptBox[\"\[DoubleStruckCapitalR]\", \"~\"], \"13\"],\nFontColor->RGBColor[1, 0, 0]]\)"];
DefScalarFunction[fR22\[FilledSmallCircle],PrintAs->"\!\(\*
StyleBox[SubscriptBox[OverscriptBox[\"\[DoubleStruckCapitalR]\", \"~\"], \"22\"],\nFontColor->RGBColor[1, 0, 0]]\)"];
DefScalarFunction[fR23\[FilledSmallCircle],PrintAs->"\!\(\*
StyleBox[SubscriptBox[OverscriptBox[\"\[DoubleStruckCapitalR]\", \"~\"], \"23\"],\nFontColor->RGBColor[1, 0, 0]]\)"];
DefScalarFunction[fR33\[FilledSmallCircle],PrintAs->"\!\(\*
StyleBox[SubscriptBox[OverscriptBox[\"\[DoubleStruckCapitalR]\", \"~\"], \"33\"],\nFontColor->RGBColor[1, 0, 0]]\)"];


(* ::Input::Initialization:: *)
SetOfNames$BeforeDefs=Names["*"];


(* ::Input::Initialization:: *)
v\[FilledUpTriangle][]:=v\[FilledUpTriangle][DefaultChart];
\[CapitalLambda]\[FilledRectangle][]:=\[CapitalLambda]\[FilledRectangle][DefaultChart];

\!\(\*OverscriptBox[\(\[CapitalLambda]\[FilledRectangle]\), \(-1\)]\)[]:=
\!\(\*OverscriptBox[\(\[CapitalLambda]\[FilledRectangle]\), \(-1\)]\)[DefaultChart];
\[CapitalLambda]Sq\[FilledRectangle][]:=\[CapitalLambda]Sq\[FilledRectangle][DefaultChart];
Rbar\[FilledRectangle][]:=Rbar\[FilledRectangle][DefaultChart];
Rbarc\[FilledRectangle][]:=Rbarc\[FilledRectangle][DefaultChart];
R\[FilledRectangle][]:=R\[FilledRectangle][DefaultChart];
Rc\[FilledRectangle][]:=Rc\[FilledRectangle][DefaultChart];
\[Chi]\[FilledSquare][]:=\[Chi]\[FilledSquare][DefaultChart];

\!\(\*OverscriptBox[\(\[Chi]\[FilledSquare]\), \(-1\)]\)[]:=
\!\(\*OverscriptBox[\(\[Chi]\[FilledSquare]\), \(-1\)]\)[DefaultChart];

\!\(\*OverscriptBox[\(\[Chi]\[FilledSquare]\), \(T\)]\)[]:=
\!\(\*OverscriptBox[\(\[Chi]\[FilledSquare]\), \(T\)]\)[DefaultChart];
\[Chi]c\[FilledSquare][]:=\[Chi]c\[FilledSquare][DefaultChart];

\!\(\*OverscriptBox[\(\[Chi]c\[FilledSquare]\), \(-1\)]\)[]:=
\!\(\*OverscriptBox[\(\[Chi]c\[FilledSquare]\), \(-1\)]\)[DefaultChart];

\!\(\*OverscriptBox[\(\[Chi]c\[FilledSquare]\), \(T\)]\)[]:=
\!\(\*OverscriptBox[\(\[Chi]c\[FilledSquare]\), \(T\)]\)[DefaultChart];
\[Chi]\[FilledUpTriangle]\[FilledDownTriangle][]:=\[Chi]\[FilledUpTriangle]\[FilledDownTriangle][DefaultChart];
\[Chi]c\[FilledUpTriangle]\[FilledDownTriangle][]:=\[Chi]c\[FilledUpTriangle]\[FilledDownTriangle][DefaultChart];
\[Chi]\[FilledDownTriangle]\[FilledUpTriangle][]:=\[Chi]\[FilledDownTriangle]\[FilledUpTriangle][DefaultChart];
\[Chi]c\[FilledDownTriangle]\[FilledUpTriangle][]:=\[Chi]c\[FilledDownTriangle]\[FilledUpTriangle][DefaultChart];
i\[FilledRectangle][]:=i\[FilledRectangle][DefaultChart];
ic\[FilledRectangle][]:=ic\[FilledRectangle][DefaultChart];

\!\(\*OverscriptBox[\(i\[FilledRectangle]\), \(-1\)]\)[]:=
\!\(\*OverscriptBox[\(i\[FilledRectangle]\), \(-1\)]\)[DefaultChart];

\!\(\*OverscriptBox[\(ic\[FilledRectangle]\), \(-1\)]\)[]:=
\!\(\*OverscriptBox[\(ic\[FilledRectangle]\), \(-1\)]\)[DefaultChart];
hn\[FilledRectangle][]:=hn\[FilledRectangle][DefaultChart];
hnc\[FilledRectangle][]:=hnc\[FilledRectangle][DefaultChart];
hRb\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle][]:=hRb\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle][DefaultChart];
hRb\[FilledUpTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle][]:=hRb\[FilledUpTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle][DefaultChart];
hC\[FilledUpTriangle]\[FilledDownTriangle]\[FilledDownTriangle][]:=hC\[FilledUpTriangle]\[FilledDownTriangle]\[FilledDownTriangle][DefaultChart];


(* ::Input::Initialization:: *)
e\[FilledRectangle][]:=e\[FilledRectangle][DefaultChart];

\!\(\*OverscriptBox[\(e\[FilledRectangle]\), \(-1\)]\)[]:=
\!\(\*OverscriptBox[\(e\[FilledRectangle]\), \(-1\)]\)[DefaultChart];
\[Gamma]c\[FilledSquare][]:=\[Gamma]c\[FilledSquare][DefaultChart];

\!\(\*OverscriptBox[\(\[Gamma]c\[FilledSquare]\), \(-1\)]\)[]:=
\!\(\*OverscriptBox[\(\[Gamma]c\[FilledSquare]\), \(-1\)]\)[DefaultChart];

\!\(\*OverscriptBox[\(\[Gamma]c\[FilledSquare]\), \(T\)]\)[]:=
\!\(\*OverscriptBox[\(\[Gamma]c\[FilledSquare]\), \(T\)]\)[DefaultChart];
\[Gamma]\[FilledSquare][]:=\[Gamma]\[FilledSquare][DefaultChart];

\!\(\*OverscriptBox[\(\[Gamma]\[FilledSquare]\), \(-1\)]\)[]:=
\!\(\*OverscriptBox[\(\[Gamma]\[FilledSquare]\), \(-1\)]\)[DefaultChart];

\!\(\*OverscriptBox[\(\[Gamma]\[FilledSquare]\), \(T\)]\)[]:=
\!\(\*OverscriptBox[\(\[Gamma]\[FilledSquare]\), \(T\)]\)[DefaultChart];
\[Gamma]\[FilledUpTriangle]\[FilledDownTriangle][]:=\[Gamma]\[FilledUpTriangle]\[FilledDownTriangle][DefaultChart];
\[Gamma]c\[FilledUpTriangle]\[FilledDownTriangle][]:=\[Gamma]c\[FilledUpTriangle]\[FilledDownTriangle][DefaultChart];
\[Gamma]\[FilledDownTriangle]\[FilledUpTriangle][]:=\[Gamma]\[FilledDownTriangle]\[FilledUpTriangle][DefaultChart];
\[Gamma]c\[FilledDownTriangle]\[FilledUpTriangle][]:=\[Gamma]c\[FilledDownTriangle]\[FilledUpTriangle][DefaultChart];
gShi\[FilledUpTriangle][]:=gShi\[FilledUpTriangle][DefaultChart];
gShi\[FilledDownTriangle][]:=gShi\[FilledDownTriangle][DefaultChart];
gShi\[FilledUpTriangle]$Comp[]:=gShi\[FilledUpTriangle]$Comp[DefaultChart];
gShi\[FilledDownTriangle]$Comp[]:=gShi\[FilledDownTriangle]$Comp[DefaultChart];
gA\[FilledUpTriangle]\[FilledDownTriangle][]:=gA\[FilledUpTriangle]\[FilledDownTriangle][DefaultChart];
gA\[FilledUpTriangle]\[FilledUpTriangle][]:=gA\[FilledUpTriangle]\[FilledUpTriangle][DefaultChart];
gA\[FilledDownTriangle]\[FilledDownTriangle][]:=gA\[FilledDownTriangle]\[FilledDownTriangle][DefaultChart];
gA\[FilledDownTriangle]\[FilledUpTriangle][]:=gA\[FilledDownTriangle]\[FilledUpTriangle][DefaultChart];
gK\[FilledUpTriangle]\[FilledDownTriangle][]:=gK\[FilledUpTriangle]\[FilledDownTriangle][DefaultChart];
gK\[FilledUpTriangle]\[FilledUpTriangle][]:=gK\[FilledUpTriangle]\[FilledUpTriangle][DefaultChart];
gK\[FilledDownTriangle]\[FilledDownTriangle][]:=gK\[FilledDownTriangle]\[FilledDownTriangle][DefaultChart];
gK\[FilledDownTriangle]\[FilledUpTriangle][]:=gK\[FilledDownTriangle]\[FilledUpTriangle][DefaultChart];
gn\[FilledUpTriangle][]:=gn\[FilledUpTriangle][DefaultChart];
gQ\[FilledUpTriangle]\[FilledDownTriangle][]:=gQ\[FilledUpTriangle]\[FilledDownTriangle][DefaultChart];
gB\[FilledUpTriangle]\[FilledDownTriangle][]:=gB\[FilledUpTriangle]\[FilledDownTriangle][DefaultChart];
gD\[FilledUpTriangle]\[FilledDownTriangle][]:=gD\[FilledUpTriangle]\[FilledDownTriangle][DefaultChart];
gU\[FilledUpTriangle]\[FilledDownTriangle][]:=gU\[FilledUpTriangle]\[FilledDownTriangle][DefaultChart];
gV\[FilledSmallCircle][]:=gV\[FilledSmallCircle][DefaultChart];
gn\[FilledUpTriangle][]:=gn\[FilledUpTriangle][DefaultChart];
gn\[FilledDownTriangle][]:=gn\[FilledDownTriangle][DefaultChart];
gnc\[FilledUpTriangle][]:=gnc\[FilledUpTriangle][DefaultChart];
gnc\[FilledDownTriangle][]:=gnc\[FilledDownTriangle][DefaultChart];
gQc\[FilledUpTriangle]\[FilledDownTriangle][]:=gQc\[FilledUpTriangle]\[FilledDownTriangle][DefaultChart];
gBc\[FilledUpTriangle]\[FilledDownTriangle][]:=gBc\[FilledUpTriangle]\[FilledDownTriangle][DefaultChart];
gDc\[FilledUpTriangle]\[FilledDownTriangle][]:=gDc\[FilledUpTriangle]\[FilledDownTriangle][DefaultChart];
gUc\[FilledUpTriangle]\[FilledDownTriangle][]:=gUc\[FilledUpTriangle]\[FilledDownTriangle][DefaultChart];
gVc\[FilledSmallCircle][]:=gVc\[FilledSmallCircle][DefaultChart];
grhob\[FilledSmallCircle][]:=grhob\[FilledSmallCircle][DefaultChart];
grhobc\[FilledSmallCircle][]:=grhobc\[FilledSmallCircle][DefaultChart];
gjb\[FilledDownTriangle][]:=gjb\[FilledDownTriangle][DefaultChart];
gjbc\[FilledDownTriangle][]:=gjbc\[FilledDownTriangle][DefaultChart];
gjb\[FilledUpTriangle][]:=gjb\[FilledUpTriangle][DefaultChart];
gjbc\[FilledUpTriangle][]:=gjbc\[FilledUpTriangle][DefaultChart];
gJb\[FilledUpTriangle]\[FilledDownTriangle][]:=gJb\[FilledUpTriangle]\[FilledDownTriangle][DefaultChart];
gJb\[FilledUpTriangle]\[FilledUpTriangle][]:=gJb\[FilledUpTriangle]\[FilledUpTriangle][DefaultChart];
gJb\[FilledDownTriangle]\[FilledDownTriangle][]:=gJb\[FilledDownTriangle]\[FilledDownTriangle][DefaultChart];
gJb\[FilledDownTriangle]\[FilledUpTriangle][]:=gJb\[FilledDownTriangle]\[FilledUpTriangle][DefaultChart];
gJbc\[FilledUpTriangle]\[FilledDownTriangle][]:=gJbc\[FilledUpTriangle]\[FilledDownTriangle][DefaultChart];
gJbc\[FilledUpTriangle]\[FilledUpTriangle][]:=gJbc\[FilledUpTriangle]\[FilledUpTriangle][DefaultChart];
gJbc\[FilledDownTriangle]\[FilledDownTriangle][]:=gJbc\[FilledDownTriangle]\[FilledDownTriangle][DefaultChart];
gJbc\[FilledDownTriangle]\[FilledUpTriangle][]:=gJbc\[FilledDownTriangle]\[FilledUpTriangle][DefaultChart];
gJb\[FilledSmallCircle][]:=gJb\[FilledSmallCircle][DefaultChart];
grho\[FilledSmallCircle][]:=grho\[FilledSmallCircle][DefaultChart];
grhoc\[FilledSmallCircle][]:=grhoc\[FilledSmallCircle][DefaultChart];
gj\[FilledDownTriangle][]:=gj\[FilledDownTriangle][DefaultChart];
gjc\[FilledDownTriangle][]:=gjc\[FilledDownTriangle][DefaultChart];
gj\[FilledUpTriangle][]:=gj\[FilledUpTriangle][DefaultChart];
gjc\[FilledUpTriangle][]:=gjc\[FilledUpTriangle][DefaultChart];
gJ\[FilledUpTriangle]\[FilledDownTriangle][]:=gJ\[FilledUpTriangle]\[FilledDownTriangle][DefaultChart];
gJ\[FilledUpTriangle]\[FilledUpTriangle][]:=gJ\[FilledUpTriangle]\[FilledUpTriangle][DefaultChart];
gJ\[FilledDownTriangle]\[FilledDownTriangle][]:=gJ\[FilledDownTriangle]\[FilledDownTriangle][DefaultChart];
gJ\[FilledDownTriangle]\[FilledUpTriangle][]:=gJ\[FilledDownTriangle]\[FilledUpTriangle][DefaultChart];
gJc\[FilledUpTriangle]\[FilledDownTriangle][]:=gJc\[FilledUpTriangle]\[FilledDownTriangle][DefaultChart];
gJc\[FilledUpTriangle]\[FilledUpTriangle][]:=gJc\[FilledUpTriangle]\[FilledUpTriangle][DefaultChart];
gJc\[FilledDownTriangle]\[FilledDownTriangle][]:=gJc\[FilledDownTriangle]\[FilledDownTriangle][DefaultChart];
gJc\[FilledDownTriangle]\[FilledUpTriangle][]:=gJc\[FilledDownTriangle]\[FilledUpTriangle][DefaultChart];
gJ\[FilledSmallCircle][]:=gJ\[FilledSmallCircle][DefaultChart];
gK\[FilledSmallCircle][]:=gK\[FilledSmallCircle][DefaultChart];
gR\[FilledUpTriangle]\[FilledUpTriangle][]:=gR\[FilledUpTriangle]\[FilledUpTriangle][DefaultChart];
gR\[FilledUpTriangle]\[FilledDownTriangle][]:=gR\[FilledUpTriangle]\[FilledDownTriangle][DefaultChart];
gR\[FilledDownTriangle]\[FilledUpTriangle][]:=gR\[FilledDownTriangle]\[FilledUpTriangle][DefaultChart];
gR\[FilledDownTriangle]\[FilledDownTriangle][]:=gR\[FilledDownTriangle]\[FilledDownTriangle][DefaultChart];
g\[CapitalLambda]\[FilledDownTriangle][]:=g\[CapitalLambda]\[FilledDownTriangle][DefaultChart];
gRb\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle][]:=gRb\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle][DefaultChart];
gRb\[FilledUpTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle][]:=gRb\[FilledUpTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle][DefaultChart];
gC\[FilledUpTriangle]\[FilledDownTriangle]\[FilledDownTriangle][]:=gC\[FilledUpTriangle]\[FilledDownTriangle]\[FilledDownTriangle][DefaultChart];


(* ::Input::Initialization:: *)
mTr\[FilledRectangle][]:=mTr\[FilledRectangle][DefaultChart];

\!\(\*OverscriptBox[\(mTr\[FilledRectangle]\), \(-1\)]\)[]:=
\!\(\*OverscriptBox[\(mTr\[FilledRectangle]\), \(-1\)]\)[DefaultChart];
m\[FilledRectangle][]:=m\[FilledRectangle][DefaultChart];

\!\(\*OverscriptBox[\(m\[FilledRectangle]\), \(-1\)]\)[]:=
\!\(\*OverscriptBox[\(m\[FilledRectangle]\), \(-1\)]\)[DefaultChart];
mc\[FilledRectangle][]:=mc\[FilledRectangle][DefaultChart];

\!\(\*OverscriptBox[\(mc\[FilledRectangle]\), \(-1\)]\)[]:=
\!\(\*OverscriptBox[\(mc\[FilledRectangle]\), \(-1\)]\)[DefaultChart];
\[CurlyPhi]\[FilledSquare][]:=\[CurlyPhi]\[FilledSquare][DefaultChart];

\!\(\*OverscriptBox[\(\[CurlyPhi]\[FilledSquare]\), \(-1\)]\)[]:=
\!\(\*OverscriptBox[\(\[CurlyPhi]\[FilledSquare]\), \(-1\)]\)[DefaultChart];

\!\(\*OverscriptBox[\(\[CurlyPhi]\[FilledSquare]\), \(T\)]\)[]:=
\!\(\*OverscriptBox[\(\[CurlyPhi]\[FilledSquare]\), \(T\)]\)[DefaultChart];
\[CurlyPhi]c\[FilledSquare][]:=\[CurlyPhi]c\[FilledSquare][DefaultChart];

\!\(\*OverscriptBox[\(\[CurlyPhi]c\[FilledSquare]\), \(-1\)]\)[]:=
\!\(\*OverscriptBox[\(\[CurlyPhi]c\[FilledSquare]\), \(-1\)]\)[DefaultChart];

\!\(\*OverscriptBox[\(\[CurlyPhi]c\[FilledSquare]\), \(T\)]\)[]:=
\!\(\*OverscriptBox[\(\[CurlyPhi]c\[FilledSquare]\), \(T\)]\)[DefaultChart];
\[CurlyPhi]\[FilledUpTriangle]\[FilledDownTriangle][]:=\[CurlyPhi]\[FilledUpTriangle]\[FilledDownTriangle][DefaultChart];
\[CurlyPhi]c\[FilledUpTriangle]\[FilledDownTriangle][]:=\[CurlyPhi]c\[FilledUpTriangle]\[FilledDownTriangle][DefaultChart];
\[CurlyPhi]\[FilledDownTriangle]\[FilledUpTriangle][]:=\[CurlyPhi]\[FilledDownTriangle]\[FilledUpTriangle][DefaultChart];
\[CurlyPhi]c\[FilledDownTriangle]\[FilledUpTriangle][]:=\[CurlyPhi]c\[FilledDownTriangle]\[FilledUpTriangle][DefaultChart];
fShi\[FilledUpTriangle][]:=fShi\[FilledUpTriangle][DefaultChart];
fShi\[FilledDownTriangle][]:=fShi\[FilledDownTriangle][DefaultChart];
fShi\[FilledUpTriangle]$Comp[]:=fShi\[FilledUpTriangle]$Comp[DefaultChart];
fShi\[FilledDownTriangle]$Comp[]:=fShi\[FilledDownTriangle]$Comp[DefaultChart];
fA\[FilledUpTriangle]\[FilledDownTriangle][]:=fA\[FilledUpTriangle]\[FilledDownTriangle][DefaultChart];
fA\[FilledUpTriangle]\[FilledUpTriangle][]:=fA\[FilledUpTriangle]\[FilledUpTriangle][DefaultChart];
fA\[FilledDownTriangle]\[FilledDownTriangle][]:=fA\[FilledDownTriangle]\[FilledDownTriangle][DefaultChart];
fA\[FilledDownTriangle]\[FilledUpTriangle][]:=fA\[FilledDownTriangle]\[FilledUpTriangle][DefaultChart];
fK\[FilledUpTriangle]\[FilledDownTriangle][]:=fK\[FilledUpTriangle]\[FilledDownTriangle][DefaultChart];
fK\[FilledUpTriangle]\[FilledUpTriangle][]:=fK\[FilledUpTriangle]\[FilledUpTriangle][DefaultChart];
fK\[FilledDownTriangle]\[FilledDownTriangle][]:=fK\[FilledDownTriangle]\[FilledDownTriangle][DefaultChart];
fK\[FilledDownTriangle]\[FilledUpTriangle][]:=fK\[FilledDownTriangle]\[FilledUpTriangle][DefaultChart];
fn\[FilledUpTriangle][]:=fn\[FilledUpTriangle][DefaultChart];
fQ\[FilledUpTriangle]\[FilledDownTriangle][]:=fQ\[FilledUpTriangle]\[FilledDownTriangle][DefaultChart];
fB\[FilledUpTriangle]\[FilledDownTriangle][]:=fB\[FilledUpTriangle]\[FilledDownTriangle][DefaultChart];
fD\[FilledUpTriangle]\[FilledDownTriangle][]:=fD\[FilledUpTriangle]\[FilledDownTriangle][DefaultChart];
fU\[FilledUpTriangle]\[FilledDownTriangle][]:=fU\[FilledUpTriangle]\[FilledDownTriangle][DefaultChart];
fV\[FilledSmallCircle][]:=fV\[FilledSmallCircle][DefaultChart];
fn\[FilledUpTriangle][]:=fn\[FilledUpTriangle][DefaultChart];
fn\[FilledDownTriangle][]:=fn\[FilledDownTriangle][DefaultChart];
fnc\[FilledUpTriangle][]:=fnc\[FilledUpTriangle][DefaultChart];
fnc\[FilledDownTriangle][]:=fnc\[FilledDownTriangle][DefaultChart];
fQc\[FilledUpTriangle]\[FilledDownTriangle][]:=fQc\[FilledUpTriangle]\[FilledDownTriangle][DefaultChart];
fBc\[FilledUpTriangle]\[FilledDownTriangle][]:=fBc\[FilledUpTriangle]\[FilledDownTriangle][DefaultChart];
fDc\[FilledUpTriangle]\[FilledDownTriangle][]:=fDc\[FilledUpTriangle]\[FilledDownTriangle][DefaultChart];
fUc\[FilledUpTriangle]\[FilledDownTriangle][]:=fUc\[FilledUpTriangle]\[FilledDownTriangle][DefaultChart];
fVc\[FilledSmallCircle][]:=fVc\[FilledSmallCircle][DefaultChart];
frhob\[FilledSmallCircle][]:=frhob\[FilledSmallCircle][DefaultChart];
frhobc\[FilledSmallCircle][]:=frhobc\[FilledSmallCircle][DefaultChart];
fjb\[FilledDownTriangle][]:=fjb\[FilledDownTriangle][DefaultChart];
fjbc\[FilledDownTriangle][]:=fjbc\[FilledDownTriangle][DefaultChart];
fjb\[FilledUpTriangle][]:=fjb\[FilledUpTriangle][DefaultChart];
fjbc\[FilledUpTriangle][]:=fjbc\[FilledUpTriangle][DefaultChart];
fJb\[FilledUpTriangle]\[FilledDownTriangle][]:=fJb\[FilledUpTriangle]\[FilledDownTriangle][DefaultChart];
fJb\[FilledUpTriangle]\[FilledUpTriangle][]:=fJb\[FilledUpTriangle]\[FilledUpTriangle][DefaultChart];
fJb\[FilledDownTriangle]\[FilledDownTriangle][]:=fJb\[FilledDownTriangle]\[FilledDownTriangle][DefaultChart];
fJb\[FilledDownTriangle]\[FilledUpTriangle][]:=fJb\[FilledDownTriangle]\[FilledUpTriangle][DefaultChart];
fJbc\[FilledUpTriangle]\[FilledDownTriangle][]:=fJbc\[FilledUpTriangle]\[FilledDownTriangle][DefaultChart];
fJbc\[FilledUpTriangle]\[FilledUpTriangle][]:=fJbc\[FilledUpTriangle]\[FilledUpTriangle][DefaultChart];
fJbc\[FilledDownTriangle]\[FilledDownTriangle][]:=fJbc\[FilledDownTriangle]\[FilledDownTriangle][DefaultChart];
fJbc\[FilledDownTriangle]\[FilledUpTriangle][]:=fJbc\[FilledDownTriangle]\[FilledUpTriangle][DefaultChart];
fJb\[FilledSmallCircle][]:=fJb\[FilledSmallCircle][DefaultChart];
frho\[FilledSmallCircle][]:=frho\[FilledSmallCircle][DefaultChart];
frhoc\[FilledSmallCircle][]:=frhoc\[FilledSmallCircle][DefaultChart];
fj\[FilledDownTriangle][]:=fj\[FilledDownTriangle][DefaultChart];
fjc\[FilledDownTriangle][]:=fjc\[FilledDownTriangle][DefaultChart];
fj\[FilledUpTriangle][]:=fj\[FilledUpTriangle][DefaultChart];
fjc\[FilledUpTriangle][]:=fjc\[FilledUpTriangle][DefaultChart];
fJ\[FilledUpTriangle]\[FilledDownTriangle][]:=fJ\[FilledUpTriangle]\[FilledDownTriangle][DefaultChart];
fJ\[FilledUpTriangle]\[FilledUpTriangle][]:=fJ\[FilledUpTriangle]\[FilledUpTriangle][DefaultChart];
fJ\[FilledDownTriangle]\[FilledDownTriangle][]:=fJ\[FilledDownTriangle]\[FilledDownTriangle][DefaultChart];
fJ\[FilledDownTriangle]\[FilledUpTriangle][]:=fJ\[FilledDownTriangle]\[FilledUpTriangle][DefaultChart];
fJc\[FilledUpTriangle]\[FilledDownTriangle][]:=fJc\[FilledUpTriangle]\[FilledDownTriangle][DefaultChart];
fJc\[FilledUpTriangle]\[FilledUpTriangle][]:=fJc\[FilledUpTriangle]\[FilledUpTriangle][DefaultChart];
fJc\[FilledDownTriangle]\[FilledDownTriangle][]:=fJc\[FilledDownTriangle]\[FilledDownTriangle][DefaultChart];
fJc\[FilledDownTriangle]\[FilledUpTriangle][]:=fJc\[FilledDownTriangle]\[FilledUpTriangle][DefaultChart];
fJ\[FilledSmallCircle][]:=fJ\[FilledSmallCircle][DefaultChart];
fK\[FilledSmallCircle][]:=fK\[FilledSmallCircle][DefaultChart];
fR\[FilledUpTriangle]\[FilledUpTriangle][]:=fR\[FilledUpTriangle]\[FilledUpTriangle][DefaultChart];
fR\[FilledUpTriangle]\[FilledDownTriangle][]:=fR\[FilledUpTriangle]\[FilledDownTriangle][DefaultChart];
fR\[FilledDownTriangle]\[FilledUpTriangle][]:=fR\[FilledDownTriangle]\[FilledUpTriangle][DefaultChart];
fR\[FilledDownTriangle]\[FilledDownTriangle][]:=fR\[FilledDownTriangle]\[FilledDownTriangle][DefaultChart];
f\[CapitalLambda]\[FilledDownTriangle][]:=f\[CapitalLambda]\[FilledDownTriangle][DefaultChart];
fRb\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle][]:=fRb\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle][DefaultChart];
fRb\[FilledUpTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle][]:=fRb\[FilledUpTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle][DefaultChart];
fC\[FilledUpTriangle]\[FilledDownTriangle]\[FilledDownTriangle][]:=fC\[FilledUpTriangle]\[FilledDownTriangle]\[FilledDownTriangle][DefaultChart];


(* ::Input::Initialization:: *)
SetOfNames$AfterDefs=Names["*"];


(* ::Input::Initialization:: *)
Clear[SquareRootOf3DPositiveDefiniteMatrix];
SquareRootOf3DPositiveDefiniteMatrix[Araw_?MatrixQ,OptionsPattern[{ApplyFunction->Identity}]]:=Module[{M,S,A,ASq,A1,A2,A3,S1,S2,S3,k,l,\[Phi],\[Lambda]},
A=Araw//OptionValue[ApplyFunction];
A1=Tr[A];
A2=(Tr[A]^2-Tr[A.A])/2;
A3=Det[A];
k=A1^2-3A2;
If[k==0,
Print["- k == 0. The square root is a multiple of the identity."];
S=Sqrt[A1/3]IdentityMatrix[3]//OptionValue[ApplyFunction];,
l=A1(A1^2-9/2 A2)+27/2 A3;
\[Phi]=ArcCos[l/k^(3/2)];
\[Lambda]=(1/3 (A1+2Sqrt[k]Cos[\[Phi]/3]))^(1/2);
S3=Sqrt[A3];
S1=\[Lambda]+(-\[Lambda]^2+A1+(2S3)/\[Lambda])^(1/2);
S2=(S1^2-A1)/2;
S=1/(S1*S2-S3) (S1*S3 IdentityMatrix[3]+(S1^2-S2)A-A.A)//OptionValue[ApplyFunction];,
l=A1(A1^2-9/2 A2)+27/2 A3;
\[Phi]=ArcCos[l/k^(3/2)];
\[Lambda]=(1/3 (A1+2Sqrt[k]Cos[\[Phi]/3]))^(1/2);
S3=Sqrt[A3];
S1=\[Lambda]+(-\[Lambda]^2+A1+(2S3)/\[Lambda])^(1/2)
S2=(S1^2-A1)/2;
S=1/(S1*S2-S3) (S1*S3 IdentityMatrix[3]+(S1^2-S2)A-A.A)//OptionValue[ApplyFunction];
];
Return[S];
]


(* ::Input::Initialization:: *)
Clear[PolarDecomposition];
PolarDecomposition[Matrix_?MatrixQ]:=Module[{U,\[CapitalSigma],V},
{U,\[CapitalSigma],V}=Assuming[Flatten[Flatten[Simplify@Matrix]]\[Element]Reals,SingularValueDecomposition[Matrix]]//.{Conjugate[f_]:>f,Re[f_]:>f,Abs[f_]:>f};
Return[{U.\[CapitalSigma].Transpose[U],U.Transpose[V]}];
]


(* ::Input::Initialization:: *)
Clear[RealMatrixSqrt]
RealMatrixSqrt[Matrix_?MatrixQ]:=Assuming[Flatten[Flatten[Simplify@Matrix]]\[Element]Reals,Simplify@MatrixPower[Matrix,1/2]];


(* ::Input::Initialization:: *)
Clear[ComputeBSSNDecomposition]
ComputeBSSNDecomposition[ec\[FilledRectangle]_?MatrixQ,mTrc\[FilledRectangle]_?MatrixQ,p\[FilledRectangle]_?MatrixQ,q\[FilledRectangle]_?MatrixQ,gA\[FilledUpTriangle]\[FilledDownTriangle]_?MatrixQ,fA\[FilledUpTriangle]\[FilledDownTriangle]_?MatrixQ,g\[CapitalLambda]\[FilledRectangle]_?MatrixQ,f\[CapitalLambda]\[FilledRectangle]_?MatrixQ,gback\[FilledSquare]_?MatrixQ,fback\[FilledSquare]_?MatrixQ,hback\[FilledSquare]_?MatrixQ,OptionsPattern[{ChartName:>DefaultChart,ComputeGeometryOf->{\[Gamma],\[CurlyPhi]},ApplyFunction->Identity,SqrtAlgorithm->"MatSqrt",IndVariables->"AutoDetect"}]]:=
Module[{myAssumptions,ListOfFields$temp,ListOfContexts,n,temp$\[CurlyPhi]c,temp$gB,temp$fB,temp$gD,temp$fD,\[Eta]\[FilledSquare]},

If[ChartQ[OptionValue[ChartName]],
Null,
Print[ToString[OptionValue[ChartName]]<>" is not a defined chart."];Abort[];
];

(* Detecting the fields and the indipendent variables in the ansatz *)
ListOfFields$temp=Union[Flatten[Flatten[ec\[FilledRectangle]]]~Join~Flatten[Flatten[mTrc\[FilledRectangle]]]~Join~Flatten[Flatten[p\[FilledRectangle]]]]~Join~{
\!\(\*UnderscriptBox[\(gconf\[FilledSmallCircle]\), \(_\)]\),
\!\(\*UnderscriptBox[\(fconf\[FilledSmallCircle]\), \(_\)]\),
\!\(\*UnderscriptBox[\(gLap\[FilledSmallCircle]\), \(_\)]\),
\!\(\*UnderscriptBox[\(fLap\[FilledSmallCircle]\), \(_\)]\),
\!\(\*UnderscriptBox[\(\[Lambda]\[FilledSmallCircle]\), \(_\)]\)}//Variables;
For[n=0,n<Length[ListOfFields$temp]+1,n++,
If[MemberQ[ScalarsOfChart[OptionValue[ChartName]],ListOfFields$temp[[n]]],ListOfFields$temp=Delete[ListOfFields$temp,n]]
];
ListOfContexts=ListOfFields$temp//Head/@#&//Context/@#&;
For[n=0,n<Length[ListOfFields$temp]+1,n++,
If[ListOfContexts[[n]]==="System`",ListOfFields$temp=Delete[ListOfFields$temp,n]]
];
ListOfFields[OptionValue[ChartName]]=ListOfFields$temp//Head/@#&;
If[OptionValue[IndVariables]==="AutoDetect",
ListOfVariables[OptionValue[ChartName]]=Apply[List,ListOfFields$temp[[#]]]&/@Range[1,Length@ListOfFields$temp]//Flatten//Union;,
ListOfVariables[OptionValue[ChartName]]=OptionValue[IndVariables],
ListOfVariables[OptionValue[ChartName]]=Apply[List,ListOfFields$temp[[#]]]&/@Range[1,Length@ListOfFields$temp]//Flatten//Union;
];


\!\(\*UnderscriptBox[\(f_\), \(_\)]\):=f[Sequence@@ListOfVariables[OptionValue[ChartName]]];

myAssumptions=#>0&/@ListOfFields$temp;
$Assumptions=Union@Flatten@Append[$Assumptions,myAssumptions];
AppendTo[$Assumptions,
\!\(\*UnderscriptBox[\(\[Lambda]\[FilledSmallCircle]\), \(_\)]\)>0];

\[Eta]\[FilledSquare]=({
 {1, 0, 0},
 {0, 1, 0},
 {0, 0, 1}
});

If[UpperTriangularQ[ec\[FilledRectangle]]||UpperTriangularQ[Transpose@ec\[FilledRectangle]],
Null,
Print["\!\(\*
StyleBox[\"The\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"vielbein\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"for\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"\[Gamma]\",\nFontColor->RGBColor[1, 0, 0]], \"_\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"is\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"not\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"triangular\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[\"The\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"vielbein\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"for\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"\[Gamma]\",\nFontColor->RGBColor[1, 0, 0]], \"_\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"is\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"not\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"triangular\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];
If[UpperTriangularQ[mTrc\[FilledRectangle]]||UpperTriangularQ[Transpose@mTrc\[FilledRectangle]],
Null,
Print["\!\(\*
StyleBox[\"The\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"vielbein\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"for\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"\[CurlyPhi]\",\nFontColor->RGBColor[1, 0, 0]], \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"is\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"not\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"triangular\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[\"The\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"vielbein\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"for\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"\[CurlyPhi]\",\nFontColor->RGBColor[1, 0, 0]], \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"is\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"not\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"triangular\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];
If[Transpose[\[Eta]\[FilledSquare]]==\[Eta]\[FilledSquare],
Null,
Print["\!\(\*
StyleBox[\"The\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"matrix\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"for\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"Minkowski\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"metric\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"is\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"not\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"symmetric\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[\"The\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"matrix\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"for\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"Minkowski\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"metric\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"is\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"not\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"symmetric\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];
If[Transpose[gback\[FilledSquare]]==gback\[FilledSquare],
Null,
Print["\!\(\*
StyleBox[\"The\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"matrix\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"for\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"background\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"metric\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"\[Gamma]\",\nFontColor->RGBColor[1, 0, 0]], \"_\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"is\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"not\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"symmetric\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[\"The\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"matrix\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"for\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"background\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"metric\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"\[Gamma]\",\nFontColor->RGBColor[1, 0, 0]], \"_\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"is\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"not\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"symmetric\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];
If[Transpose[fback\[FilledSquare]]==fback\[FilledSquare],
Null,
Print["\!\(\*
StyleBox[\"The\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"matrix\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"for\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"background\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"metric\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"\[CurlyPhi]\",\nFontColor->RGBColor[1, 0, 0]], \"_\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"is\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"not\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"symmetric\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[\"The\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"matrix\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"for\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\) \!\(\*
StyleBox[\"background\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"metric\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"\[CurlyPhi]\",\nFontColor->RGBColor[1, 0, 0]], \"_\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"is\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"not\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"symmetric\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];
If[VectorQ[Flatten[g\[CapitalLambda]\[FilledRectangle]]],
Null,
Print["\!\(\*
StyleBox[\"The\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"components\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\) \!\(\*
StyleBox[OverscriptBox[\"\[CapitalGamma]\", \"_\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"do\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"not\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"form\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"a\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"vector\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[\"The\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"components\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[\"\[CapitalGamma]\", \"_\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"do\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"not\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"form\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"a\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"vector\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];
If[VectorQ[Flatten[f\[CapitalLambda]\[FilledRectangle]]],
Null,
Print["\!\(\*
StyleBox[\"The\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"components\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\) \!\(\*
StyleBox[OverscriptBox[\"\[CapitalGamma]\", \"^\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"do\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"not\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"form\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"a\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"vector\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[\"The\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"components\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[\"\[CapitalGamma]\", \"^\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"do\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"not\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"form\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"a\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"vector\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];
If[VectorQ[Flatten[p\[FilledRectangle]]],
Null,
Print["\!\(\*
StyleBox[\"The\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"components\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"p\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"do\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"not\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"form\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"a\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"vector\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[\"The\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"components\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"p\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"do\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"not\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"form\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"a\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"vector\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];
If[VectorQ[Flatten[q\[FilledRectangle]]],
Null,
Print["\!\(\*
StyleBox[\"The\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"components\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"q\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"do\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"not\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"form\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"a\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"vector\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[\"The\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"components\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"q\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"do\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"not\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"form\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"a\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"vector\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];

(* Computing the inverse and transposed tetrads, to save time and resources *)

\!\(\*OverscriptBox[\(ec\[FilledRectangle]\), \(-1\)]\)=Inverse[ec\[FilledRectangle]];

\!\(\*OverscriptBox[\(mTrc\[FilledRectangle]\), \(-1\)]\)=Inverse[mTrc\[FilledRectangle]];

\!\(\*OverscriptBox[\(ec\[FilledRectangle]\), \(T\)]\)=Transpose[ec\[FilledRectangle]];

\!\(\*OverscriptBox[\(ec\[FilledRectangle]\), \(-T\)]\)=Transpose[Inverse[ec\[FilledRectangle]]];

\!\(\*OverscriptBox[\(mTrc\[FilledRectangle]\), \(T\)]\)=Transpose[mTrc\[FilledRectangle]];

\!\(\*OverscriptBox[\(mTrc\[FilledRectangle]\), \(-T\)]\)=Transpose[Inverse[mTrc\[FilledRectangle]]];

If[
\!\(\*OverscriptBox[\(ec\[FilledRectangle]\), \(-1\)]\).ec\[FilledRectangle]==\[Delta]\[FilledRectangle]&&ec\[FilledRectangle].
\!\(\*OverscriptBox[\(ec\[FilledRectangle]\), \(-1\)]\)==\[Delta]\[FilledRectangle],
Null,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"inverse\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"vielbein\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"\[Gamma]\",\nFontColor->RGBColor[1, 0, 0]], \"_\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"inverse\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"vielbein\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"\[Gamma]\",\nFontColor->RGBColor[1, 0, 0]], \"_\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];
If[
\!\(\*OverscriptBox[\(mTrc\[FilledRectangle]\), \(-1\)]\).mTrc\[FilledRectangle]==\[Delta]\[FilledRectangle]&&mTrc\[FilledRectangle].
\!\(\*OverscriptBox[\(mTrc\[FilledRectangle]\), \(-1\)]\)==\[Delta]\[FilledRectangle],
Null,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"inverse\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"vielbein\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"\[CurlyPhi]\",\nFontColor->RGBColor[1, 0, 0]], \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"inverse\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"vielbein\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"\[CurlyPhi]\",\nFontColor->RGBColor[1, 0, 0]], \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];

(*Block[{\[Lambda]\[FilledSmallCircle]},
\[Lambda]\[FilledSmallCircle][args___]:=Sqrt[1+(Transpose[p\[FilledRectangle]].\[Eta]\[FilledSquare].p\[FilledRectangle])\[LeftDoubleBracket]1,1\[RightDoubleBracket]]/.{f_[t,\[ScriptR][]]\[RuleDelayed]f[args]};*)

(* Assigning the components given by the user *)

AllComponentValues[ec[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],ec\[FilledRectangle]];
e\[FilledRectangle][OptionValue[ChartName]]=E^(2
\!\(\*UnderscriptBox[\(gconf\[FilledSmallCircle]\), \(_\)]\)) ec\[FilledRectangle];

\!\(\*OverscriptBox[\(e\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]]=E^(-2
\!\(\*UnderscriptBox[\(gconf\[FilledSmallCircle]\), \(_\)]\)) 
\!\(\*OverscriptBox[\(ec\[FilledRectangle]\), \(-1\)]\);

\!\(\*OverscriptBox[\(e\[FilledRectangle]\), \(T\)]\)[OptionValue[ChartName]]=Transpose[e\[FilledRectangle][OptionValue[ChartName]]];

\!\(\*OverscriptBox[\(e\[FilledRectangle]\), \(-T\)]\)[OptionValue[ChartName]]=Inverse@Transpose[e\[FilledRectangle][OptionValue[ChartName]]];
If[
\!\(\*OverscriptBox[\(e\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]].e\[FilledRectangle][OptionValue[ChartName]]==\[Delta]\[FilledRectangle]&&e\[FilledRectangle][OptionValue[ChartName]].
\!\(\*OverscriptBox[\(e\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]]==\[Delta]\[FilledRectangle],
Null,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"vielbein\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"\[Gamma]\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"vielbein\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"\[Gamma]\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];
AllComponentValues[ec[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],ec\[FilledRectangle]];
AllComponentValues[ec[-{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],
\!\(\*OverscriptBox[\(ec\[FilledRectangle]\), \(T\)]\)];
AllComponentValues[Invec[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],
\!\(\*OverscriptBox[\(ec\[FilledRectangle]\), \(-1\)]\)];
AllComponentValues[Invec[-{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],
\!\(\*OverscriptBox[\(ec\[FilledRectangle]\), \(-T\)]\)];

AllComponentValues[e[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],e\[FilledRectangle][OptionValue[ChartName]]];
AllComponentValues[e[-{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],
\!\(\*OverscriptBox[\(e\[FilledRectangle]\), \(T\)]\)[OptionValue[ChartName]]];
AllComponentValues[Inve[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],
\!\(\*OverscriptBox[\(e\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]]];
AllComponentValues[Inve[-{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],Transpose[
\!\(\*OverscriptBox[\(e\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]]]];

AllComponentValues[mTrc[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],mTrc\[FilledRectangle]];
AllComponentValues[mTrc[-{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],
\!\(\*OverscriptBox[\(mTrc\[FilledRectangle]\), \(T\)]\)];
AllComponentValues[InvmTrc[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],
\!\(\*OverscriptBox[\(mTrc\[FilledRectangle]\), \(-1\)]\)];
AllComponentValues[InvmTrc[-{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],
\!\(\*OverscriptBox[\(mTrc\[FilledRectangle]\), \(-T\)]\)];

mTr\[FilledRectangle][OptionValue[ChartName]]=E^(2
\!\(\*UnderscriptBox[\(fconf\[FilledSmallCircle]\), \(_\)]\)) mTrc\[FilledRectangle];

\!\(\*OverscriptBox[\(mTr\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]]=E^(-2
\!\(\*UnderscriptBox[\(fconf\[FilledSmallCircle]\), \(_\)]\)) 
\!\(\*OverscriptBox[\(mTrc\[FilledRectangle]\), \(-1\)]\);

\!\(\*OverscriptBox[\(mTr\[FilledRectangle]\), \(T\)]\)[OptionValue[ChartName]]=Transpose[mTr\[FilledRectangle][OptionValue[ChartName]]];

\!\(\*OverscriptBox[\(mTr\[FilledRectangle]\), \(-T\)]\)[OptionValue[ChartName]]=Inverse[Transpose[mTr\[FilledRectangle][OptionValue[ChartName]]]];
If[
\!\(\*OverscriptBox[\(mTr\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]].mTr\[FilledRectangle][OptionValue[ChartName]]==\[Delta]\[FilledRectangle]&&mTr\[FilledRectangle][OptionValue[ChartName]].
\!\(\*OverscriptBox[\(mTr\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]]==\[Delta]\[FilledRectangle],
Null,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"triangular\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"vielbein\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"\[CurlyPhi]\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"triangular\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"vielbein\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"\[CurlyPhi]\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];
AllComponentValues[mTr[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],mTr\[FilledRectangle][OptionValue[ChartName]]];
AllComponentValues[mTr[-{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],
\!\(\*OverscriptBox[\(mTr\[FilledRectangle]\), \(T\)]\)[OptionValue[ChartName]]];
AllComponentValues[InvmTr[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],
\!\(\*OverscriptBox[\(mTr\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]]];
AllComponentValues[InvmTr[-{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],
\!\(\*OverscriptBox[\(mTr\[FilledRectangle]\), \(-T\)]\)[OptionValue[ChartName]]];

AllComponentValues[p[{i,OptionValue[ChartName]}],Flatten@p\[FilledRectangle]];
AllComponentValues[p[-{i,OptionValue[ChartName]}],Flatten@p\[FilledRectangle]];

Print["\[Dash] Assigned components to the spatial vielbeins."];

(* Computing the components of the fields in the Lorentz frame *)

AllComponentValues[\[Delta][-{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],\[Eta]\[FilledSquare]];
AllComponentValues[\[Delta][{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],Inverse@\[Eta]\[FilledSquare]];
AllComponentValues[\[Delta][{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],IdentityMatrix[3]];
AllComponentValues[\[Delta][-{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],IdentityMatrix[3]];
v\[FilledUpTriangle][OptionValue[ChartName]]=Flatten@p\[FilledRectangle]/
\!\(\*UnderscriptBox[\(\[Lambda]\[FilledSmallCircle]\), \(_\)]\);
AllComponentValues[v[{i,OptionValue[ChartName]}],Flatten@v\[FilledUpTriangle][OptionValue[ChartName]]];

\[CapitalLambda]\[FilledRectangle][OptionValue[ChartName]]=\[Delta]\[FilledRectangle]+p\[FilledRectangle].Transpose[p\[FilledRectangle]].\[Eta]\[FilledSquare]/(
\!\(\*UnderscriptBox[\(\[Lambda]\[FilledSmallCircle]\), \(_\)]\)+1)//Simplify//OptionValue[ApplyFunction];

\!\(\*OverscriptBox[\(\[CapitalLambda]\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]]=Inverse[\[CapitalLambda]\[FilledRectangle][OptionValue[ChartName]]]//Simplify//OptionValue[ApplyFunction];
\[CapitalLambda]Sq\[FilledRectangle][OptionValue[ChartName]]=\[Delta]\[FilledRectangle]+p\[FilledRectangle].Transpose[p\[FilledRectangle]].\[Eta]\[FilledSquare]//Simplify;
AllComponentValues[\[CapitalLambda][{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],\[CapitalLambda]\[FilledRectangle][OptionValue[ChartName]]];

Rbar\[FilledRectangle][OptionValue[ChartName]]=Inverse[\[Eta]\[FilledSquare]].Transpose[
\!\(\*OverscriptBox[\(mTr\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]]].
\!\(\*OverscriptBox[\(e\[FilledRectangle]\), \(T\)]\)[OptionValue[ChartName]].\[Eta]\[FilledSquare].\[CapitalLambda]\[FilledRectangle][OptionValue[ChartName]]//Simplify;
Rbarc\[FilledRectangle][OptionValue[ChartName]]=Inverse[\[Eta]\[FilledSquare]].Transpose[
\!\(\*OverscriptBox[\(mTrc\[FilledRectangle]\), \(-1\)]\)].
\!\(\*OverscriptBox[\(ec\[FilledRectangle]\), \(T\)]\).\[Eta]\[FilledSquare].\[CapitalLambda]\[FilledRectangle][OptionValue[ChartName]]//Simplify;
If[Rbar\[FilledRectangle][OptionValue[ChartName]]==E^(2(
\!\(\*UnderscriptBox[\(gconf\[FilledSmallCircle]\), \(_\)]\)-
\!\(\*UnderscriptBox[\(fconf\[FilledSmallCircle]\), \(_\)]\))) Rbarc\[FilledRectangle][OptionValue[ChartName]]//Simplify//OptionValue[ApplyFunction],
Null,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"vielbeins\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"or\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"spatial\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"part\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"Lorentz\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"boost\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"vielbeins\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"or\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"spatial\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"part\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"Lorentz\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"boost\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];

If[OptionValue[SqrtAlgorithm]=="MatSqrt",
R\[FilledRectangle][OptionValue[ChartName]]=RealMatrixSqrt[Inverse[\[Eta]\[FilledSquare]].Transpose[Rbar\[FilledRectangle][OptionValue[ChartName]]].\[Eta]\[FilledSquare].Rbar\[FilledRectangle][OptionValue[ChartName]]].Inverse[Rbar\[FilledRectangle][OptionValue[ChartName]]]//Simplify;
Rc\[FilledRectangle][OptionValue[ChartName]]=RealMatrixSqrt[Inverse[\[Eta]\[FilledSquare]].Transpose[Rbarc\[FilledRectangle][OptionValue[ChartName]]].\[Eta]\[FilledSquare].Rbarc\[FilledRectangle][OptionValue[ChartName]]].Inverse[Rbarc\[FilledRectangle][OptionValue[ChartName]]]//Simplify;,
If[OptionValue[SqrtAlgorithm]=="PolDec",
R\[FilledRectangle][OptionValue[ChartName]]=PolarDecomposition[Inverse[Rbar\[FilledRectangle][OptionValue[ChartName]]]//Simplify][[2]]//Simplify;
Rc\[FilledRectangle][OptionValue[ChartName]]=PolarDecomposition[Inverse[Rbarc\[FilledRectangle][OptionValue[ChartName]]]//Simplify][[2]]//Simplify;,
If[OptionValue[SqrtAlgorithm]=="PosDefSqrt",
R\[FilledRectangle][OptionValue[ChartName]]=SquareRootOf3DPositiveDefiniteMatrix[Inverse[\[Eta]\[FilledSquare]].Transpose[Rbar\[FilledRectangle][OptionValue[ChartName]]].\[Eta]\[FilledSquare].Rbar\[FilledRectangle][OptionValue[ChartName]],ApplyFunction->OptionValue[ApplyFunction]].Inverse[Rbar\[FilledRectangle][OptionValue[ChartName]]]//Simplify;
Rc\[FilledRectangle][OptionValue[ChartName]]=SquareRootOf3DPositiveDefiniteMatrix[Inverse[\[Eta]\[FilledSquare]].Transpose[Rbarc\[FilledRectangle][OptionValue[ChartName]]].\[Eta]\[FilledSquare].Rbarc\[FilledRectangle][OptionValue[ChartName]],ApplyFunction->OptionValue[ApplyFunction]].Inverse[Rbarc\[FilledRectangle][OptionValue[ChartName]]]//Simplify;
];
];,
R\[FilledRectangle][OptionValue[ChartName]]=RealMatrixSqrt[Inverse[\[Eta]\[FilledSquare]].Transpose[Rbar\[FilledRectangle][OptionValue[ChartName]]].\[Eta]\[FilledSquare].Rbar\[FilledRectangle][OptionValue[ChartName]]].Inverse[Rbar\[FilledRectangle][OptionValue[ChartName]]]//Simplify;
Rc\[FilledRectangle][OptionValue[ChartName]]=RealMatrixSqrt[Inverse[\[Eta]\[FilledSquare]].Transpose[Rbarc\[FilledRectangle][OptionValue[ChartName]]].\[Eta]\[FilledSquare].Rbarc\[FilledRectangle][OptionValue[ChartName]]].Inverse[Rbarc\[FilledRectangle][OptionValue[ChartName]]]//Simplify;
];
If[R\[FilledRectangle][OptionValue[ChartName]]==Rc\[FilledRectangle][OptionValue[ChartName]]//Simplify,
Null,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"orthogonal\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"transformation\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"Lorentz\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"frame\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"orthogonal\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"transformation\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"Lorentz\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"frame\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];
AllComponentValues[R[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],R\[FilledRectangle][OptionValue[ChartName]]];
If[Transpose[R\[FilledRectangle][OptionValue[ChartName]]].\[Eta]\[FilledSquare].R\[FilledRectangle][OptionValue[ChartName]]==\[Eta]\[FilledSquare]//Simplify,
Null,
Print["\!\(\*
StyleBox[OverscriptBox[\"R\", \"^\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"is\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"not\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"orthogonal\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[OverscriptBox[\"R\", \"^\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"is\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"not\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"orthogonal\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];

mc\[FilledRectangle][OptionValue[ChartName]]=R\[FilledRectangle][OptionValue[ChartName]].mTrc\[FilledRectangle]//Simplify;

\!\(\*OverscriptBox[\(mc\[FilledRectangle]\), \(T\)]\)[OptionValue[ChartName]]=Transpose[mc\[FilledRectangle][OptionValue[ChartName]]]//Simplify;

\!\(\*OverscriptBox[\(mc\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]]=Inverse[mc\[FilledRectangle][OptionValue[ChartName]]]//Simplify;

\!\(\*OverscriptBox[\(mc\[FilledRectangle]\), \(-T\)]\)[OptionValue[ChartName]]=Inverse[Transpose[mc\[FilledRectangle][OptionValue[ChartName]]]]//Simplify;
If[
\!\(\*OverscriptBox[\(mc\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]].mc\[FilledRectangle][OptionValue[ChartName]]==\[Delta]\[FilledRectangle]//Simplify&&mc\[FilledRectangle][OptionValue[ChartName]].
\!\(\*OverscriptBox[\(mc\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]]==\[Delta]\[FilledRectangle]//Simplify,
Null,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"nontriangular\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"vielbein\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"\[CurlyPhi]\",\nFontColor->RGBColor[1, 0, 0]], \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"nontriangular\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"vielbein\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"\[CurlyPhi]\",\nFontColor->RGBColor[1, 0, 0]], \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];
AllComponentValues[mc[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],mc\[FilledRectangle][OptionValue[ChartName]]];
AllComponentValues[mc[-{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],
\!\(\*OverscriptBox[\(mc\[FilledRectangle]\), \(T\)]\)[OptionValue[ChartName]]];
AllComponentValues[Invmc[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],
\!\(\*OverscriptBox[\(mc\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]]];
AllComponentValues[Invmc[-{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],
\!\(\*OverscriptBox[\(mc\[FilledRectangle]\), \(-T\)]\)[OptionValue[ChartName]]];

m\[FilledRectangle][OptionValue[ChartName]]=R\[FilledRectangle][OptionValue[ChartName]].mTr\[FilledRectangle][OptionValue[ChartName]]//Simplify;

\!\(\*OverscriptBox[\(m\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]]=Inverse[m\[FilledRectangle][OptionValue[ChartName]]]//Simplify;

\!\(\*OverscriptBox[\(m\[FilledRectangle]\), \(T\)]\)[OptionValue[ChartName]]=Transpose[m\[FilledRectangle][OptionValue[ChartName]]]//Simplify;

\!\(\*OverscriptBox[\(m\[FilledRectangle]\), \(-T\)]\)[OptionValue[ChartName]]=Inverse[Transpose[m\[FilledRectangle][OptionValue[ChartName]]]]//Simplify;
If[
\!\(\*OverscriptBox[\(m\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]].m\[FilledRectangle][OptionValue[ChartName]]==\[Delta]\[FilledRectangle]//Simplify&&m\[FilledRectangle][OptionValue[ChartName]].
\!\(\*OverscriptBox[\(m\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]]==\[Delta]\[FilledRectangle]//Simplify,
Null,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"nontriangular\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"vielbein\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"\[CurlyPhi]\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"nontriangular\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"vielbein\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"\[CurlyPhi]\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];
AllComponentValues[m[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],m\[FilledRectangle][OptionValue[ChartName]]];
AllComponentValues[m[-{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],
\!\(\*OverscriptBox[\(m\[FilledRectangle]\), \(T\)]\)[OptionValue[ChartName]]];
AllComponentValues[Invm[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],
\!\(\*OverscriptBox[\(m\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]]];
AllComponentValues[Invm[-{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],
\!\(\*OverscriptBox[\(m\[FilledRectangle]\), \(-T\)]\)[OptionValue[ChartName]]];

Print["\[Dash] Assigned components to the fields in the Lorentz frame."];

(* Computing the spatial metrics *)

\[Gamma]c\[FilledSquare][OptionValue[ChartName]]=
\!\(\*OverscriptBox[\(ec\[FilledRectangle]\), \(T\)]\).\[Eta]\[FilledSquare].ec\[FilledRectangle]//OptionValue[ApplyFunction];

\!\(\*OverscriptBox[\(\[Gamma]c\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]]=Inverse[\[Gamma]c\[FilledSquare][OptionValue[ChartName]]];
\[Gamma]c\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=
\!\(\*OverscriptBox[\(\[Gamma]c\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]].\[Gamma]c\[FilledSquare][OptionValue[ChartName]];
\[Gamma]c\[FilledDownTriangle]\[FilledUpTriangle][OptionValue[ChartName]]=\[Gamma]c\[FilledSquare][OptionValue[ChartName]].
\!\(\*OverscriptBox[\(\[Gamma]c\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]];
MetricInBasis[\[Gamma]c,-OptionValue[ChartName],\[Gamma]c\[FilledSquare][OptionValue[ChartName]]];
AllComponentValues[Inv\[Gamma]c[{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],
\!\(\*OverscriptBox[\(\[Gamma]c\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]]];
AllComponentValues[Inv\[Gamma]c[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],\[Gamma]c\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]];
AllComponentValues[Inv\[Gamma]c[-{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],\[Gamma]c\[FilledDownTriangle]\[FilledUpTriangle][OptionValue[ChartName]]];
AllComponentValues[Inv\[Gamma]c[-{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],\[Gamma]c\[FilledSquare][OptionValue[ChartName]]];
MetricInBasis[\[Gamma]c,OptionValue[ChartName],
\!\(\*OverscriptBox[\(\[Gamma]c\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]]];
AllComponentValues[\[Gamma]c[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],\[Gamma]c\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]];
AllComponentValues[\[Gamma]c[-{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],\[Gamma]c\[FilledDownTriangle]\[FilledUpTriangle][OptionValue[ChartName]]];

If[Transpose[\[Gamma]c\[FilledSquare][OptionValue[ChartName]]]==\[Gamma]c\[FilledSquare][OptionValue[ChartName]]&&
\!\(\*OverscriptBox[\(\[Gamma]c\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]].\[Gamma]c\[FilledSquare][OptionValue[ChartName]]==\[Delta]\[FilledRectangle],
Null,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"conformal\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"spatial\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"metric\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"\[Gamma]\",\nFontColor->RGBColor[1, 0, 0]], \"_\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"conformal\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"spatial\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"metric\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"\[Gamma]\",\nFontColor->RGBColor[1, 0, 0]], \"_\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];

\[Gamma]\[FilledSquare][OptionValue[ChartName]]=E^(4
\!\(\*UnderscriptBox[\(gconf\[FilledSmallCircle]\), \(_\)]\)) \[Gamma]c\[FilledSquare][OptionValue[ChartName]];

\!\(\*OverscriptBox[\(\[Gamma]\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]]=Inverse[\[Gamma]\[FilledSquare][OptionValue[ChartName]]];
MetricInBasis[\[Gamma],-OptionValue[ChartName],\[Gamma]\[FilledSquare][OptionValue[ChartName]]];
MetricInBasis[\[Gamma],OptionValue[ChartName],
\!\(\*OverscriptBox[\(\[Gamma]\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]]];

If[Transpose[\[Gamma]\[FilledSquare][OptionValue[ChartName]]]==\[Gamma]\[FilledSquare][OptionValue[ChartName]]&&
\!\(\*OverscriptBox[\(\[Gamma]\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]].\[Gamma]\[FilledSquare][OptionValue[ChartName]]==\[Delta]\[FilledRectangle],
Null,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"spatial\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"metric\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"\[Gamma]\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"spatial\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"metric\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"\[Gamma]\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];

temp$\[CurlyPhi]c=
\!\(\*OverscriptBox[\(mTrc\[FilledRectangle]\), \(T\)]\).\[Eta]\[FilledSquare].mTrc\[FilledRectangle]//Simplify;
\[CurlyPhi]c\[FilledSquare][OptionValue[ChartName]]=
\!\(\*OverscriptBox[\(mTrc\[FilledRectangle]\), \(T\)]\).\[Eta]\[FilledSquare].mTrc\[FilledRectangle]//Simplify//OptionValue[ApplyFunction];

\!\(\*OverscriptBox[\(\[CurlyPhi]c\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]]=Inverse[\[CurlyPhi]c\[FilledSquare][OptionValue[ChartName]]];
\[CurlyPhi]c\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=
\!\(\*OverscriptBox[\(\[CurlyPhi]c\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]].\[CurlyPhi]c\[FilledSquare][OptionValue[ChartName]];
\[CurlyPhi]c\[FilledDownTriangle]\[FilledUpTriangle][OptionValue[ChartName]]=\[CurlyPhi]c\[FilledSquare][OptionValue[ChartName]].
\!\(\*OverscriptBox[\(\[CurlyPhi]c\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]];
MetricInBasis[\[CurlyPhi]c,-OptionValue[ChartName],\[CurlyPhi]c\[FilledSquare][OptionValue[ChartName]]];
AllComponentValues[Inv\[CurlyPhi]c[{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],
\!\(\*OverscriptBox[\(\[CurlyPhi]c\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]]];
AllComponentValues[Inv\[CurlyPhi]c[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],\[CurlyPhi]c\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]];
AllComponentValues[Inv\[CurlyPhi]c[-{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],\[CurlyPhi]c\[FilledDownTriangle]\[FilledUpTriangle][OptionValue[ChartName]]];
AllComponentValues[Inv\[CurlyPhi]c[-{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],\[CurlyPhi]c\[FilledSquare][OptionValue[ChartName]]];
MetricInBasis[\[CurlyPhi]c,OptionValue[ChartName],
\!\(\*OverscriptBox[\(\[CurlyPhi]c\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]]];
AllComponentValues[\[CurlyPhi]c[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],\[CurlyPhi]c\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]];
AllComponentValues[\[CurlyPhi]c[-{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],\[CurlyPhi]c\[FilledDownTriangle]\[FilledUpTriangle][OptionValue[ChartName]]];

If[Transpose[\[CurlyPhi]c\[FilledSquare][OptionValue[ChartName]]]==\[CurlyPhi]c\[FilledSquare][OptionValue[ChartName]]&&
\!\(\*OverscriptBox[\(\[CurlyPhi]c\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]].\[CurlyPhi]c\[FilledSquare][OptionValue[ChartName]]==\[Delta]\[FilledRectangle],
Null,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"conformal\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"spatial\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"metric\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"\[CurlyPhi]\",\nFontColor->RGBColor[1, 0, 0]], \"^\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"conformal\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"spatial\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"metric\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"\[CurlyPhi]\",\nFontColor->RGBColor[1, 0, 0]], \"^\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];

\[CurlyPhi]\[FilledSquare][OptionValue[ChartName]]=E^(4
\!\(\*UnderscriptBox[\(fconf\[FilledSmallCircle]\), \(_\)]\)) \[CurlyPhi]c\[FilledSquare][OptionValue[ChartName]];

\!\(\*OverscriptBox[\(\[CurlyPhi]\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]]=Inverse[\[CurlyPhi]\[FilledSquare][OptionValue[ChartName]]];
\[CurlyPhi]\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=
\!\(\*OverscriptBox[\(\[CurlyPhi]\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]].\[CurlyPhi]\[FilledSquare][OptionValue[ChartName]];
\[CurlyPhi]\[FilledDownTriangle]\[FilledUpTriangle][OptionValue[ChartName]]=\[CurlyPhi]\[FilledSquare][OptionValue[ChartName]].
\!\(\*OverscriptBox[\(\[CurlyPhi]\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]];
MetricInBasis[\[CurlyPhi],-OptionValue[ChartName],\[CurlyPhi]\[FilledSquare][OptionValue[ChartName]]];
AllComponentValues[Inv\[CurlyPhi][{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],
\!\(\*OverscriptBox[\(\[CurlyPhi]\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]]];
AllComponentValues[Inv\[CurlyPhi][{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],\[CurlyPhi]\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]];
AllComponentValues[Inv\[CurlyPhi][-{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],\[CurlyPhi]\[FilledDownTriangle]\[FilledUpTriangle][OptionValue[ChartName]]];
AllComponentValues[Inv\[CurlyPhi][-{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],\[CurlyPhi]\[FilledSquare][OptionValue[ChartName]]];
MetricInBasis[\[CurlyPhi],OptionValue[ChartName],
\!\(\*OverscriptBox[\(\[CurlyPhi]\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]]];
AllComponentValues[\[CurlyPhi][{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],\[CurlyPhi]\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]];
AllComponentValues[\[CurlyPhi][-{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],\[CurlyPhi]\[FilledDownTriangle]\[FilledUpTriangle][OptionValue[ChartName]]];

If[Transpose[\[CurlyPhi]\[FilledSquare][OptionValue[ChartName]]]==\[CurlyPhi]\[FilledSquare][OptionValue[ChartName]]&&
\!\(\*OverscriptBox[\(\[CurlyPhi]\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]].\[CurlyPhi]\[FilledSquare][OptionValue[ChartName]]==\[Delta]\[FilledRectangle],
Null,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"spatial\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"metric\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"\[CurlyPhi]\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"spatial\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"metric\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"\[CurlyPhi]\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];

\[Chi]c\[FilledSquare][OptionValue[ChartName]]=
\!\(\*OverscriptBox[\(ec\[FilledRectangle]\), \(T\)]\).\[Eta]\[FilledSquare].\[CapitalLambda]\[FilledRectangle][OptionValue[ChartName]].mc\[FilledRectangle][OptionValue[ChartName]]//Simplify//OptionValue[ApplyFunction];

\!\(\*OverscriptBox[\(\[Chi]c\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]]=Inverse[\[Chi]c\[FilledSquare][OptionValue[ChartName]]];
\[Chi]c\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=
\!\(\*OverscriptBox[\(\[Chi]c\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]].\[Chi]c\[FilledSquare][OptionValue[ChartName]];
\[Chi]c\[FilledDownTriangle]\[FilledUpTriangle][OptionValue[ChartName]]=\[Chi]c\[FilledSquare][OptionValue[ChartName]].
\!\(\*OverscriptBox[\(\[Chi]c\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]];
MetricInBasis[\[Chi]c,-OptionValue[ChartName],\[Chi]c\[FilledSquare][OptionValue[ChartName]]];
AllComponentValues[Inv\[Chi]c[{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],
\!\(\*OverscriptBox[\(\[Chi]c\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]]];
AllComponentValues[Inv\[Chi]c[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],\[Chi]c\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]];
AllComponentValues[Inv\[Chi]c[-{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],\[Chi]c\[FilledDownTriangle]\[FilledUpTriangle][OptionValue[ChartName]]];
AllComponentValues[Inv\[Chi]c[-{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],\[Chi]c\[FilledSquare][OptionValue[ChartName]]];
MetricInBasis[\[Chi]c,OptionValue[ChartName],
\!\(\*OverscriptBox[\(\[Chi]c\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]]];
AllComponentValues[\[Chi]c[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],\[Chi]c\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]];
AllComponentValues[\[Chi]c[-{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],\[Chi]c\[FilledDownTriangle]\[FilledUpTriangle][OptionValue[ChartName]]];

If[(Transpose[\[Chi]c\[FilledSquare][OptionValue[ChartName]]]==\[Chi]c\[FilledSquare][OptionValue[ChartName]]//Simplify)&&(
\!\(\*OverscriptBox[\(\[Chi]c\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]].\[Chi]c\[FilledSquare][OptionValue[ChartName]]==\[Delta]\[FilledRectangle]//Simplify),
Null,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"conformal\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"spatial\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"metric\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"\[Chi]\",\nFontColor->RGBColor[1, 0, 0]], \"^\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"conformal\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"spatial\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"metric\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"\[Chi]\",\nFontColor->RGBColor[1, 0, 0]], \"^\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];

\[Chi]\[FilledSquare][OptionValue[ChartName]]=E^(2(
\!\(\*UnderscriptBox[\(gconf\[FilledSmallCircle]\), \(_\)]\)+
\!\(\*UnderscriptBox[\(fconf\[FilledSmallCircle]\), \(_\)]\))) \[Chi]c\[FilledSquare][OptionValue[ChartName]]//Simplify;

\!\(\*OverscriptBox[\(\[Chi]\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]]=Inverse[\[Chi]\[FilledSquare][OptionValue[ChartName]]];
\[Chi]\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=
\!\(\*OverscriptBox[\(\[Chi]\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]].\[Chi]\[FilledSquare][OptionValue[ChartName]];
\[Chi]\[FilledDownTriangle]\[FilledUpTriangle][OptionValue[ChartName]]=\[Chi]\[FilledSquare][OptionValue[ChartName]].
\!\(\*OverscriptBox[\(\[Chi]\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]];
MetricInBasis[\[Chi],-OptionValue[ChartName],\[Chi]\[FilledSquare][OptionValue[ChartName]]];
AllComponentValues[Inv\[Chi][{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],
\!\(\*OverscriptBox[\(\[Chi]\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]]];
AllComponentValues[Inv\[Chi][{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],\[Chi]\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]];
AllComponentValues[Inv\[Chi][-{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],\[Chi]\[FilledDownTriangle]\[FilledUpTriangle][OptionValue[ChartName]]];
AllComponentValues[Inv\[Chi][-{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],\[Chi]\[FilledSquare][OptionValue[ChartName]]];
MetricInBasis[\[Chi],OptionValue[ChartName],
\!\(\*OverscriptBox[\(\[Chi]\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]]];
AllComponentValues[\[Chi][{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],\[Chi]\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]];
AllComponentValues[\[Chi][-{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],\[Chi]\[FilledDownTriangle]\[FilledUpTriangle][OptionValue[ChartName]]];

If[(Transpose[\[Chi]\[FilledSquare][OptionValue[ChartName]]]==\[Chi]\[FilledSquare][OptionValue[ChartName]]//Simplify)&&(
\!\(\*OverscriptBox[\(\[Chi]\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]].\[Chi]\[FilledSquare][OptionValue[ChartName]]==\[Delta]\[FilledRectangle]//Simplify),
Null,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"spatial\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"metric\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"\[Chi]\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"spatial\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"metric\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"\[Chi]\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];

Print["\[Dash] Assigned components to the spatial metrics \[Gamma], \[CurlyPhi], \[Chi], \!\(\*OverscriptBox[\(\[Gamma]\), \(_\)]\), \!\(\*OverscriptBox[\(\[CurlyPhi]\), \(^\)]\) and \!\(\*OverscriptBox[\(\[Chi]\), \(^\)]\)."];

(* Computing the vielbein of the mean metric \[Iota] and other related quantities *)

i\[FilledRectangle][OptionValue[ChartName]]=CholeskyDecomposition[\[Chi]\[FilledSquare][OptionValue[ChartName]]].(Inverse@RealMatrixSqrt[\[Eta]\[FilledSquare]]);
ic\[FilledRectangle][OptionValue[ChartName]]=CholeskyDecomposition[\[Chi]c\[FilledSquare][OptionValue[ChartName]]].(Inverse@RealMatrixSqrt[\[Eta]\[FilledSquare]]);

\!\(\*OverscriptBox[\(i\[FilledRectangle]\), \(T\)]\)[OptionValue[ChartName]]=Transpose@i\[FilledRectangle][OptionValue[ChartName]];

\!\(\*OverscriptBox[\(ic\[FilledRectangle]\), \(T\)]\)[OptionValue[ChartName]]=Transpose@ic\[FilledRectangle][OptionValue[ChartName]];

\!\(\*OverscriptBox[\(i\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]]=Inverse@i\[FilledRectangle][OptionValue[ChartName]];

\!\(\*OverscriptBox[\(ic\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]]=Inverse@ic\[FilledRectangle][OptionValue[ChartName]];

AllComponentValues[\[Iota][{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],i\[FilledRectangle][OptionValue[ChartName]]];
AllComponentValues[\[Iota][-{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],
\!\(\*OverscriptBox[\(i\[FilledRectangle]\), \(T\)]\)[OptionValue[ChartName]]];
AllComponentValues[Inv\[Iota][{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],
\!\(\*OverscriptBox[\(i\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]]];
AllComponentValues[Inv\[Iota][-{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],Transpose[
\!\(\*OverscriptBox[\(i\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]]]];

AllComponentValues[\[Iota]c[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],ic\[FilledRectangle][OptionValue[ChartName]]];
AllComponentValues[\[Iota]c[-{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],
\!\(\*OverscriptBox[\(ic\[FilledRectangle]\), \(T\)]\)[OptionValue[ChartName]]];
AllComponentValues[Inv\[Iota]c[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],
\!\(\*OverscriptBox[\(ic\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]]];
AllComponentValues[Inv\[Iota]c[-{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],Transpose[
\!\(\*OverscriptBox[\(ic\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]]]];

AllComponentValues[hShi[-{i,OptionValue[ChartName]}],Flatten[\[Chi]\[FilledSquare][OptionValue[ChartName]].q\[FilledRectangle]]];

hn\[FilledRectangle][OptionValue[ChartName]]=
\!\(\*OverscriptBox[\(i\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]].p\[FilledRectangle]//Flatten;
AllComponentValues[hn[{i,OptionValue[ChartName]}],hn\[FilledRectangle][OptionValue[ChartName]]];
AllComponentValues[hn[-{i,OptionValue[ChartName]}],\[Chi]\[FilledSquare][OptionValue[ChartName]].hn\[FilledRectangle][OptionValue[ChartName]]];
hnc\[FilledRectangle][OptionValue[ChartName]]=
\!\(\*OverscriptBox[\(ic\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]].p\[FilledRectangle]//Flatten;
AllComponentValues[hnc[{i,OptionValue[ChartName]}],\[Chi]c\[FilledSquare][OptionValue[ChartName]].hnc\[FilledRectangle][OptionValue[ChartName]]];

Print["\[Dash] Assigned components to the vielbein of \[Chi] and \!\(\*OverscriptBox[\(\[Chi]\), \(^\)]\)."];

(* Conformal extrinsic curvatures *)

AllComponentValues[gA[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],gA\[FilledUpTriangle]\[FilledDownTriangle]//OptionValue[ApplyFunction]];
AllComponentValues[fA[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],fA\[FilledUpTriangle]\[FilledDownTriangle]//OptionValue[ApplyFunction]];
gA\[FilledUpTriangle]\[FilledUpTriangle][OptionValue[ChartName]]=gA\[FilledUpTriangle]\[FilledDownTriangle].
\!\(\*OverscriptBox[\(\[Gamma]c\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]]//OptionValue[ApplyFunction];
gA\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=Transpose[\[Gamma]c\[FilledSquare][OptionValue[ChartName]]].gA\[FilledUpTriangle]\[FilledDownTriangle]//OptionValue[ApplyFunction];
If[Transpose[gA\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]]]==gA\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]],
Null,
Print["\!\(\*
StyleBox[\"The\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"matrix\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"for\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"extrinsic\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"curvature\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"\[Gamma]\",\nFontColor->RGBColor[1, 0, 0]], \"_\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"is\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"not\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"symmetric\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[\"The\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"matrix\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"for\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"extrinsic\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"curvature\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"\[Gamma]\",\nFontColor->RGBColor[1, 0, 0]], \"_\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"is\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"not\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"symmetric\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];
gA\[FilledDownTriangle]\[FilledUpTriangle][OptionValue[ChartName]]=Transpose[\[Gamma]c\[FilledSquare][OptionValue[ChartName]]].gA\[FilledUpTriangle]\[FilledDownTriangle].
\!\(\*OverscriptBox[\(\[Gamma]c\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]]//OptionValue[ApplyFunction];
AllComponentValues[gA[{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],gA\[FilledUpTriangle]\[FilledUpTriangle][OptionValue[ChartName]]];AllComponentValues[gA[-{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],gA\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]]];
AllComponentValues[gA[-{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],gA\[FilledDownTriangle]\[FilledUpTriangle][OptionValue[ChartName]]];
fA\[FilledUpTriangle]\[FilledUpTriangle][OptionValue[ChartName]]=fA\[FilledUpTriangle]\[FilledDownTriangle].
\!\(\*OverscriptBox[\(\[CurlyPhi]c\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]]//OptionValue[ApplyFunction];
fA\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=Transpose[\[CurlyPhi]c\[FilledSquare][OptionValue[ChartName]]].fA\[FilledUpTriangle]\[FilledDownTriangle]//OptionValue[ApplyFunction];
If[Transpose[fA\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]]]==fA\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]],
Null,
Print["\!\(\*
StyleBox[\"The\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"matrix\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"for\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"extrinsic\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"curvature\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"\[CurlyPhi]\",\nFontColor->RGBColor[1, 0, 0]], \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"is\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"not\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"symmetric\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[\"The\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"matrix\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"for\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"extrinsic\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"curvature\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"\[CurlyPhi]\",\nFontColor->RGBColor[1, 0, 0]], \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"is\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"not\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"symmetric\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];
fA\[FilledDownTriangle]\[FilledUpTriangle][OptionValue[ChartName]]=Transpose[\[CurlyPhi]c\[FilledSquare][OptionValue[ChartName]]].fA\[FilledUpTriangle]\[FilledDownTriangle].
\!\(\*OverscriptBox[\(\[CurlyPhi]c\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]]//OptionValue[ApplyFunction];
AllComponentValues[fA[{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],fA\[FilledUpTriangle]\[FilledUpTriangle][OptionValue[ChartName]]];AllComponentValues[fA[-{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],fA\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]]];
AllComponentValues[fA[-{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],fA\[FilledDownTriangle]\[FilledUpTriangle][OptionValue[ChartName]]];

gK\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=gA\[FilledUpTriangle]\[FilledDownTriangle]+1/3 \[Delta]\[FilledRectangle] 
\!\(\*UnderscriptBox[\(TrgK\[FilledSmallCircle]\), \(_\)]\)//OptionValue[ApplyFunction];
gK\[FilledUpTriangle]\[FilledUpTriangle][OptionValue[ChartName]]=gK\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]].
\!\(\*OverscriptBox[\(\[Gamma]\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]]//OptionValue[ApplyFunction];
gK\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=Transpose[\[Gamma]\[FilledSquare][OptionValue[ChartName]]].gK\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]//OptionValue[ApplyFunction];
gK\[FilledDownTriangle]\[FilledUpTriangle][OptionValue[ChartName]]=Transpose[\[Gamma]\[FilledSquare][OptionValue[ChartName]]].gK\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]].
\!\(\*OverscriptBox[\(\[Gamma]\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]]//OptionValue[ApplyFunction];
AllComponentValues[gK[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],gK\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]];
AllComponentValues[gK[{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],gK\[FilledUpTriangle]\[FilledUpTriangle][OptionValue[ChartName]]];AllComponentValues[gK[-{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],gK\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]]];
AllComponentValues[gK[-{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],gK\[FilledDownTriangle]\[FilledUpTriangle][OptionValue[ChartName]]];

fK\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=fA\[FilledUpTriangle]\[FilledDownTriangle]+1/3 \[Delta]\[FilledRectangle] 
\!\(\*UnderscriptBox[\(TrfK\[FilledSmallCircle]\), \(_\)]\)//OptionValue[ApplyFunction];
fK\[FilledUpTriangle]\[FilledUpTriangle][OptionValue[ChartName]]=fK\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]].
\!\(\*OverscriptBox[\(\[CurlyPhi]\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]]//OptionValue[ApplyFunction];
fK\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=Transpose[\[CurlyPhi]\[FilledSquare][OptionValue[ChartName]]].fK\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]//OptionValue[ApplyFunction];
fK\[FilledDownTriangle]\[FilledUpTriangle][OptionValue[ChartName]]=Transpose[\[CurlyPhi]\[FilledSquare][OptionValue[ChartName]]].fK\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]].
\!\(\*OverscriptBox[\(\[CurlyPhi]\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]]//OptionValue[ApplyFunction];
AllComponentValues[fK[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],fK\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]];
AllComponentValues[fK[{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],fK\[FilledUpTriangle]\[FilledUpTriangle][OptionValue[ChartName]]];AllComponentValues[fK[-{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],fK\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]]];
AllComponentValues[fK[-{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],fK\[FilledDownTriangle]\[FilledUpTriangle][OptionValue[ChartName]]];

Print["\[Dash] Assigned components to the extrinsic curvatures."];

(* Assigning components to the conformal connections *)

AllComponentValues[g\[CapitalLambda][{i,OptionValue[ChartName]}],Flatten@g\[CapitalLambda]\[FilledRectangle]//OptionValue[ApplyFunction]];AllComponentValues[f\[CapitalLambda][{i,OptionValue[ChartName]}],Flatten@f\[CapitalLambda]\[FilledRectangle]//OptionValue[ApplyFunction]];
g\[CapitalLambda]\[FilledDownTriangle][OptionValue[ChartName]]=\[Gamma]c\[FilledSquare][OptionValue[ChartName]].Flatten@g\[CapitalLambda]\[FilledRectangle]//OptionValue[ApplyFunction];
f\[CapitalLambda]\[FilledDownTriangle][OptionValue[ChartName]]=\[CurlyPhi]c\[FilledSquare][OptionValue[ChartName]].Flatten@f\[CapitalLambda]\[FilledRectangle]//OptionValue[ApplyFunction];
AllComponentValues[g\[CapitalLambda][-{i,OptionValue[ChartName]}],g\[CapitalLambda]\[FilledDownTriangle][OptionValue[ChartName]]];AllComponentValues[f\[CapitalLambda][-{i,OptionValue[ChartName]}],f\[CapitalLambda]\[FilledDownTriangle][OptionValue[ChartName]]];

Print["\[Dash] Assigned components to the conformal connections."];

(* Assigning components to the background geometries *)

SetOptions[MetricCompute,Verbose->False];

MetricInBasis[gback,-OptionValue[ChartName],gback\[FilledSquare]];
MetricInBasis[fback,-OptionValue[ChartName],fback\[FilledSquare]];
MetricInBasis[hback,-OptionValue[ChartName],hback\[FilledSquare]];

MetricCompute[gback,OptionValue[ChartName],All,CVSimplify->Simplify,Parallelize->True];
MetricCompute[fback,OptionValue[ChartName],All,CVSimplify->Simplify,Parallelize->True];
MetricCompute[hback,OptionValue[ChartName],All,CVSimplify->Simplify,Parallelize->True];

gRb\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=RiemanngCDback[-i,-j,-k,-q]//ToBasis[OptionValue[ChartName]]//ToBasis[OptionValue[ChartName]]//ComponentArray//ToValues//ToValues;
gRb\[FilledUpTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=
\!\(\*OverscriptBox[\(\[Gamma]c\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]].gRb\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]];
AllComponentValues[RiemanngCDback[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]},-{k,OptionValue[ChartName]},-{q,OptionValue[ChartName]}],gRb\[FilledUpTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]]];

fRb\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=RiemannfCDback[-i,-j,-k,-q]//ToBasis[OptionValue[ChartName]]//ToBasis[OptionValue[ChartName]]//ComponentArray//ToValues//ToValues;
fRb\[FilledUpTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=
\!\(\*OverscriptBox[\(\[CurlyPhi]c\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]].fRb\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]];
AllComponentValues[RiemannfCDback[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]},-{k,OptionValue[ChartName]},-{q,OptionValue[ChartName]}],fRb\[FilledUpTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]]];

hRb\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=RiemannhCDback[-i,-j,-k,-q]//ToBasis[OptionValue[ChartName]]//ToBasis[OptionValue[ChartName]]//ComponentArray//ToValues//ToValues;
hRb\[FilledUpTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=
\!\(\*OverscriptBox[\(\[Chi]c\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]].hRb\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]];
AllComponentValues[RiemannhCDback[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]},-{k,OptionValue[ChartName]},-{q,OptionValue[ChartName]}],hRb\[FilledUpTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]]];

Print["\[Dash] Assigned components to the background geometries."];

(* Computing the spatial geometries *)

If[MemberQ[OptionValue[ComputeGeometryOf],\[Gamma]],
MetricCompute[\[Gamma]c,OptionValue[ChartName],All,CVSimplify->Simplify,Parallelize->True];
MetricCompute[\[Gamma],OptionValue[ChartName],All,CVSimplify->Simplify,Parallelize->True];
Print["\[Dash] Computed geometries for the spatial metrics \!\(\*OverscriptBox[\(\[Gamma]\), \(_\)]\) and \[Gamma]."];
gGeometryFlag[OptionValue[ChartName]]:=True;
];
If[MemberQ[OptionValue[ComputeGeometryOf],\[CurlyPhi]],
MetricCompute[\[CurlyPhi]c,OptionValue[ChartName],All,CVSimplify->Simplify,Parallelize->True];
MetricCompute[\[CurlyPhi],OptionValue[ChartName],All,CVSimplify->Simplify,Parallelize->True];
Print["\[Dash] Computed geometries for the spatial metrics \!\(\*OverscriptBox[\(\[CurlyPhi]\), \(~\)]\) and \[CurlyPhi]."];
fGeometryFlag[OptionValue[ChartName]]:=True;
];
If[MemberQ[OptionValue[ComputeGeometryOf],\[Chi]],
MetricCompute[\[Chi]c,OptionValue[ChartName],All,CVSimplify->Simplify,Parallelize->True];
MetricCompute[\[Chi],OptionValue[ChartName],All,CVSimplify->Simplify,Parallelize->True];
Print["\[Dash] Computed geometries for the spatial metrics \!\(\*OverscriptBox[\(\[Chi]\), \(^\)]\) and \[Chi]."];
hGeometryFlag[OptionValue[ChartName]]:=True;
];

(* Computing the components of the connections tensors *)

gC\[FilledUpTriangle]\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=Christoffel[gCDc,PDOfBasis[OptionValue[ChartName]]][i,-j,-k]-Christoffel[gCDback,PDOfBasis[OptionValue[ChartName]]][i,-j,-k]//ToBasis[OptionValue[ChartName]]//ToBasis[OptionValue[ChartName]]//ComponentArray//ToValues//ToValues;
AllComponentValues[gC[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]},-{k,OptionValue[ChartName]}],gC\[FilledUpTriangle]\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]]];

fC\[FilledUpTriangle]\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=Christoffel[fCDc,PDOfBasis[OptionValue[ChartName]]][i,-j,-k]-Christoffel[fCDback,PDOfBasis[OptionValue[ChartName]]][i,-j,-k]//ToBasis[OptionValue[ChartName]]//ToBasis[OptionValue[ChartName]]//ComponentArray//ToValues//ToValues;
AllComponentValues[fC[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]},-{k,OptionValue[ChartName]}],fC\[FilledUpTriangle]\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]]];

Print["\[Dash] Assigned components to the connection tensors."];

(* Computing the components of the Ricci tensor as a function of the conformal connection. *)

gR\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=Module[{d1=NewIndexIn[Tangent\[CapitalSigma]t],d2=NewIndexIn[Tangent\[CapitalSigma]t],d3=NewIndexIn[Tangent\[CapitalSigma]t],d4=NewIndexIn[Tangent\[CapitalSigma]t]},
-1/2 Inv\[Gamma]c[d1,d2]gCDback[-d1][gCDback[-d2][\[Gamma]c[-i,-j]]]+1/2 (\[Gamma]c[-d1,-i]gCDback[-j][g\[CapitalLambda][d1]]+\[Gamma]c[-d1,-j]gCDback[-i][g\[CapitalLambda][d1]])-1/2 (Inv\[Gamma]c[d1,d2]\[Gamma]c[-d3,-i]RiemanngCDback[-j,-d1,-d2,d3]+Inv\[Gamma]c[d1,d2]\[Gamma]c[-d3,-j]RiemanngCDback[-i,-d1,-d2,d3])+1/2 Inv\[Gamma]c[d2,d3]gC[d1,-d2,-d3](\[Gamma]c[-i,-d4]gC[d4,-j,-d1]+\[Gamma]c[-j,-d4]gC[d4,-i,-d1])+Inv\[Gamma]c[d1,d2](gC[d3,-d1,-i]Inv\[Gamma]c[-j,-d4]gC[d4,-d3,-d2]+gC[d3,-d1,-j]Inv\[Gamma]c[-i,-d4]gC[d4,-d3,-d2]+gC[d3,-i,-d1]Inv\[Gamma]c[-d3,-d4]gC[d4,-j,-d2])
]/.{PD->PDOfBasis[OptionValue[ChartName]],ChristoffelgCDc->ChristoffelFromMetric[\[Gamma]c[-i,-j],OptionValue[ChartName]],ChristoffelfCDc->ChristoffelFromMetric[\[CurlyPhi]c[-i,-j],OptionValue[ChartName]],ChristoffelgCDback->ChristoffelFromMetric[gback[-i,-j],OptionValue[ChartName]],ChristoffelfCDback->ChristoffelFromMetric[fback[-i,-j],OptionValue[ChartName]]}//ToBasis[OptionValue[ChartName]]//ToBasis[OptionValue[ChartName]]//TraceBasisDummy//ComponentArray//ToValues//ToValues//Simplify;
fR\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=Module[{d1=NewIndexIn[Tangent\[CapitalSigma]t],d2=NewIndexIn[Tangent\[CapitalSigma]t],d3=NewIndexIn[Tangent\[CapitalSigma]t],d4=NewIndexIn[Tangent\[CapitalSigma]t]},
-1/2 Inv\[CurlyPhi]c[d1,d2]fCDback[-d1][fCDback[-d2][\[CurlyPhi]c[-i,-j]]]+1/2 (\[CurlyPhi]c[-d1,-i]fCDback[-j][f\[CapitalLambda][d1]]+\[CurlyPhi]c[-d1,-j]fCDback[-i][f\[CapitalLambda][d1]])-1/2 (Inv\[CurlyPhi]c[d1,d2]\[CurlyPhi]c[-d3,-i]RiemannfCDback[-j,-d1,-d2,d3]+Inv\[CurlyPhi]c[d1,d2]\[CurlyPhi]c[-d3,-j]RiemannfCDback[-i,-d1,-d2,d3])+1/2 Inv\[CurlyPhi]c[d2,d3]fC[d1,-d2,-d3](\[CurlyPhi]c[-i,-d4]fC[d4,-j,-d1]+\[CurlyPhi]c[-j,-d4]fC[d4,-i,-d1])+Inv\[CurlyPhi]c[d1,d2](fC[d3,-d1,-i]Inv\[CurlyPhi]c[-j,-d4]fC[d4,-d3,-d2]+fC[d3,-d1,-j]Inv\[CurlyPhi]c[-i,-d4]fC[d4,-d3,-d2]+fC[d3,-i,-d1]Inv\[CurlyPhi]c[-d3,-d4]fC[d4,-j,-d2])
]/.{PD->PDOfBasis[OptionValue[ChartName]],ChristoffelgCDc->ChristoffelFromMetric[\[Gamma]c[-i,-j],OptionValue[ChartName]],ChristoffelfCDc->ChristoffelFromMetric[\[CurlyPhi]c[-i,-j],OptionValue[ChartName]],ChristoffelgCDback->ChristoffelFromMetric[gback[-i,-j],OptionValue[ChartName]],ChristoffelfCDback->ChristoffelFromMetric[fback[-i,-j],OptionValue[ChartName]]}//ToBasis[OptionValue[ChartName]]//ToBasis[OptionValue[ChartName]]//TraceBasisDummy//ComponentArray//ToValues//ToValues//Simplify;
gR\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=
\!\(\*OverscriptBox[\(\[Gamma]c\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]].gR\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]]//Simplify;
gR\[FilledUpTriangle]\[FilledUpTriangle][OptionValue[ChartName]]=
\!\(\*OverscriptBox[\(\[Gamma]c\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]].gR\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]].
\!\(\*OverscriptBox[\(\[Gamma]c\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]]//Simplify;
gR\[FilledDownTriangle]\[FilledUpTriangle][OptionValue[ChartName]]=gR\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]].
\!\(\*OverscriptBox[\(\[Gamma]c\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]]//Simplify;
fR\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=
\!\(\*OverscriptBox[\(\[CurlyPhi]c\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]].fR\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]]//Simplify;
fR\[FilledUpTriangle]\[FilledUpTriangle][OptionValue[ChartName]]=
\!\(\*OverscriptBox[\(\[CurlyPhi]c\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]].fR\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]].
\!\(\*OverscriptBox[\(\[CurlyPhi]c\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]]//Simplify;
fR\[FilledDownTriangle]\[FilledUpTriangle][OptionValue[ChartName]]=fR\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]].
\!\(\*OverscriptBox[\(\[CurlyPhi]c\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]]//Simplify;

ZerosIn$gR=Position[gR\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]],0,2];
ZerosIn$fR=Position[fR\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]],0,2];
Apply[ComponentValue[gR[{#1,-OptionValue[ChartName]},{#2,-OptionValue[ChartName]}],0]&,#]&/@ZerosIn$gR;
Apply[ComponentValue[fR[{#1,-OptionValue[ChartName]},{#2,-OptionValue[ChartName]}],0]&,#]&/@ZerosIn$fR;
NonZeroIn$gR=Complement[Tuples[{1,2,3},2],ZerosIn$gR];
NonZeroIn$fR=Complement[Tuples[{1,2,3},2],ZerosIn$fR];

Print["\[Dash] Assigned components to the Ricci tensors as functions of the conformal connections."];

(* Computing the shift vectors of g and f *)

AllComponentValues[hShi[{i,OptionValue[ChartName]}],Flatten@q\[FilledRectangle]];
gShi\[FilledUpTriangle][OptionValue[ChartName]]=Flatten@q\[FilledRectangle]+
\!\(\*UnderscriptBox[\(gLap\[FilledSmallCircle]\), \(_\)]\) Flatten[
\!\(\*OverscriptBox[\(e\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]].Flatten@p\[FilledRectangle]]
\!\(\*UnderscriptBox[\(\[Lambda]\[FilledSmallCircle]\), \(_\)]\)^-1//Simplify;
gShi\[FilledDownTriangle][OptionValue[ChartName]]=\[Gamma]\[FilledSquare][OptionValue[ChartName]].gShi\[FilledUpTriangle][OptionValue[ChartName]];
fShi\[FilledUpTriangle][OptionValue[ChartName]]=Flatten@q\[FilledRectangle]-
\!\(\*UnderscriptBox[\(fLap\[FilledSmallCircle]\), \(_\)]\) Flatten[
\!\(\*OverscriptBox[\(m\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]].Flatten@p\[FilledRectangle]]
\!\(\*UnderscriptBox[\(\[Lambda]\[FilledSmallCircle]\), \(_\)]\)^-1//Simplify;
fShi\[FilledDownTriangle][OptionValue[ChartName]]=\[CurlyPhi]\[FilledSquare][OptionValue[ChartName]].fShi\[FilledUpTriangle][OptionValue[ChartName]];

ZerosIn$gShi=Position[gShi\[FilledUpTriangle][OptionValue[ChartName]],0,1];
ZerosIn$fShi=Position[fShi\[FilledUpTriangle][OptionValue[ChartName]],0,1];
Apply[ComponentValue[gShi[{#,OptionValue[ChartName]}],0]&,#]&/@ZerosIn$gShi;
Apply[ComponentValue[fShi[{#,OptionValue[ChartName]}],0]&,#]&/@ZerosIn$fShi;
Apply[ComponentValue[gShi[{#,-OptionValue[ChartName]}],0]&,#]&/@ZerosIn$gShi;
Apply[ComponentValue[fShi[{#,-OptionValue[ChartName]}],0]&,#]&/@ZerosIn$fShi;
NonZeroIn$gShi=Complement[Partition[Range[1,3],1],ZerosIn$gShi];
NonZeroIn$fShi=Complement[Partition[Range[1,3],1],ZerosIn$fShi];

gShi\[FilledUpTriangle]$Comp[OptionValue[ChartName]]={
\!\(\*UnderscriptBox[\(gShi1\), \(_\)]\),
\!\(\*UnderscriptBox[\(gShi2\), \(_\)]\),
\!\(\*UnderscriptBox[\(gShi3\), \(_\)]\)};
gShi\[FilledDownTriangle]$Comp[OptionValue[ChartName]]=\[Gamma]\[FilledSquare][OptionValue[ChartName]].gShi\[FilledUpTriangle]$Comp[OptionValue[ChartName]];
fShi\[FilledUpTriangle]$Comp[OptionValue[ChartName]]={
\!\(\*UnderscriptBox[\(fShi1\), \(_\)]\),
\!\(\*UnderscriptBox[\(fShi2\), \(_\)]\),
\!\(\*UnderscriptBox[\(fShi3\), \(_\)]\)};
fShi\[FilledDownTriangle]$Comp[OptionValue[ChartName]]=\[CurlyPhi]\[FilledSquare][OptionValue[ChartName]].fShi\[FilledUpTriangle]$Comp[OptionValue[ChartName]];

Apply[ComponentValue[gShi[{#,OptionValue[ChartName]}],gShi\[FilledUpTriangle]$Comp[OptionValue[ChartName]][[#]]]&,#]&/@NonZeroIn$gShi;
Apply[ComponentValue[fShi[{#,OptionValue[ChartName]}],fShi\[FilledUpTriangle]$Comp[OptionValue[ChartName]][[#]]]&,#]&/@NonZeroIn$fShi;
Apply[ComponentValue[gShi[{#,-OptionValue[ChartName]}],gShi\[FilledDownTriangle]$Comp[OptionValue[ChartName]][[#]]]&,#]&/@NonZeroIn$gShi;
Apply[ComponentValue[fShi[{#,-OptionValue[ChartName]}],fShi\[FilledDownTriangle]$Comp[OptionValue[ChartName]][[#]]]&,#]&/@NonZeroIn$fShi;

Print["\[Dash] Assigned components to the shift vectors."];

(* Assigning components to external sources *)

gj\[FilledUpTriangle][OptionValue[ChartName]]={gj1\[FilledSmallCircle][Sequence@@ListOfVariables[OptionValue[ChartName]]],gj2\[FilledSmallCircle][Sequence@@ListOfVariables[OptionValue[ChartName]]],gj3\[FilledSmallCircle][Sequence@@ListOfVariables[OptionValue[ChartName]]]}//Simplify//OptionValue[ApplyFunction];
gj\[FilledDownTriangle][OptionValue[ChartName]]=\[Gamma]\[FilledSquare][OptionValue[ChartName]].gj\[FilledUpTriangle][OptionValue[ChartName]];
AllComponentValues[gj[{i,OptionValue[ChartName]}],Flatten@gj\[FilledUpTriangle][OptionValue[ChartName]]];
AllComponentValues[gj[-{i,OptionValue[ChartName]}],Flatten@gj\[FilledDownTriangle][OptionValue[ChartName]]];

fj\[FilledUpTriangle][OptionValue[ChartName]]={fj1\[FilledSmallCircle][Sequence@@ListOfVariables[OptionValue[ChartName]]],fj2\[FilledSmallCircle][Sequence@@ListOfVariables[OptionValue[ChartName]]],fj3\[FilledSmallCircle][Sequence@@ListOfVariables[OptionValue[ChartName]]]}//Simplify//OptionValue[ApplyFunction];
fj\[FilledDownTriangle][OptionValue[ChartName]]=\[CurlyPhi]\[FilledSquare][OptionValue[ChartName]].fj\[FilledUpTriangle][OptionValue[ChartName]];
AllComponentValues[fj[{i,OptionValue[ChartName]}],Flatten@fj\[FilledUpTriangle][OptionValue[ChartName]]];
AllComponentValues[fj[-{i,OptionValue[ChartName]}],Flatten@fj\[FilledDownTriangle][OptionValue[ChartName]]];

gJ\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=({
 {gJ11\[FilledSmallCircle][Sequence@@ListOfVariables[OptionValue[ChartName]]], gJ12\[FilledSmallCircle][Sequence@@ListOfVariables[OptionValue[ChartName]]], gJ13\[FilledSmallCircle][Sequence@@ListOfVariables[OptionValue[ChartName]]]},
 {gJ21\[FilledSmallCircle][Sequence@@ListOfVariables[OptionValue[ChartName]]], gJ22\[FilledSmallCircle][Sequence@@ListOfVariables[OptionValue[ChartName]]], gJ23\[FilledSmallCircle][Sequence@@ListOfVariables[OptionValue[ChartName]]]},
 {gJ31\[FilledSmallCircle][Sequence@@ListOfVariables[OptionValue[ChartName]]], gJ32\[FilledSmallCircle][Sequence@@ListOfVariables[OptionValue[ChartName]]], gJ33\[FilledSmallCircle][Sequence@@ListOfVariables[OptionValue[ChartName]]]}
})//Simplify//OptionValue[ApplyFunction];
AllComponentValues[gJ[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],gJ\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]];
gJ\[FilledUpTriangle]\[FilledUpTriangle][OptionValue[ChartName]]=gJ\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]].
\!\(\*OverscriptBox[\(\[Gamma]\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]];
gJ\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=Transpose[\[Gamma]\[FilledSquare][OptionValue[ChartName]]].gJ\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]];
gJ\[FilledDownTriangle]\[FilledUpTriangle][OptionValue[ChartName]]=Transpose[\[Gamma]\[FilledSquare][OptionValue[ChartName]]].gJ\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]].
\!\(\*OverscriptBox[\(\[Gamma]\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]];
AllComponentValues[gJ[{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],gJ\[FilledUpTriangle]\[FilledUpTriangle][OptionValue[ChartName]]];AllComponentValues[gJ[-{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],gJ\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]]];
AllComponentValues[gJ[-{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],gJ\[FilledDownTriangle]\[FilledUpTriangle][OptionValue[ChartName]]];

fJ\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=({
 {fJ11\[FilledSmallCircle][Sequence@@ListOfVariables[OptionValue[ChartName]]], fJ12\[FilledSmallCircle][Sequence@@ListOfVariables[OptionValue[ChartName]]], fJ13\[FilledSmallCircle][Sequence@@ListOfVariables[OptionValue[ChartName]]]},
 {fJ21\[FilledSmallCircle][Sequence@@ListOfVariables[OptionValue[ChartName]]], fJ22\[FilledSmallCircle][Sequence@@ListOfVariables[OptionValue[ChartName]]], fJ23\[FilledSmallCircle][Sequence@@ListOfVariables[OptionValue[ChartName]]]},
 {fJ31\[FilledSmallCircle][Sequence@@ListOfVariables[OptionValue[ChartName]]], fJ32\[FilledSmallCircle][Sequence@@ListOfVariables[OptionValue[ChartName]]], fJ33\[FilledSmallCircle][Sequence@@ListOfVariables[OptionValue[ChartName]]]}
})//Simplify//OptionValue[ApplyFunction];
AllComponentValues[fJ[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],fJ\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]];
fJ\[FilledUpTriangle]\[FilledUpTriangle][OptionValue[ChartName]]=fJ\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]].
\!\(\*OverscriptBox[\(\[CurlyPhi]\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]];
fJ\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=Transpose[\[CurlyPhi]\[FilledSquare][OptionValue[ChartName]]].fJ\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]];
fJ\[FilledDownTriangle]\[FilledUpTriangle][OptionValue[ChartName]]=Transpose[\[CurlyPhi]\[FilledSquare][OptionValue[ChartName]]].fJ\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]].
\!\(\*OverscriptBox[\(\[CurlyPhi]\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]];
AllComponentValues[fJ[{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],fJ\[FilledUpTriangle]\[FilledUpTriangle][OptionValue[ChartName]]];AllComponentValues[fJ[-{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],fJ\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]]];
AllComponentValues[fJ[-{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],fJ\[FilledDownTriangle]\[FilledUpTriangle][OptionValue[ChartName]]];

Print["\[Dash] Assigned components to the external matter sources."];

(* Bimetric interactions for g *)

gnc\[FilledUpTriangle][OptionValue[ChartName]]=
\!\(\*OverscriptBox[\(ec\[FilledRectangle]\), \(-1\)]\).v\[FilledUpTriangle][OptionValue[ChartName]]//Simplify//OptionValue[ApplyFunction];
gn\[FilledUpTriangle][OptionValue[ChartName]]=
\!\(\*OverscriptBox[\(e\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]].v\[FilledUpTriangle][OptionValue[ChartName]]//Simplify//OptionValue[ApplyFunction];
AllComponentValues[gnc[{i,OptionValue[ChartName]}],Flatten@gnc\[FilledUpTriangle][OptionValue[ChartName]]];
AllComponentValues[gn[{i,OptionValue[ChartName]}],Flatten@gn\[FilledUpTriangle][OptionValue[ChartName]]];

gnc\[FilledDownTriangle][OptionValue[ChartName]]=\[Gamma]c\[FilledSquare][OptionValue[ChartName]].gnc\[FilledUpTriangle][OptionValue[ChartName]]//Simplify//OptionValue[ApplyFunction];
gn\[FilledDownTriangle][OptionValue[ChartName]]=\[Gamma]\[FilledSquare][OptionValue[ChartName]].gn\[FilledUpTriangle][OptionValue[ChartName]]//Simplify//OptionValue[ApplyFunction];
AllComponentValues[gnc[-{i,OptionValue[ChartName]}],Flatten@gnc\[FilledDownTriangle][OptionValue[ChartName]]];
AllComponentValues[gn[-{i,OptionValue[ChartName]}],Flatten@gn\[FilledDownTriangle][OptionValue[ChartName]]];

gQc\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=
\!\(\*OverscriptBox[\(ec\[FilledRectangle]\), \(-1\)]\).\[CapitalLambda]Sq\[FilledRectangle][OptionValue[ChartName]].ec\[FilledRectangle]//Simplify//OptionValue[ApplyFunction];
gQ\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=
\!\(\*OverscriptBox[\(e\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]].\[CapitalLambda]Sq\[FilledRectangle][OptionValue[ChartName]].e\[FilledRectangle][OptionValue[ChartName]]//Simplify//OptionValue[ApplyFunction];
If[gQ\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]==gQc\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]//Simplify,
Null,
Print["\!\(\*
StyleBox[\"\[ScriptCapitalQ]\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"is\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"not\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"equal\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"to\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[\"\[ScriptCapitalQ]\", \"_\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[\"\[ScriptCapitalQ]\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"is\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"not\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"equal\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"to\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[\"\[ScriptCapitalQ]\", \"_\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];
If[gQ\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]].gn\[FilledUpTriangle][OptionValue[ChartName]]==
\!\(\*UnderscriptBox[\(\[Lambda]\[FilledSmallCircle]\), \(_\)]\)^2 gn\[FilledUpTriangle][OptionValue[ChartName]]//Simplify,
Null,
Print["\!\(\*
StyleBox[\"n\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"should\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"be\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"an\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"eigenvector\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"\[ScriptCapitalQ]\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"with\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"eigenvalue\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[SuperscriptBox[\"\[Lambda]\", \"2\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[\"n\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"should\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"be\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"an\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"eigenvector\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"\[ScriptCapitalQ]\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"with\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"eigenvalue\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[SuperscriptBox[\"\[Lambda]\", \"2\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];
AllComponentValues[gQc[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],gQc\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]];
AllComponentValues[gQ[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],gQ\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]];

gBc\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=
\!\(\*OverscriptBox[\(ec\[FilledRectangle]\), \(-1\)]\).\[CapitalLambda]\[FilledRectangle][OptionValue[ChartName]].mc\[FilledRectangle][OptionValue[ChartName]]//Simplify//OptionValue[ApplyFunction];
temp$gB=
\!\(\*OverscriptBox[\(e\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]].\[CapitalLambda]\[FilledRectangle][OptionValue[ChartName]].m\[FilledRectangle][OptionValue[ChartName]]//Simplify;
gB\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=temp$gB//OptionValue[ApplyFunction];
If[gB\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]==E^(2(
\!\(\*UnderscriptBox[\(fconf\[FilledSmallCircle]\), \(_\)]\)-
\!\(\*UnderscriptBox[\(gconf\[FilledSmallCircle]\), \(_\)]\))) gBc\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]//Simplify,
Null,
Print["\!\(\*
StyleBox[\"\[ScriptCapitalB]\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"\[NotEqual]\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[SuperscriptBox[\"\[ExponentialE]\", 
RowBox[{\"2\", 
RowBox[{\"(\", 
RowBox[{\"\[Psi]\", \"-\", \"\[Phi]\"}], \")\"}]}]],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[\"\[ScriptCapitalB]\", \"_\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[\"\[ScriptCapitalB]\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"\[NotEqual]\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[SuperscriptBox[\"\[ExponentialE]\", 
RowBox[{\"2\", 
RowBox[{\"(\", 
RowBox[{\"\[Psi]\", \"-\", \"\[Phi]\"}], \")\"}]}]],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[\"\[ScriptCapitalB]\", \"_\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];
If[\[Chi]\[FilledSquare][OptionValue[ChartName]]==\[Gamma]\[FilledSquare][OptionValue[ChartName]].gB\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]//Simplify,
Null,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"\[ScriptCapitalB]\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"\[ScriptCapitalB]\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];
AllComponentValues[gBc[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],gBc\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]];
AllComponentValues[gB[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],gB\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]];
AllComponentValues[gBc[-{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],\[Gamma]c\[FilledSquare][OptionValue[ChartName]].gBc\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]].
\!\(\*OverscriptBox[\(\[Gamma]c\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]]];
AllComponentValues[gB[-{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],\[Gamma]\[FilledSquare][OptionValue[ChartName]].gB\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]].
\!\(\*OverscriptBox[\(\[Gamma]\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]]];

gDc\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=
\!\(\*OverscriptBox[\(mc\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]].
\!\(\*OverscriptBox[\(\[CapitalLambda]\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]].ec\[FilledRectangle]//Simplify//OptionValue[ApplyFunction];
temp$gD=
\!\(\*OverscriptBox[\(m\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]].
\!\(\*OverscriptBox[\(\[CapitalLambda]\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]].e\[FilledRectangle][OptionValue[ChartName]]//Simplify;
gD\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=temp$gD//OptionValue[ApplyFunction];
If[gD\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]==E^(2(
\!\(\*UnderscriptBox[\(gconf\[FilledSmallCircle]\), \(_\)]\)-
\!\(\*UnderscriptBox[\(fconf\[FilledSmallCircle]\), \(_\)]\))) gDc\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]//Simplify,
Null,
Print["\!\(\*
StyleBox[\"\[ScriptCapitalD]\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"\[NotEqual]\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[SuperscriptBox[\"\[ExponentialE]\", 
RowBox[{\"2\", 
RowBox[{\"(\", 
RowBox[{\"\[Phi]\", \"-\", \"\[Psi]\"}], \")\"}]}]],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[\"\[ScriptCapitalD]\", \"_\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[\"\[ScriptCapitalD]\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"\[NotEqual]\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[SuperscriptBox[\"\[ExponentialE]\", 
RowBox[{\"2\", 
RowBox[{\"(\", 
RowBox[{\"\[Phi]\", \"-\", \"\[Psi]\"}], \")\"}]}]],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[\"\[ScriptCapitalD]\", \"_\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];
If[\[Chi]\[FilledSquare][OptionValue[ChartName]]==\[Gamma]\[FilledSquare][OptionValue[ChartName]].Inverse[gD\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]]//Simplify,
Null,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"\[ScriptCapitalD]\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"\[ScriptCapitalD]\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];
AllComponentValues[gDc[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],gDc\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]];
AllComponentValues[gD[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],gD\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]];

gUc\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=$Vsign 
\!\(\*UnderscriptBox[\(\[Lambda]\[FilledSmallCircle]\), \(_\)]\)^-1 \!\(
\*UnderoverscriptBox[\(\[Sum]\), \(n = 0\), \(4\)]\(\[Beta][n] 
\*SuperscriptBox[\(E\), \(2 \((n - 1)\) \((
\*UnderscriptBox[\(fconf\[FilledSmallCircle]\), \(_\)] - 
\*UnderscriptBox[\(gconf\[FilledSmallCircle]\), \(_\)])\)\)] 
\(\*SubscriptBox[\(Y\), \(n - 1\)]\)[gBc\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]]\)\)//Simplify//OptionValue[ApplyFunction];
gU\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]= $Vsign 
\!\(\*UnderscriptBox[\(\[Lambda]\[FilledSmallCircle]\), \(_\)]\)^-1 \!\(
\*UnderoverscriptBox[\(\[Sum]\), \(n = 0\), \(4\)]\(\[Beta][n] 
\(\*SubscriptBox[\(Y\), \(n - 1\)]\)[gB\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]]\)\)//Simplify//OptionValue[ApplyFunction];
If[(gUc\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]==gU\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]])//Simplify,
Null,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"BSSN\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"formulation\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"\[ScriptCapitalU]\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"BSSN\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"formulation\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"\[ScriptCapitalU]\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];
If[Transpose[\[Gamma]\[FilledSquare][OptionValue[ChartName]].gU\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]]==\[Gamma]\[FilledSquare][OptionValue[ChartName]].gU\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]],
Null,
Print["\!\(\*
StyleBox[\"The\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computed\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"\[Gamma]\[ScriptCapitalU]\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"is\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"not\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"symmetric\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[\"The\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computed\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"\[Gamma]\[ScriptCapitalU]\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"is\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"not\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"symmetric\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];
AllComponentValues[gU[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],gU\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]];

Print["\[Dash] Computed the bimetric interactions in the g-sector."];

(* Bimetric interactions for f *)

fnc\[FilledUpTriangle][OptionValue[ChartName]]=
\!\(\*OverscriptBox[\(mc\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]].v\[FilledUpTriangle][OptionValue[ChartName]]//Simplify//OptionValue[ApplyFunction];
fn\[FilledUpTriangle][OptionValue[ChartName]]=
\!\(\*OverscriptBox[\(m\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]].v\[FilledUpTriangle][OptionValue[ChartName]]//Simplify//OptionValue[ApplyFunction];
AllComponentValues[fnc[{i,OptionValue[ChartName]}],Flatten@fnc\[FilledUpTriangle][OptionValue[ChartName]]];
AllComponentValues[fn[{i,OptionValue[ChartName]}],Flatten@fn\[FilledUpTriangle][OptionValue[ChartName]]];

fnc\[FilledDownTriangle][OptionValue[ChartName]]=\[CurlyPhi]c\[FilledSquare][OptionValue[ChartName]].fnc\[FilledUpTriangle][OptionValue[ChartName]]//Simplify//OptionValue[ApplyFunction];
fn\[FilledDownTriangle][OptionValue[ChartName]]=\[CurlyPhi]\[FilledSquare][OptionValue[ChartName]].fn\[FilledUpTriangle][OptionValue[ChartName]]//Simplify//OptionValue[ApplyFunction];
AllComponentValues[fnc[-{i,OptionValue[ChartName]}],Flatten@fnc\[FilledDownTriangle][OptionValue[ChartName]]];
AllComponentValues[fn[-{i,OptionValue[ChartName]}],Flatten@fn\[FilledDownTriangle][OptionValue[ChartName]]];

fQc\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=
\!\(\*OverscriptBox[\(mc\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]].\[CapitalLambda]Sq\[FilledRectangle][OptionValue[ChartName]].mc\[FilledRectangle][OptionValue[ChartName]]//Simplify//OptionValue[ApplyFunction];
fQ\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=
\!\(\*OverscriptBox[\(m\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]].\[CapitalLambda]Sq\[FilledRectangle][OptionValue[ChartName]].m\[FilledRectangle][OptionValue[ChartName]]//Simplify//OptionValue[ApplyFunction];
If[fQ\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]==fQc\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]//Simplify,
Null,
Print["\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"\[ScriptCapitalQ]\",\nFontColor->RGBColor[1, 0, 0]], \"^\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"is\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"not\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"equal\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"to\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[\"\[ScriptCapitalQ]\", \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"\[ScriptCapitalQ]\",\nFontColor->RGBColor[1, 0, 0]], \"^\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"is\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"not\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"equal\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"to\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[\"\[ScriptCapitalQ]\", \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];
If[fQ\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]].fn\[FilledUpTriangle][OptionValue[ChartName]]==
\!\(\*UnderscriptBox[\(\[Lambda]\[FilledSmallCircle]\), \(_\)]\)^2 fn\[FilledUpTriangle][OptionValue[ChartName]]//Simplify,
Null,
Print["\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"n\",\nFontColor->RGBColor[1, 0, 0]], \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"should\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"be\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"an\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"eigenvector\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"\[ScriptCapitalQ]\",\nFontColor->RGBColor[1, 0, 0]], \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"with\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"eigenvalue\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[SuperscriptBox[\"\[Lambda]\", \"2\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"n\",\nFontColor->RGBColor[1, 0, 0]], \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"should\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"be\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"an\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"eigenvector\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"\[ScriptCapitalQ]\",\nFontColor->RGBColor[1, 0, 0]], \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"with\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"eigenvalue\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[SuperscriptBox[\"\[Lambda]\", \"2\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];
AllComponentValues[fQc[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],fQc\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]];
AllComponentValues[fQ[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],fQ\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]];

fBc\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=
\!\(\*OverscriptBox[\(mc\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]].\[CapitalLambda]\[FilledRectangle][OptionValue[ChartName]].ec\[FilledRectangle]//Simplify//OptionValue[ApplyFunction];
temp$fB=
\!\(\*OverscriptBox[\(m\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]].\[CapitalLambda]\[FilledRectangle][OptionValue[ChartName]].e\[FilledRectangle][OptionValue[ChartName]]//Simplify;
fB\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=temp$fB//OptionValue[ApplyFunction];
If[fB\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]==E^(2(
\!\(\*UnderscriptBox[\(gconf\[FilledSmallCircle]\), \(_\)]\)-
\!\(\*UnderscriptBox[\(fconf\[FilledSmallCircle]\), \(_\)]\))) fBc\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]//Simplify,
Null,
Print["\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"\[ScriptCapitalB]\",\nFontColor->RGBColor[1, 0, 0]], \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"\[NotEqual]\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[SuperscriptBox[\"\[ExponentialE]\", 
RowBox[{\"2\", 
RowBox[{\"(\", 
RowBox[{\"\[Phi]\", \"-\", \"\[Psi]\"}], \")\"}]}]],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[\"\[ScriptCapitalB]\", \"^\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"\[ScriptCapitalB]\",\nFontColor->RGBColor[1, 0, 0]], \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"\[NotEqual]\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[SuperscriptBox[\"\[ExponentialE]\", 
RowBox[{\"2\", 
RowBox[{\"(\", 
RowBox[{\"\[Phi]\", \"-\", \"\[Psi]\"}], \")\"}]}]],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[\"\[ScriptCapitalB]\", \"^\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];
If[\[Chi]\[FilledSquare][OptionValue[ChartName]]==\[CurlyPhi]\[FilledSquare][OptionValue[ChartName]].fB\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]//Simplify,
Null,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"\[ScriptCapitalB]\",\nFontColor->RGBColor[1, 0, 0]], \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"\[ScriptCapitalB]\",\nFontColor->RGBColor[1, 0, 0]], \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];
AllComponentValues[fBc[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],fBc\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]];
AllComponentValues[fB[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],fB\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]];
AllComponentValues[fBc[-{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],\[CurlyPhi]c\[FilledSquare][OptionValue[ChartName]].fBc\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]].
\!\(\*OverscriptBox[\(\[CurlyPhi]c\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]]];
AllComponentValues[fB[-{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],\[CurlyPhi]\[FilledSquare][OptionValue[ChartName]].fB\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]].
\!\(\*OverscriptBox[\(\[CurlyPhi]\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]]];

fDc\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=
\!\(\*OverscriptBox[\(ec\[FilledRectangle]\), \(-1\)]\).
\!\(\*OverscriptBox[\(\[CapitalLambda]\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]].mc\[FilledRectangle][OptionValue[ChartName]]//Simplify//OptionValue[ApplyFunction];
temp$fD=
\!\(\*OverscriptBox[\(e\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]].
\!\(\*OverscriptBox[\(\[CapitalLambda]\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]].m\[FilledRectangle][OptionValue[ChartName]]//Simplify;
fD\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=temp$fD//OptionValue[ApplyFunction];
If[fD\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]==E^(-2(
\!\(\*UnderscriptBox[\(gconf\[FilledSmallCircle]\), \(_\)]\)-
\!\(\*UnderscriptBox[\(fconf\[FilledSmallCircle]\), \(_\)]\))) fDc\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]//Simplify,
Null,
Print["\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"\[ScriptCapitalD]\",\nFontColor->RGBColor[1, 0, 0]], \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"\[NotEqual]\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[SuperscriptBox[\"\[ExponentialE]\", 
RowBox[{\"2\", 
RowBox[{\"(\", 
RowBox[{\"\[Psi]\", \"-\", \"\[Phi]\"}], \")\"}]}]],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[\"\[ScriptCapitalD]\", \"^\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"\[ScriptCapitalD]\",\nFontColor->RGBColor[1, 0, 0]], \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"\[NotEqual]\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[SuperscriptBox[\"\[ExponentialE]\", 
RowBox[{\"2\", 
RowBox[{\"(\", 
RowBox[{\"\[Psi]\", \"-\", \"\[Phi]\"}], \")\"}]}]],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[\"\[ScriptCapitalD]\", \"^\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];
If[\[Chi]\[FilledSquare][OptionValue[ChartName]]==\[CurlyPhi]\[FilledSquare][OptionValue[ChartName]].Inverse[fD\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]]//Simplify,
Null,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"\[ScriptCapitalD]\",\nFontColor->RGBColor[1, 0, 0]], \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"\[ScriptCapitalD]\",\nFontColor->RGBColor[1, 0, 0]], \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];
AllComponentValues[fDc[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],fDc\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]];
AllComponentValues[fD[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],fD\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]];

fUc\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=$Vsign fDc\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]].\!\(
\*UnderoverscriptBox[\(\[Sum]\), \(n = 0\), \(4\)]\(\[Beta][n] 
\*SuperscriptBox[\(E\), \(2  n \((
\*UnderscriptBox[\(fconf\[FilledSmallCircle]\), \(_\)] - 
\*UnderscriptBox[\(gconf\[FilledSmallCircle]\), \(_\)])\)\)] 
\(\*SubscriptBox[\(Y\), \(n - 1\)]\)[fDc\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]]\)\)//Simplify//OptionValue[ApplyFunction];
fU\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=$Vsign fD\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]].\!\(
\*UnderoverscriptBox[\(\[Sum]\), \(n = 0\), \(4\)]\(\[Beta][n] 
\(\*SubscriptBox[\(Y\), \(n - 1\)]\)[fD\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]]\)\)//Simplify//OptionValue[ApplyFunction];
If[(fUc\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]==fU\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]])//Simplify,
Null,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"BSSN\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"formulation\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"\[ScriptCapitalU]\",\nFontColor->RGBColor[1, 0, 0]], \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"BSSN\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"formulation\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"\[ScriptCapitalU]\",\nFontColor->RGBColor[1, 0, 0]], \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];
If[Transpose[\[CurlyPhi]\[FilledSquare][OptionValue[ChartName]].fU\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]]==\[CurlyPhi]\[FilledSquare][OptionValue[ChartName]].fU\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]],
Null,
Print["\!\(\*
StyleBox[\"The\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computed\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"\[Gamma]\[ScriptCapitalU]\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"is\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"not\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"symmetric\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[\"The\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computed\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"\[Gamma]\[ScriptCapitalU]\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"is\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"not\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"symmetric\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];
AllComponentValues[fU[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],fU\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]];

Print["\[Dash] Computed the bimetric interactions in the f-sector."];

(* Bimetric sources for g *)

gVc\[FilledSmallCircle][OptionValue[ChartName]]=$Vsign \!\(
\*UnderoverscriptBox[\(\[Sum]\), \(n = 0\), \(4\)]\(\[Beta][n] 
\*SuperscriptBox[\(E\), \(2  n \((
\*UnderscriptBox[\(fconf\[FilledSmallCircle]\), \(_\)] - 
\*UnderscriptBox[\(gconf\[FilledSmallCircle]\), \(_\)])\)\)] 
\(\*SubscriptBox[\(\[ScriptCapitalE]\), \(n\)]\)[fDc\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]]\)\)//Simplify//OptionValue[ApplyFunction];
gV\[FilledSmallCircle][OptionValue[ChartName]]=$Vsign \!\(
\*UnderoverscriptBox[\(\[Sum]\), \(n = 0\), \(4\)]\(\[Beta][n] 
\(\*SubscriptBox[\(\[ScriptCapitalE]\), \(n\)]\)[fD\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]]\)\)//Simplify//OptionValue[ApplyFunction];
If[gVc\[FilledSmallCircle][OptionValue[ChartName]]==gV\[FilledSmallCircle][OptionValue[ChartName]]//Simplify,
Null,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"BSSN\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"formulation\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"\[ScriptCapitalV]\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"BSSN\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"formulation\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"\[ScriptCapitalV]\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];

grhobc\[FilledSmallCircle][OptionValue[ChartName]]=-$Vsign\!\(
\*UnderoverscriptBox[\(\[Sum]\), \(n = 0\), \(4\)]\(\[Beta][n] 
\*SuperscriptBox[\(E\), \(2  n \((
\*UnderscriptBox[\(fconf\[FilledSmallCircle]\), \(_\)] - 
\*UnderscriptBox[\(gconf\[FilledSmallCircle]\), \(_\)])\)\)] 
\(\*SubscriptBox[\(\[ScriptCapitalE]\), \(n\)]\)[gBc\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]]\)\)//Simplify//OptionValue[ApplyFunction];
grhob\[FilledSmallCircle][OptionValue[ChartName]]=-$Vsign\!\(
\*UnderoverscriptBox[\(\[Sum]\), \(n = 0\), \(4\)]\(\[Beta][n] 
\(\*SubscriptBox[\(\[ScriptCapitalE]\), \(n\)]\)[gB\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]]\)\)//Simplify//OptionValue[ApplyFunction];
If[grhobc\[FilledSmallCircle][OptionValue[ChartName]]==grhob\[FilledSmallCircle][OptionValue[ChartName]]//Simplify,
Null,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"BSSN\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"formulation\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[SubscriptBox[
StyleBox[\"\[Rho]\",\nFontColor->RGBColor[1, 0, 0]], \"b\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"BSSN\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"formulation\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[SubscriptBox[
StyleBox[\"\[Rho]\",\nFontColor->RGBColor[1, 0, 0]], \"b\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];

gjbc\[FilledDownTriangle][OptionValue[ChartName]]=-\[Gamma]c\[FilledSquare][OptionValue[ChartName]].gBc\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]].(\!\(
\*UnderoverscriptBox[\(\[Sum]\), \(n = 0\), \(4\)]\($Vsign\ \[Beta][n] 
\*SuperscriptBox[\(E\), \(2  n 
\*UnderscriptBox[\(fconf\[FilledSmallCircle]\), \(_\)] - 2 \((n - 1)\) 
\*UnderscriptBox[\(gconf\[FilledSmallCircle]\), \(_\)]\)] 
\(\*SubscriptBox[\(Y\), \(n - 1\)]\)[fDc\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]]\)\)).gnc\[FilledUpTriangle][OptionValue[ChartName]]//Simplify//OptionValue[ApplyFunction];
gjb\[FilledDownTriangle][OptionValue[ChartName]]=-\[Gamma]\[FilledSquare][OptionValue[ChartName]].gQ\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]].fU\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]].gn\[FilledUpTriangle][OptionValue[ChartName]]//Simplify//OptionValue[ApplyFunction];
If[gjbc\[FilledDownTriangle][OptionValue[ChartName]]==gjb\[FilledDownTriangle][OptionValue[ChartName]]//Simplify,
Null,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"BSSN\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"formulation\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[SubscriptBox[\"j\", \"b\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"BSSN\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"formulation\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[SubscriptBox[\"j\", \"b\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];
gjb\[FilledUpTriangle][OptionValue[ChartName]]=
\!\(\*OverscriptBox[\(\[Gamma]\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]].gjb\[FilledDownTriangle][OptionValue[ChartName]]//Simplify;
AllComponentValues[gjb[-{i,OptionValue[ChartName]}],gjb\[FilledDownTriangle][OptionValue[ChartName]]];
AllComponentValues[gjb[{i,OptionValue[ChartName]}],gjb\[FilledUpTriangle][OptionValue[ChartName]]];

gJbc\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=gVc\[FilledSmallCircle][OptionValue[ChartName]]\[Delta]\[FilledRectangle]-gQc\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]].fUc\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]+
\!\(\*UnderscriptBox[\(gLap\[FilledSmallCircle]\), \(_\)]\)^-1 
\!\(\*UnderscriptBox[\(fLap\[FilledSmallCircle]\), \(_\)]\)gUc\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]//Simplify//OptionValue[ApplyFunction];
gJb\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=gV\[FilledSmallCircle][OptionValue[ChartName]]\[Delta]\[FilledRectangle]-gQ\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]].fU\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]+
\!\(\*UnderscriptBox[\(gLap\[FilledSmallCircle]\), \(_\)]\)^-1 
\!\(\*UnderscriptBox[\(fLap\[FilledSmallCircle]\), \(_\)]\)gU\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]//Simplify//OptionValue[ApplyFunction];
If[gJbc\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]==gJb\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]//Simplify,
Null,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"BSSN\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"formulation\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[SubscriptBox[\"J\", \"b\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"BSSN\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"formulation\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[SubscriptBox[\"J\", \"b\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];
AllComponentValues[gJb[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],gJb\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]];
gJb\[FilledUpTriangle]\[FilledUpTriangle][OptionValue[ChartName]]=gJb\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]].
\!\(\*OverscriptBox[\(\[Gamma]\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]];
gJb\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=Transpose[\[Gamma]\[FilledSquare][OptionValue[ChartName]]].gJb\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]];
gJb\[FilledDownTriangle]\[FilledUpTriangle][OptionValue[ChartName]]=Transpose[\[Gamma]\[FilledSquare][OptionValue[ChartName]]].gJb\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]].
\!\(\*OverscriptBox[\(\[Gamma]\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]];
AllComponentValues[gJb[{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],gJb\[FilledUpTriangle]\[FilledUpTriangle][OptionValue[ChartName]]];AllComponentValues[gJb[-{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],gJb\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]]];
AllComponentValues[gJb[-{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],gJb\[FilledDownTriangle]\[FilledUpTriangle][OptionValue[ChartName]]];

Print["\[Dash] Computed the bimetric sources in the g-sector."];

(* Bimetric sources for f *)

fVc\[FilledSmallCircle][OptionValue[ChartName]]=$Vsign 
\!\(\*UnderscriptBox[\(\[Lambda]\[FilledSmallCircle]\), \(_\)]\)^-1 \!\(
\*UnderoverscriptBox[\(\[Sum]\), \(n = 0\), \(4\)]\(\[Beta][n] 
\*SuperscriptBox[\(E\), \(2 \((n - 1)\) \((
\*UnderscriptBox[\(fconf\[FilledSmallCircle]\), \(_\)] - 
\*UnderscriptBox[\(gconf\[FilledSmallCircle]\), \(_\)])\)\)] 
\(\*SubscriptBox[\(\[ScriptCapitalE]\), \(n - 1\)]\)[gBc\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]]\)\)//Simplify//OptionValue[ApplyFunction];
fV\[FilledSmallCircle][OptionValue[ChartName]]=$Vsign 
\!\(\*UnderscriptBox[\(\[Lambda]\[FilledSmallCircle]\), \(_\)]\)^-1 \!\(
\*UnderoverscriptBox[\(\[Sum]\), \(n = 0\), \(4\)]\(\[Beta][n] 
\(\*SubscriptBox[\(\[ScriptCapitalE]\), \(n - 1\)]\)[gB\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]]\)\)//Simplify//OptionValue[ApplyFunction];
If[fVc\[FilledSmallCircle][OptionValue[ChartName]]==fV\[FilledSmallCircle][OptionValue[ChartName]]//Simplify,
Null,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"BSSN\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"formulation\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"\[ScriptCapitalV]\",\nFontColor->RGBColor[1, 0, 0]], \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"BSSN\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"formulation\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[OverscriptBox[
StyleBox[\"\[ScriptCapitalV]\",\nFontColor->RGBColor[1, 0, 0]], \"~\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];

frhobc\[FilledSmallCircle][OptionValue[ChartName]]=-$Vsign 
\!\(\*UnderscriptBox[\(\[Lambda]\[FilledSmallCircle]\), \(_\)]\)\!\(
\*UnderoverscriptBox[\(\[Sum]\), \(n = 0\), \(4\)]\(\[Beta][n] 
\*SuperscriptBox[\(E\), \(2 \((n - 4)\) \((
\*UnderscriptBox[\(fconf\[FilledSmallCircle]\), \(_\)] - 
\*UnderscriptBox[\(gconf\[FilledSmallCircle]\), \(_\)])\)\)] 
\(\*SubscriptBox[\(\[ScriptCapitalE]\), \(n - 1\)]\)[fDc\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]] Det[ec\[FilledRectangle] . 
\(\*OverscriptBox[\(mc\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]]]\)\)//Simplify//OptionValue[ApplyFunction];
frhob\[FilledSmallCircle][OptionValue[ChartName]]=-$Vsign 
\!\(\*UnderscriptBox[\(\[Lambda]\[FilledSmallCircle]\), \(_\)]\)\!\(
\*UnderoverscriptBox[\(\[Sum]\), \(n = 0\), \(4\)]\(\[Beta][n] 
\(\*SubscriptBox[\(\[ScriptCapitalE]\), \(n - 1\)]\)[fD\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]] Det[e\[FilledRectangle][OptionValue[ChartName]] . 
\(\*OverscriptBox[\(m\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]]]\)\)//Simplify//OptionValue[ApplyFunction];
If[frhobc\[FilledSmallCircle][OptionValue[ChartName]]==frhob\[FilledSmallCircle][OptionValue[ChartName]]//Simplify,
Null,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"BSSN\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"formulation\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[SubscriptBox[OverscriptBox[
StyleBox[\"\[Rho]\",\nFontColor->RGBColor[1, 0, 0]], \"~\"], \"b\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"BSSN\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"formulation\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[SubscriptBox[OverscriptBox[
StyleBox[\"\[Rho]\",\nFontColor->RGBColor[1, 0, 0]], \"~\"], \"b\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];

fjbc\[FilledDownTriangle][OptionValue[ChartName]]=-gjbc\[FilledDownTriangle][OptionValue[ChartName]] E^(6(
\!\(\*UnderscriptBox[\(gconf\[FilledSmallCircle]\), \(_\)]\)-
\!\(\*UnderscriptBox[\(fconf\[FilledSmallCircle]\), \(_\)]\))) Det[ec\[FilledRectangle].
\!\(\*OverscriptBox[\(mc\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]]]//Simplify//OptionValue[ApplyFunction];
fjb\[FilledDownTriangle][OptionValue[ChartName]]=-gjb\[FilledDownTriangle][OptionValue[ChartName]] Det[e\[FilledRectangle][OptionValue[ChartName]].
\!\(\*OverscriptBox[\(m\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]]]//Simplify//OptionValue[ApplyFunction];
fjb\[FilledUpTriangle][OptionValue[ChartName]]=
\!\(\*OverscriptBox[\(\[CurlyPhi]\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]].fjb\[FilledDownTriangle][OptionValue[ChartName]]//Simplify;
If[fjbc\[FilledDownTriangle][OptionValue[ChartName]]==fjb\[FilledDownTriangle][OptionValue[ChartName]]//Simplify,
Null,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"BSSN\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"formulation\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[SubscriptBox[OverscriptBox[\"j\", \"~\"], \"b\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"BSSN\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"formulation\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[SubscriptBox[OverscriptBox[\"j\", \"~\"], \"b\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];
AllComponentValues[fjb[-{i,OptionValue[ChartName]}],fjb\[FilledDownTriangle][OptionValue[ChartName]]];
AllComponentValues[fjb[{i,OptionValue[ChartName]}],fjb\[FilledUpTriangle][OptionValue[ChartName]]];

fJbc\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=(fVc\[FilledSmallCircle][OptionValue[ChartName]] \[Delta]\[FilledRectangle]-fQc\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]].gUc\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]+
\!\(\*UnderscriptBox[\(fLap\[FilledSmallCircle]\), \(_\)]\)^-1 
\!\(\*UnderscriptBox[\(gLap\[FilledSmallCircle]\), \(_\)]\)fUc\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]) E^(6(
\!\(\*UnderscriptBox[\(gconf\[FilledSmallCircle]\), \(_\)]\)-
\!\(\*UnderscriptBox[\(fconf\[FilledSmallCircle]\), \(_\)]\))) Det[ec\[FilledRectangle].
\!\(\*OverscriptBox[\(mc\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]]]//Simplify//OptionValue[ApplyFunction];
fJb\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=(fV\[FilledSmallCircle][OptionValue[ChartName]] \[Delta]\[FilledRectangle]-fQ\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]].gU\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]+
\!\(\*UnderscriptBox[\(fLap\[FilledSmallCircle]\), \(_\)]\)^-1 
\!\(\*UnderscriptBox[\(gLap\[FilledSmallCircle]\), \(_\)]\)fU\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]) Det[e\[FilledRectangle][OptionValue[ChartName]].
\!\(\*OverscriptBox[\(m\[FilledRectangle]\), \(-1\)]\)[OptionValue[ChartName]]]//Simplify//OptionValue[ApplyFunction];
If[fJbc\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]==fJb\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]//Simplify,
Null,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"BSSN\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"formulation\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[SubscriptBox[OverscriptBox[\"J\", \"~\"], \"b\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];,
Print["\!\(\*
StyleBox[\"Error\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"in\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"computing\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"the\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"BSSN\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"formulation\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"of\",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[SubscriptBox[OverscriptBox[\"J\", \"~\"], \"b\"],\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\".\",\nFontColor->RGBColor[1, 0, 0]]\)"];Abort[];
];
AllComponentValues[fJb[{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],fJb\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]];
fJb\[FilledUpTriangle]\[FilledUpTriangle][OptionValue[ChartName]]=fJb\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]].
\!\(\*OverscriptBox[\(\[CurlyPhi]\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]];
fJb\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]]=Transpose[\[CurlyPhi]\[FilledSquare][OptionValue[ChartName]]].fJb\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]];
fJb\[FilledDownTriangle]\[FilledUpTriangle][OptionValue[ChartName]]=Transpose[\[CurlyPhi]\[FilledSquare][OptionValue[ChartName]]].fJb\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]].
\!\(\*OverscriptBox[\(\[CurlyPhi]\[FilledSquare]\), \(-1\)]\)[OptionValue[ChartName]];
AllComponentValues[fJb[{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],fJb\[FilledUpTriangle]\[FilledUpTriangle][OptionValue[ChartName]]];AllComponentValues[fJb[-{i,OptionValue[ChartName]},-{j,OptionValue[ChartName]}],fJb\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]]];
AllComponentValues[fJb[-{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}],fJb\[FilledDownTriangle]\[FilledUpTriangle][OptionValue[ChartName]]];

Print["\[Dash] Computed the bimetric sources in the f-sector."];
(*];*)
ComputationFlag[OptionValue[ChartName]]:=True;
Print["Decomposition computed successfully."];
]


(* ::Input::Initialization:: *)
Clear[AssignComponents];
AssignComponents[tensors_?ListQ,components_?ListQ,OptionsPattern[{ChartName:>DefaultChart,ApplyFunction->Identity}]]:=Module[{tensorsInBasis,scalars,positionsOfScalars,positionsOfTensors,l,i},

(* Distinguishing scalars form tensors *)
l=Length@tensors;
scalars={};
positionsOfScalars=Flatten@Position[IndicesOf[Free][#]&/@tensors,IndexList[]];
positionsOfTensors=Complement[Range[1,l],positionsOfScalars];

(* Handling scalars *)
For[i=1,i<=Length@positionsOfScalars,i++,
InChart[tensors[[positionsOfScalars[[i]]]],OptionValue[ChartName]][args___]:=Evaluate[
Evaluate[((components[[positionsOfScalars[[i]]]]/.{
(({g\[Digamma],g\[Digamma],h\[Digamma],t}~Join~ScalarsOfChart[\[ScriptCapitalS]])[[#]]->(ToExpression@StringJoin["#",ToString[#]]))&/@Range[1,Length[({g\[Digamma],g\[Digamma],h\[Digamma],t}~Join~ScalarsOfChart[\[ScriptCapitalS]])]]
})[[1]])]&@@({g\[Digamma],g\[Digamma],h\[Digamma],t}~Join~ScalarsOfChart[\[ScriptCapitalS]])];
];

(* Handling tensors *)
tensorsInBasis=(tensors[[#]]/.{f_[i_]:>f[{i,OptionValue[ChartName]}],f_[i_,j_]:>f[{i,OptionValue[ChartName]},{j,OptionValue[ChartName]}]})&/@Flatten[positionsOfTensors];
MapThread[AllComponentValues,{tensorsInBasis,components[[#]]&/@positionsOfTensors}];

](* works up to rank-2 tensors *)


(* ::Input::Initialization:: *)
Clear[ExportDecomposition];
ExportDecomposition[ec\[FilledRectangle]_?MatrixQ,mTrc\[FilledRectangle]_?MatrixQ,p\[FilledRectangle]_?MatrixQ,q\[FilledRectangle]_?MatrixQ,gA\[FilledUpTriangle]\[FilledDownTriangle]_?MatrixQ,fA\[FilledUpTriangle]\[FilledDownTriangle]_?MatrixQ,g\[CapitalLambda]\[FilledRectangle]_?MatrixQ,f\[CapitalLambda]\[FilledRectangle]_?MatrixQ,gback\[FilledSquare]_?MatrixQ,fback\[FilledSquare]_?MatrixQ,hback\[FilledSquare]_?MatrixQ,OptionsPattern[{ChartName:>DefaultChart,ApplyFunction->Identity,OtherQuantities->{{},{}},NameFile->StringReplace["Bimetric_decomposition_"<>DateString["ISODateTime"]<>".m",":"->"-"]}]]:=Block[{UpValues,$$names,$$values,e\[FilledRectangle]$,ec\[FilledRectangle]$,\[Gamma]c\[FilledSquare]$,\[Gamma]\[FilledSquare]$,gA\[FilledDownTriangle]\[FilledUpTriangle]$,gK$BSSN\[FilledUpTriangle]\[FilledDownTriangle]$,g\[CapitalLambda]\[FilledRectangle]$,gShi\[FilledUpTriangle]$,gn\[FilledUpTriangle]$,gB\[FilledUpTriangle]\[FilledDownTriangle]$,gD\[FilledUpTriangle]\[FilledDownTriangle]$,gQ\[FilledUpTriangle]\[FilledDownTriangle]$,gU\[FilledUpTriangle]\[FilledDownTriangle]$,gV\[FilledSmallCircle]$,grhob\[FilledSmallCircle]$,gjb\[FilledDownTriangle]$,gJb\[FilledUpTriangle]\[FilledDownTriangle]$,mTr\[FilledRectangle]$,mTrc\[FilledRectangle]$,m\[FilledRectangle]$,mc\[FilledRectangle]$,\[CurlyPhi]c\[FilledSquare]$,\[CurlyPhi]\[FilledSquare]$,fA\[FilledDownTriangle]\[FilledUpTriangle]$,fK$BSSN\[FilledUpTriangle]\[FilledDownTriangle]$,f\[CapitalLambda]\[FilledRectangle]$,fShi\[FilledUpTriangle]$,fn\[FilledUpTriangle]$,fB\[FilledUpTriangle]\[FilledDownTriangle]$,fD\[FilledUpTriangle]\[FilledDownTriangle]$,fQ\[FilledUpTriangle]\[FilledDownTriangle]$,fU\[FilledUpTriangle]\[FilledDownTriangle]$,fV\[FilledSmallCircle]$,frhob\[FilledSmallCircle]$,fjb\[FilledDownTriangle]$,fJb\[FilledUpTriangle]\[FilledDownTriangle]$,\[Chi]c\[FilledSquare]$,\[Chi]\[FilledSquare]$,gback\[FilledSquare]$,fback\[FilledSquare]$,hback\[FilledSquare]$,R\[FilledRectangle]$,\[CapitalLambda]\[FilledRectangle]$,\[CapitalLambda]Sq\[FilledRectangle]$,v\[FilledUpTriangle]$,p\[FilledRectangle]$,q\[FilledRectangle]$,RicciScalar\[Gamma]CD$,Kretschmann\[Gamma]CD$,Ricci\[Gamma]CD\[FilledDownTriangle]\[FilledDownTriangle]$,Riemann\[Gamma]CD\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]$,Christoffel\[Gamma]CD$,RicciScalar\[CurlyPhi]CD$,Kretschmann\[CurlyPhi]CD$,Ricci\[CurlyPhi]CD\[FilledDownTriangle]\[FilledDownTriangle]$,Riemann\[CurlyPhi]CD\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]$,Christoffel\[CurlyPhi]CD$,Weyl\[Gamma]CD\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]$,Weyl\[CurlyPhi]CD\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]$,RicciScalar\[Chi]CD$,Kretschmann\[Chi]CD$,Ricci\[Chi]CD\[FilledDownTriangle]\[FilledDownTriangle]$,Riemann\[Chi]CD\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]$,Weyl\[Chi]CD\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]$,Christoffel\[Chi]CD$},
If[ChartQ[OptionValue[ChartName]],
Null,
Print[ToString[OptionValue[ChartName]]<>" is not a defined chart."];Abort[];
];
If[ComputationFlag[OptionValue[ChartName]],
Null,
Print["The decomposition has not been computed in the chart "<>ToString[OptionValue[ChartName]]<>"."];Abort[];
];
UpValues[f_]={};
Quiet@DeleteFile[OptionValue[NameFile]];
Clear/@(OptionValue[OtherQuantities])[[1]]//Quiet;
$$names=(OptionValue[OtherQuantities])[[1]];
$$values=(OptionValue[OtherQuantities])[[2]]//OptionValue[ApplyFunction];
Clear/@Flatten[{e\[FilledRectangle]$,ec\[FilledRectangle]$,\[Gamma]c\[FilledSquare]$,\[Gamma]\[FilledSquare]$,gA\[FilledDownTriangle]\[FilledUpTriangle]$,gK$BSSN\[FilledUpTriangle]\[FilledDownTriangle]$,g\[CapitalLambda]\[FilledRectangle]$,gShi\[FilledUpTriangle]$,gn\[FilledUpTriangle]$,gB\[FilledUpTriangle]\[FilledDownTriangle]$,gD\[FilledUpTriangle]\[FilledDownTriangle]$,gQ\[FilledUpTriangle]\[FilledDownTriangle]$,gU\[FilledUpTriangle]\[FilledDownTriangle]$,gV\[FilledSmallCircle]$,grhob\[FilledSmallCircle]$,gjb\[FilledDownTriangle]$,gJb\[FilledUpTriangle]\[FilledDownTriangle]$,mTr\[FilledRectangle]$,mTrc\[FilledRectangle]$,m\[FilledRectangle]$,mc\[FilledRectangle]$,\[CurlyPhi]c\[FilledSquare]$,\[CurlyPhi]\[FilledSquare]$,fA\[FilledDownTriangle]\[FilledUpTriangle]$,fK$BSSN\[FilledUpTriangle]\[FilledDownTriangle]$,f\[CapitalLambda]\[FilledRectangle]$,fShi\[FilledUpTriangle]$,fn\[FilledUpTriangle]$,fB\[FilledUpTriangle]\[FilledDownTriangle]$,fD\[FilledUpTriangle]\[FilledDownTriangle]$,fQ\[FilledUpTriangle]\[FilledDownTriangle]$,fU\[FilledUpTriangle]\[FilledDownTriangle]$,fV\[FilledSmallCircle]$,frhob\[FilledSmallCircle]$,fjb\[FilledDownTriangle]$,fJb\[FilledUpTriangle]\[FilledDownTriangle]$,\[Chi]c\[FilledSquare]$,\[Chi]\[FilledSquare]$,gback\[FilledSquare]$,fback\[FilledSquare]$,hback\[FilledSquare]$,R\[FilledRectangle]$,\[CapitalLambda]\[FilledRectangle]$,\[CapitalLambda]Sq\[FilledRectangle]$,v\[FilledUpTriangle]$,p\[FilledRectangle]$,q\[FilledRectangle]$}(*~Join~(OptionValue[OtherQuantities])\[LeftDoubleBracket]1\[RightDoubleBracket]*)];
MapThread[Set,{
{e\[FilledRectangle]$,ec\[FilledRectangle]$,\[Gamma]c\[FilledSquare]$,\[Gamma]\[FilledSquare]$,gA\[FilledDownTriangle]\[FilledUpTriangle]$,gK$BSSN\[FilledUpTriangle]\[FilledDownTriangle]$,g\[CapitalLambda]\[FilledRectangle]$,gShi\[FilledUpTriangle]$,gn\[FilledUpTriangle]$,gB\[FilledUpTriangle]\[FilledDownTriangle]$,gD\[FilledUpTriangle]\[FilledDownTriangle]$,gQ\[FilledUpTriangle]\[FilledDownTriangle]$,gU\[FilledUpTriangle]\[FilledDownTriangle]$,gV\[FilledSmallCircle]$,grhob\[FilledSmallCircle]$,gjb\[FilledDownTriangle]$,gJb\[FilledUpTriangle]\[FilledDownTriangle]$,mTr\[FilledRectangle]$,mTrc\[FilledRectangle]$,m\[FilledRectangle]$,mc\[FilledRectangle]$,\[CurlyPhi]c\[FilledSquare]$,\[CurlyPhi]\[FilledSquare]$,fA\[FilledDownTriangle]\[FilledUpTriangle]$,fK$BSSN\[FilledUpTriangle]\[FilledDownTriangle]$,f\[CapitalLambda]\[FilledRectangle]$,fShi\[FilledUpTriangle]$,fn\[FilledUpTriangle]$,fB\[FilledUpTriangle]\[FilledDownTriangle]$,fD\[FilledUpTriangle]\[FilledDownTriangle]$,fQ\[FilledUpTriangle]\[FilledDownTriangle]$,fU\[FilledUpTriangle]\[FilledDownTriangle]$,fV\[FilledSmallCircle]$,frhob\[FilledSmallCircle]$,fjb\[FilledDownTriangle]$,fJb\[FilledUpTriangle]\[FilledDownTriangle]$,\[Chi]c\[FilledSquare]$,\[Chi]\[FilledSquare]$,gback\[FilledSquare]$,fback\[FilledSquare]$,hback\[FilledSquare]$,R\[FilledRectangle]$,\[CapitalLambda]\[FilledRectangle]$,\[CapitalLambda]Sq\[FilledRectangle]$,v\[FilledUpTriangle]$,p\[FilledRectangle]$,q\[FilledRectangle]$},{e\[FilledRectangle][OptionValue[ChartName]],ec\[FilledRectangle],\[Gamma]c\[FilledSquare][OptionValue[ChartName]],\[Gamma]\[FilledSquare][OptionValue[ChartName]],gA\[FilledUpTriangle]\[FilledDownTriangle],gK\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]],g\[CapitalLambda]\[FilledRectangle],
gShi\[FilledUpTriangle][OptionValue[ChartName]],gn\[FilledUpTriangle][OptionValue[ChartName]],gB\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]],gD\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]],gQ\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]],gU\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]],gV\[FilledSmallCircle][OptionValue[ChartName]],grhob\[FilledSmallCircle][OptionValue[ChartName]],gjb\[FilledDownTriangle][OptionValue[ChartName]],gJb\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]],
mTr\[FilledRectangle][OptionValue[ChartName]],mTrc\[FilledRectangle],m\[FilledRectangle][OptionValue[ChartName]],mc\[FilledRectangle][OptionValue[ChartName]],\[CurlyPhi]c\[FilledSquare][OptionValue[ChartName]],\[CurlyPhi]\[FilledSquare][OptionValue[ChartName]],fA\[FilledUpTriangle]\[FilledDownTriangle],fK\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]],f\[CapitalLambda]\[FilledRectangle],
fShi\[FilledUpTriangle][OptionValue[ChartName]],fn\[FilledUpTriangle][OptionValue[ChartName]],fB\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]],fD\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]],fQ\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]],fU\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]],fV\[FilledSmallCircle][OptionValue[ChartName]],frhob\[FilledSmallCircle][OptionValue[ChartName]],fjb\[FilledDownTriangle][OptionValue[ChartName]],fJb\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]],
\[Chi]c\[FilledSquare][OptionValue[ChartName]],\[Chi]\[FilledSquare][OptionValue[ChartName]],
gback\[FilledSquare],fback\[FilledSquare],hback\[FilledSquare],
R\[FilledRectangle][OptionValue[ChartName]],\[CapitalLambda]\[FilledRectangle][OptionValue[ChartName]],\[CapitalLambda]Sq\[FilledRectangle][OptionValue[ChartName]],v\[FilledUpTriangle][OptionValue[ChartName]],p\[FilledRectangle],q\[FilledRectangle]}//OptionValue[ApplyFunction]
}];
If[gGeometryFlag[OptionValue[ChartName]],
MapThread[Set,
{
{RicciScalar\[Gamma]CD$,Kretschmann\[Gamma]CD$,Ricci\[Gamma]CD\[FilledDownTriangle]\[FilledDownTriangle]$,Riemann\[Gamma]CD\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]$,Weyl\[Gamma]CD\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]$,Christoffel\[Gamma]CD$},

ToConcrete@#&/@{RicciScalargCD[],KretschmanngCD[],RiccigCD[-i,-j],RiemanngCD[-i,-j,-k,-q],WeylgCD[-i,-j,-k,-q],ToExpression["ChristoffelgCDPD"<>ToString[OptionValue[ChartName]]][i,-j,-k]}//OptionValue[ApplyFunction]
}
];,
MapThread[Set,
{
{RicciScalar\[Gamma]CD$,Kretschmann\[Gamma]CD$,Ricci\[Gamma]CD\[FilledDownTriangle]\[FilledDownTriangle]$,Riemann\[Gamma]CD\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]$,Weyl\[Gamma]CD\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]$,Christoffel\[Gamma]CD$},
Table[Nothing,6]
}
];
];
If[fGeometryFlag[OptionValue[ChartName]],
MapThread[Set,
{
{RicciScalar\[CurlyPhi]CD$,Kretschmann\[CurlyPhi]CD$,Ricci\[CurlyPhi]CD\[FilledDownTriangle]\[FilledDownTriangle]$,Riemann\[CurlyPhi]CD\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]$,Weyl\[CurlyPhi]CD\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]$,Christoffel\[CurlyPhi]CD$},

ToConcrete@#&/@{RicciScalarfCD[],KretschmannfCD[],RiccifCD[-i,-j],RiemannfCD[-i,-j,-k,-q],WeylfCD[-i,-j,-k,-q],ToExpression["ChristoffelfCDPD"<>ToString[OptionValue[ChartName]]][i,-j,-k]}//OptionValue[ApplyFunction]
}
];,
MapThread[Set,
{
{RicciScalar\[CurlyPhi]CD$,Kretschmann\[CurlyPhi]CD$,Ricci\[CurlyPhi]CD\[FilledDownTriangle]\[FilledDownTriangle]$,Riemann\[CurlyPhi]CD\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]$,Weyl\[CurlyPhi]CD\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]$,Christoffel\[CurlyPhi]CD$},
Table[Nothing,6]
}
];
];
If[hGeometryFlag[OptionValue[ChartName]],
MapThread[Set,
{
{RicciScalar\[Chi]CD$,Kretschmann\[Chi]CD$,Ricci\[Chi]CD\[FilledDownTriangle]\[FilledDownTriangle]$,Riemann\[Chi]CD\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]$,Weyl\[Chi]CD\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]$,Christoffel\[Chi]CD$},

ToConcrete@#&/@{RicciScalar\[Chi]CD[],Kretschmann\[Chi]CD[],Ricci\[Chi]CD[-i,-j],Riemann\[Chi]CD[-i,-j,-k,-q],Weyl\[Chi]CD[-i,-j,-k,-q],ToExpression["Christoffel\[Chi]CDPD"<>ToString[OptionValue[ChartName]]][i,-j,-k]}//OptionValue[ApplyFunction]
}
];,
MapThread[Set,
{
{RicciScalar\[Chi]CD$,Kretschmann\[Chi]CD$,Ricci\[Chi]CD\[FilledDownTriangle]\[FilledDownTriangle]$,Riemann\[Chi]CD\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]$,Weyl\[Chi]CD\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]$,Christoffel\[Chi]CD$},
Table[Nothing,6]
}
];
];
DumpSave[
OptionValue[NameFile],
{DefaultChart,FirstChart,

(* The g-sector *)
e\[FilledRectangle]$,ec\[FilledRectangle]$,\[Gamma]c\[FilledSquare]$,\[Gamma]\[FilledSquare]$,gA\[FilledDownTriangle]\[FilledUpTriangle]$,gK$BSSN\[FilledUpTriangle]\[FilledDownTriangle]$,g\[CapitalLambda]\[FilledRectangle]$,gShi\[FilledUpTriangle]$,gn\[FilledUpTriangle]$,gB\[FilledUpTriangle]\[FilledDownTriangle]$,gD\[FilledUpTriangle]\[FilledDownTriangle]$,gQ\[FilledUpTriangle]\[FilledDownTriangle]$,gU\[FilledUpTriangle]\[FilledDownTriangle]$,gV\[FilledSmallCircle]$,grhob\[FilledSmallCircle]$,gjb\[FilledDownTriangle]$,gJb\[FilledUpTriangle]\[FilledDownTriangle]$,
RicciScalar\[Gamma]CD$,Kretschmann\[Gamma]CD$,Ricci\[Gamma]CD\[FilledDownTriangle]\[FilledDownTriangle]$,Riemann\[Gamma]CD\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]$,Weyl\[Gamma]CD\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]$,Christoffel\[Gamma]CD$,

(* The f-sector *)
mTr\[FilledRectangle]$,m\[FilledRectangle]$,mc\[FilledRectangle]$,\[CurlyPhi]c\[FilledSquare]$,\[CurlyPhi]\[FilledSquare]$,fA\[FilledDownTriangle]\[FilledUpTriangle]$,fK$BSSN\[FilledUpTriangle]\[FilledDownTriangle]$,f\[CapitalLambda]\[FilledRectangle]$,fShi\[FilledUpTriangle]$,fn\[FilledUpTriangle]$,fB\[FilledUpTriangle]\[FilledDownTriangle]$,fD\[FilledUpTriangle]\[FilledDownTriangle]$,fQ\[FilledUpTriangle]\[FilledDownTriangle]$,fU\[FilledUpTriangle]\[FilledDownTriangle]$,fV\[FilledSmallCircle]$,frhob\[FilledSmallCircle]$,fjb\[FilledDownTriangle]$,fJb\[FilledUpTriangle]\[FilledDownTriangle]$,
RicciScalar\[CurlyPhi]CD$,Kretschmann\[CurlyPhi]CD$,Ricci\[CurlyPhi]CD\[FilledDownTriangle]\[FilledDownTriangle]$,Riemann\[CurlyPhi]CD\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]$,Weyl\[CurlyPhi]CD\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]$,Christoffel\[CurlyPhi]CD$,

(* The geometric mean *)
\[Chi]c\[FilledSquare]$,\[Chi]\[FilledSquare]$,RicciScalar\[Chi]CD$,Kretschmann\[Chi]CD$,Ricci\[Chi]CD\[FilledDownTriangle]\[FilledDownTriangle]$,Riemann\[Chi]CD\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]$,Weyl\[Chi]CD\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]\[FilledDownTriangle]$,Christoffel\[Chi]CD$,

(* The background sectors *)
gback\[FilledSquare]$,fback\[FilledSquare]$,

(* The Lorentz frame *)
R\[FilledRectangle]$,\[CapitalLambda]\[FilledRectangle]$,\[CapitalLambda]Sq\[FilledRectangle]$,v\[FilledUpTriangle]$,p\[FilledRectangle]$,q\[FilledRectangle]$,

$$names,$$values
}
];
SetDirectory@NotebookDirectory[];
Print["\[Dash] Decomposition exported successfully into "<>OptionValue[NameFile]<>", in the notebook folder."];
ResetDirectory[];
]


(* ::Input::Initialization:: *)
Clear[ExportDecomposition$xAct];
ExportDecomposition$xAct[OptionsPattern[{NameFile->StringReplace["Bimetric_decomposition_xAct_"<>DateString["ISODateTime"]<>".m",":"->"-"]}]]:=Block[{NamesOfTensors,NamesOfMatrices,$$Definitions},
NamesOfTensors=Union[Complement[Complement[(ToString/@Join[$Manifolds,$Tensors,Complement[$CovDs,{PD}],$ScalarFunctions]),Names["temp*"]],Names["epsilon*"]],Union[ChartsOfManifold[\[CapitalSigma]t]],(ScalarsOfChart[#][[All,0]]&/@Union[ChartsOfManifold[\[CapitalSigma]t]])[[1]]];

NamesOfMatrices=Union[Complement[SetOfNames$AfterDefs,SetOfNames$BeforeDefs,Names["SetOfNames*"]],{ec\[FilledRectangle],mTrc\[FilledRectangle],p\[FilledRectangle],q\[FilledRectangle],gA\[FilledUpTriangle]\[FilledDownTriangle],fA\[FilledUpTriangle]\[FilledDownTriangle],g\[CapitalLambda]\[FilledRectangle],f\[CapitalLambda]\[FilledRectangle],gback\[FilledSquare],fback\[FilledSquare],hback\[FilledSquare],\[Eta]\[FilledSquare]}];

Clear[$$Definitions];
$$Definitions=Join[(StringJoin[#,";"]&/@StringSplit[ToString@InputForm@Definition[#],"\n \n"])&/@Flatten@Join[NamesOfTensors,NamesOfMatrices,{InChart}],{ToString@Definition[DefaultChart],StringDelete[ToString@Definition[FirstChart],{"Attributes[FirstChart] = {Protected}","\n"}],ToString@Definition[ListOfVariables]},{ToString/@$Assumptions}];

Quiet@DeleteFile[OptionValue[NameFile]];
Save[OptionValue[NameFile],$$Definitions];
With[
{outf=OpenAppend[OptionValue[NameFile]]},
WriteLine[outf,"Unprotect[FirstChart];"];
WriteLine[outf,"ToExpression/@(Flatten[$$Definitions\[LeftDoubleBracket]1;;-2\[RightDoubleBracket]]);"];
WriteLine[outf,"$Assumptions=ToExpression/@$$Definitions\[LeftDoubleBracket]-1\[RightDoubleBracket];"];
WriteLine[outf,"Protect[FirstChart];"];
Close[outf]
];

SetDirectory@NotebookDirectory[];
Print["\[Dash] Decomposition in xAct exported successfully into "<>OptionValue[NameFile]<>", in the notebook folder."];
ResetDirectory[];
]


(* ::Input::Initialization:: *)
Clear[PrintDecomposition]
PrintDecomposition[OptionsPattern[{ChartName:>DefaultChart,ApplyFunction->Identity,Of->{g,f,h}}]]:=Module[{},
If[ChartQ[OptionValue[ChartName]],
Null,
Print[ToString[OptionValue[ChartName]]<>" is not a defined chart."];Abort[];
];
If[ComputationFlag[OptionValue[ChartName]],
Null,
Print["The decomposition has not been computed in the chart "<>ToString[OptionValue[ChartName]]<>"."];Abort[];
];
If[MemberQ[OptionValue[Of],g],
{Style["The g metric sector.",{Bold,Larger,Blue,FontFamily->"LM Roman 10"}],Row[{\[Gamma]c[-i,-j]," = ",MatrixForm@Simplify@\[Gamma]c\[FilledSquare][OptionValue[ChartName]]//OptionValue[ApplyFunction]}],
Row[{\[Gamma][-i,-j]," = ",MatrixForm@Simplify@\[Gamma]\[FilledSquare][OptionValue[ChartName]]//OptionValue[ApplyFunction]}],
Row[{gShi[i]," = ",MatrixForm@Simplify@gShi\[FilledUpTriangle][OptionValue[ChartName]]//OptionValue[ApplyFunction]}],
Row[{gn[i]," = ",MatrixForm@Simplify@gn\[FilledUpTriangle][OptionValue[ChartName]]//OptionValue[ApplyFunction]}],
Row[{gB[i,-j]," = ",MatrixForm@Simplify@gB\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]//OptionValue[ApplyFunction]}],
Row[{gD[i,-j]," = ",MatrixForm@Simplify@gD\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]//OptionValue[ApplyFunction]}],
Row[{gQ[i,-j]," = ",MatrixForm@Simplify@gQ\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]//OptionValue[ApplyFunction]}],
Row[{gU[i,-j]," = ",MatrixForm@Simplify@gU\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]//OptionValue[ApplyFunction]}],
Row[{"\!\(\*
StyleBox[\"\[ScriptCapitalV]\",\nFontColor->RGBColor[0, 0, 1]]\)"," = ",MatrixForm@Simplify@gV\[FilledSmallCircle][OptionValue[ChartName]]//OptionValue[ApplyFunction]}],
Row[{gQ[i,-k]fU[k,-j]," = ",MatrixForm@Simplify@(gQ\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]].fU\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]])//OptionValue[ApplyFunction]}],
Row[{"\!\(\*
StyleBox[SubscriptBox[
StyleBox[\"\[Rho]\",\nFontColor->RGBColor[0, 0, 1]], \"b\"],\nFontColor->RGBColor[0, 0, 1]]\)"," = ",MatrixForm@Simplify@grhob\[FilledSmallCircle][OptionValue[ChartName]]//OptionValue[ApplyFunction]}],
Row[{gjb[-i]," = ",MatrixForm@Simplify@gjb\[FilledDownTriangle][OptionValue[ChartName]]//OptionValue[ApplyFunction]}],
Row[{gJb[i,-j]," = ",MatrixForm@Simplify@gJb\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]//OptionValue[ApplyFunction]}]}//Echo/@#&;
];
If[MemberQ[OptionValue[Of],f],
Print[];
{Style["The f metric sector.",{Bold,Larger,Red,FontFamily->"LM Roman 10"}],Row[{\[CurlyPhi]c[-i,-j]," = ",MatrixForm@Simplify@\[CurlyPhi]c\[FilledSquare][OptionValue[ChartName]]//OptionValue[ApplyFunction]}],
Row[{\[CurlyPhi][-i,-j]," = ",MatrixForm@Simplify@\[CurlyPhi]\[FilledSquare][OptionValue[ChartName]]//OptionValue[ApplyFunction]}],
Row[{m[i,-j]," = ",MatrixForm@Simplify@m\[FilledRectangle][OptionValue[ChartName]]//OptionValue[ApplyFunction]}],
Row[{fShi[i]," = ",MatrixForm@Simplify@fShi\[FilledUpTriangle][OptionValue[ChartName]]//OptionValue[ApplyFunction]}],
Row[{fn[i]," = ",MatrixForm@Simplify@fn\[FilledUpTriangle][OptionValue[ChartName]]//OptionValue[ApplyFunction]}],
Row[{fB[i,-j]," = ",MatrixForm@Simplify@fB\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]//OptionValue[ApplyFunction]}],
Row[{fD[i,-j]," = ",MatrixForm@Simplify@fD\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]//OptionValue[ApplyFunction]}],
Row[{fQ[i,-j]," = ",MatrixForm@Simplify@fQ\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]//OptionValue[ApplyFunction]}],
Row[{fU[i,-j]," = ",MatrixForm@Simplify@fU\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]//OptionValue[ApplyFunction]}],
Row[{"\!\(\*
StyleBox[\"\[ScriptCapitalV]\",\nFontColor->RGBColor[1, 0, 0]]\)"," = ",MatrixForm@Simplify@fV\[FilledSmallCircle][OptionValue[ChartName]]//OptionValue[ApplyFunction]}],
Row[{fQ[i,-k]gU[k,-j]," = ",MatrixForm@Simplify@(fQ\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]].gU\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]])//OptionValue[ApplyFunction]}],
Row[{"\!\(\*
StyleBox[SubscriptBox[OverscriptBox[
StyleBox[\"\[Rho]\",\nFontColor->RGBColor[1, 0, 0]], \"~\"], \"b\"],\nFontColor->RGBColor[1, 0, 0]]\)"," = ",MatrixForm@Simplify@frhob\[FilledSmallCircle][OptionValue[ChartName]]//OptionValue[ApplyFunction]}],
Row[{fjb[-i]," = ",MatrixForm@Simplify@fjb\[FilledDownTriangle][OptionValue[ChartName]]//OptionValue[ApplyFunction]}],
Row[{fJb[i,-j]," = ",MatrixForm@Simplify@fJb\[FilledUpTriangle]\[FilledDownTriangle][OptionValue[ChartName]]//OptionValue[ApplyFunction]}]
}//Echo/@#&;
];
If[MemberQ[OptionValue[Of],h],
{Row[{Style["The Lorentz frame ",{Bold,Larger,Darker[Orange],FontFamily->"LM Roman 10"}],Style["and the geometric mean.",{Bold,Larger,Darker[Green],FontFamily->"LM Roman 10"}]}],Row[{R[i,-j]," = ",MatrixForm@Simplify@R\[FilledRectangle][OptionValue[ChartName]]//OptionValue[ApplyFunction]}],
Row[{\[CapitalLambda][i,-j]," = ",MatrixForm@Simplify@\[CapitalLambda]\[FilledRectangle][OptionValue[ChartName]]//OptionValue[ApplyFunction]}],
Row[{\[Chi]c[-i,-j]," = ",MatrixForm@Simplify@\[Chi]c\[FilledSquare][OptionValue[ChartName]]//OptionValue[ApplyFunction]}],
Row[{\[Chi][-i,-j]," = ",MatrixForm@Simplify@\[Chi]\[FilledSquare][OptionValue[ChartName]]//OptionValue[ApplyFunction]}]
}//Echo/@#&;
];
]


(* ::Input::Initialization:: *)
Clear[ToConcrete]
ToConcrete[expr_,OptionsPattern[{ChartName:>DefaultChart,ConcreteSources->False,ConcreteRicci->False,ConcreteShift->False}]]:=
Which[
\[Not]OptionValue[ConcreteSources]&&\[Not]OptionValue[ConcreteRicci]&&\[Not]OptionValue[ConcreteShift],
expr//ToConcrete$Basic,

OptionValue[ConcreteSources]&&OptionValue[ConcreteRicci]&&OptionValue[ConcreteShift],
expr//ToConcrete$Basic//ToConcreteSources//ToConcreteRicci//ToConcreteShift,

OptionValue[ConcreteSources]&&OptionValue[ConcreteRicci]&&\[Not]OptionValue[ConcreteShift],
expr//ToConcrete$Basic//ToConcreteSources//ToConcreteRicci,

OptionValue[ConcreteSources]&&\[Not]OptionValue[ConcreteRicci]&&OptionValue[ConcreteShift],
expr//ToConcrete$Basic//ToConcreteSources//ToConcreteShift,

\[Not]OptionValue[ConcreteSources]&&OptionValue[ConcreteRicci]&&OptionValue[ConcreteShift],
expr//ToConcrete$Basic//ToConcreteRicci//ToConcreteShift,

OptionValue[ConcreteSources]&&\[Not]OptionValue[ConcreteRicci]&&\[Not]OptionValue[ConcreteShift],
expr//ToConcrete$Basic//ToConcreteSources,

\[Not]OptionValue[ConcreteSources]&&OptionValue[ConcreteRicci]&&\[Not]OptionValue[ConcreteShift],
expr//ToConcrete$Basic//ToConcreteRicci,

\[Not]OptionValue[ConcreteSources]&&\[Not]OptionValue[ConcreteRicci]&&OptionValue[ConcreteShift],
expr//ToConcrete$Basic//ToConcreteShift
]


(* ::Input::Initialization:: *)
Clear[ToConcrete$Basic]
ToConcrete$Basic[expr_,OptionsPattern[{ChartName:>DefaultChart}]]:=Block[{InChart,det\[Gamma]$variables,det\[CurlyPhi]$variables},
If[ChartQ[OptionValue[ChartName]],
Null,
Print[ToString[OptionValue[ChartName]]<>" is not a defined chart."];Abort[];
];
If[ComputationFlag[OptionValue[ChartName]],
Null,
Print["The decomposition has not been computed in the chart "<>ToString[OptionValue[ChartName]]<>"."];Abort[];
];
det\[Gamma]$variables=Sequence@@Union@Complement[Apply[Sequence,Det\[Gamma]c[]//ToBasis[OptionValue[ChartName]]//ToValues//Variables,{1}],$ConstantSymbols];
det\[CurlyPhi]$variables=Sequence@@Union@Complement[Apply[Sequence,Det\[CurlyPhi]c[]//ToBasis[OptionValue[ChartName]]//ToValues//Variables,{1}],$ConstantSymbols];
InChart[\[Beta][i_],OptionValue[ChartName]][args__]:=\[Beta][i];
InChart[Lt[],OptionValue[ChartName]][args__]:=\[Lambda]\[FilledSmallCircle][args];
InChart[gLap[],OptionValue[ChartName]][args__]:=gLap\[FilledSmallCircle][args];
InChart[fLap[],OptionValue[ChartName]][args__]:=fLap\[FilledSmallCircle][args];
InChart[hLap[],OptionValue[ChartName]][args__]:=hLap\[FilledSmallCircle][args];
InChart[gconf[],OptionValue[ChartName]][args__]:=gconf\[FilledSmallCircle][args];
InChart[fconf[],OptionValue[ChartName]][args__]:=fconf\[FilledSmallCircle][args];
InChart[TrgK[],OptionValue[ChartName]][args__]:=TrgK\[FilledSmallCircle][args];
InChart[TrfK[],OptionValue[ChartName]][args__]:=TrfK\[FilledSmallCircle][args];
InChart[TrgA[],OptionValue[ChartName]][args__]:=TrgA\[FilledSmallCircle][args];
InChart[TrfA[],OptionValue[ChartName]][args__]:=TrfA\[FilledSmallCircle][args];
InChart[det\[Gamma]c[],OptionValue[ChartName]][args__]:=det\[Gamma]c\[FilledSmallCircle][args];
InChart[det\[CurlyPhi]c[],OptionValue[ChartName]][args__]:=det\[CurlyPhi]c\[FilledSmallCircle][args];
InChart[grho[],OptionValue[ChartName]][args__]:=grho\[FilledSmallCircle][args];
InChart[frho[],OptionValue[ChartName]][args__]:=frho\[FilledSmallCircle][args];
InChart[t,OptionValue[ChartName]][args___]:=t;
Module[{temp$grhob,temp$gjb,temp$gJb,temp$frhob,temp$fjb,temp$fJb,temp$expr},
DefTensor[temp$grhob[],{\[CapitalSigma]t,t,g\[Digamma]}];
DefTensor[temp$gjb[-i],{\[CapitalSigma]t,t,g\[Digamma]}];
DefTensor[temp$gJb[-i,-j],{\[CapitalSigma]t,t,g\[Digamma]}];
DefTensor[temp$frhob[],{\[CapitalSigma]t,t,f\[Digamma]}];
DefTensor[temp$fjb[-i],{\[CapitalSigma]t,t,f\[Digamma]}];
DefTensor[temp$fJb[-i,-j],{\[CapitalSigma]t,t,f\[Digamma]}];
Return[((((expr/.{grhob->temp$grhob,gjb->temp$gjb,gJb->temp$gJb,frhob->temp$frhob,fjb->temp$fjb,fJb->temp$fJb}//ReleaseHold)/.{PD->PDOfBasis[OptionValue[ChartName]],ChristoffelgCDc->ChristoffelFromMetric[\[Gamma]c[-i,-j],OptionValue[ChartName]],ChristoffelfCDc->ChristoffelFromMetric[\[CurlyPhi]c[-i,-j],OptionValue[ChartName]],ChristoffelgCDback->ChristoffelFromMetric[gback[-i,-j],OptionValue[ChartName]],ChristoffelfCDback->ChristoffelFromMetric[fback[-i,-j],OptionValue[ChartName]]}//ToBasis[OptionValue[ChartName]]//ToBasis[OptionValue[ChartName]]//ToBasis[OptionValue[ChartName]]//TraceBasisDummy//ComponentArray//ToValues//ToValues)/.{Lt[]:>InChart[Lt[],OptionValue[ChartName]][Sequence@@ListOfVariables[OptionValue[ChartName]]],gLap[]:>InChart[gLap[],OptionValue[ChartName]][Sequence@@ListOfVariables[OptionValue[ChartName]]],
fLap[]:>InChart[fLap[],OptionValue[ChartName]][Sequence@@ListOfVariables[OptionValue[ChartName]]],
hLap[]:>InChart[hLap[],OptionValue[ChartName]][Sequence@@ListOfVariables[OptionValue[ChartName]]],gconf[]:>InChart[gconf[],OptionValue[ChartName]][Sequence@@ListOfVariables[OptionValue[ChartName]]],
fconf[]:>InChart[fconf[],OptionValue[ChartName]][Sequence@@ListOfVariables[OptionValue[ChartName]]],TrgK[]:>InChart[TrgK[],OptionValue[ChartName]][Sequence@@ListOfVariables[OptionValue[ChartName]]],
TrfK[]:>InChart[TrfK[],OptionValue[ChartName]][Sequence@@ListOfVariables[OptionValue[ChartName]]],
TrgA[]:>InChart[TrgA[],OptionValue[ChartName]][g\[Digamma],Sequence@@ListOfVariables[OptionValue[ChartName]]],
TrfA[]:>InChart[TrfA[],OptionValue[ChartName]][f\[Digamma],Sequence@@ListOfVariables[OptionValue[ChartName]]],
det\[Gamma]c[]:>InChart[det\[Gamma]c[],OptionValue[ChartName]][g\[Digamma],det\[Gamma]$variables],
det\[CurlyPhi]c[]:>InChart[det\[CurlyPhi]c[],OptionValue[ChartName]][f\[Digamma],det\[CurlyPhi]$variables],grho[]:>InChart[grho[],OptionValue[ChartName]][Sequence@@ListOfVariables[OptionValue[ChartName]]],
frho[]:>InChart[frho[],OptionValue[ChartName]][Sequence@@ListOfVariables[OptionValue[ChartName]]]}//ToValues//ToValues)/.{temp$grhob->grhob,temp$gjb->gjb,temp$gJb->gJb,temp$frhob->frhob,temp$fjb->fjb,temp$fJb->fJb}//ToBasis[OptionValue[ChartName]]//ToBasis[OptionValue[ChartName]]//TraceBasisDummy//ComponentArray)/.{grhob[]:>InChart[grhob[],OptionValue[ChartName]][Sequence@@ListOfVariables[OptionValue[ChartName]]],
frhob[]:>InChart[frhob[],OptionValue[ChartName]][Sequence@@ListOfVariables[OptionValue[ChartName]]]}];
UndefTensor[temp$grhob];
UndefTensor[temp$gjb];
UndefTensor[temp$gJb];
UndefTensor[temp$frhob];
UndefTensor[temp$fjb];
UndefTensor[temp$fJb];
];
]


(* ::Input::Initialization:: *)
Clear[ToConcreteSources]
ToConcreteSources[expr_,OptionsPattern[{ChartName:>DefaultChart,ApplyFunction->Identity}]]:=Block[{InChart},
If[ChartQ[OptionValue[ChartName]],
Null,
Print[ToString[OptionValue[ChartName]]<>" is not a defined chart."];Abort[];
];
If[ComputationFlag[OptionValue[ChartName]],
Null,
Print["The decomposition has not been computed in the chart "<>ToString[OptionValue[ChartName]]<>"."];Abort[];
];
InChart[\[Beta][i_],OptionValue[ChartName]][args__]:=\[Beta][i];
InChart[t,OptionValue[ChartName]][args___]:=t;
InChart[grhob[],OptionValue[ChartName]][args__]:=grhob\[FilledSmallCircle][OptionValue[ChartName]]//OptionValue[ApplyFunction];
InChart[frhob[],OptionValue[ChartName]][args__]:=frhob\[FilledSmallCircle][OptionValue[ChartName]]//OptionValue[ApplyFunction];
expr
/.{
grhob[]:>InChart[grhob[],OptionValue[ChartName]][Sequence@@ListOfVariables[OptionValue[ChartName]]],
frhob[]:>InChart[frhob[],OptionValue[ChartName]][Sequence@@ListOfVariables[OptionValue[ChartName]]],
gjb[i_]:>(gjb[i]//ToBasis[OptionValue[ChartName]]//ToBasis[OptionValue[ChartName]]//TraceBasisDummy//ComponentArray//ToValues//ToValues//OptionValue[ApplyFunction]),
fjb[i_]:>(fjb[i]//ToBasis[OptionValue[ChartName]]//ToBasis[OptionValue[ChartName]]//TraceBasisDummy//ComponentArray//ToValues//ToValues//OptionValue[ApplyFunction]),
gJb[i_,j_]:>(gJb[i,j]//ToBasis[OptionValue[ChartName]]//ToBasis[OptionValue[ChartName]]//TraceBasisDummy//ComponentArray//ToValues//ToValues//OptionValue[ApplyFunction]),
fJb[i_,j_]:>(fJb[i,j]//ToBasis[OptionValue[ChartName]]//ToBasis[OptionValue[ChartName]]//TraceBasisDummy//ComponentArray//ToValues//ToValues//OptionValue[ApplyFunction])
}
]


(* ::Input::Initialization:: *)
Clear[ToConcreteRicci]
ToConcreteRicci[expr_,OptionsPattern[{ChartName:>DefaultChart,ApplyFunction->Identity}]]:=Block[{InChart},
If[ChartQ[OptionValue[ChartName]],
Null,
Print[ToString[OptionValue[ChartName]]<>" is not a defined chart."];Abort[];
];
If[ComputationFlag[OptionValue[ChartName]],
Null,
Print["The decomposition has not been computed in the chart "<>ToString[OptionValue[ChartName]]<>"."];Abort[];
];
InChart[\[Beta][i_],OptionValue[ChartName]][args__]:=\[Beta][i];
InChart[t,OptionValue[ChartName]][args___]:=t;
(expr/.{gR[i_,j_]:>(gR[i,j]//ToBasis[OptionValue[ChartName]]//ToBasis[OptionValue[ChartName]]//TraceBasisDummy//ComponentArray//ToValues//ToValues),
fR[i_,j_]:>(fR[i,j]//ToBasis[OptionValue[ChartName]]//ToBasis[OptionValue[ChartName]]//TraceBasisDummy//ComponentArray//ToValues//ToValues)})/.Join[MapThread[Rule,{(Apply[ComponentValue[gR[{#1,-OptionValue[ChartName]},{#2,-OptionValue[ChartName]}]]&,#]&/@NonZeroIn$gR)[[All,1]],(Apply[gR\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]][[#1,#2]]&,#]&/@NonZeroIn$gR)}],MapThread[Rule,{(Apply[ComponentValue[fR[{#1,-OptionValue[ChartName]},{#2,-OptionValue[ChartName]}]]&,#]&/@NonZeroIn$fR)[[All,1]],(Apply[fR\[FilledDownTriangle]\[FilledDownTriangle][OptionValue[ChartName]][[#1,#2]]&,#]&/@NonZeroIn$fR)}]]
]


(* ::Input::Initialization:: *)
Clear[ToConcreteShift]
ToConcreteShift[expr_,OptionsPattern[{ChartName:>DefaultChart,ApplyFunction->Identity}]]:=Block[{InChart,gShi1,gShi2,gShi3,fShi1,fShi2,fShi3},
If[ChartQ[OptionValue[ChartName]],
Null,
Print[ToString[OptionValue[ChartName]]<>" is not a defined chart."];Abort[];
];
If[ComputationFlag[OptionValue[ChartName]],
Null,
Print["The decomposition has not been computed in the chart "<>ToString[OptionValue[ChartName]]<>"."];Abort[];
];
InChart[\[Beta][i_],OptionValue[ChartName]][args__]:=\[Beta][i];
InChart[t,OptionValue[ChartName]][args___]:=t;
gShi1[args__]:=Apply[gShi\[FilledUpTriangle][][[1]]/.Thread[ListOfVariables[OptionValue[ChartName]]->"#"<>ToString[#]&/@Range[1,Length[ListOfVariables[OptionValue[ChartName]]]]]&,{args}];
gShi2[args__]:=Apply[gShi\[FilledUpTriangle][][[2]]/.Thread[ListOfVariables[OptionValue[ChartName]]->"#"<>ToString[#]&/@Range[1,Length[ListOfVariables[OptionValue[ChartName]]]]]&,{args}];
gShi3[args__]:=Apply[gShi\[FilledUpTriangle][][[3]]/.Thread[ListOfVariables[OptionValue[ChartName]]->"#"<>ToString[#]&/@Range[1,Length[ListOfVariables[OptionValue[ChartName]]]]]&,{args}];
fShi1[args__]:=Apply[fShi\[FilledUpTriangle][][[1]]/.Thread[ListOfVariables[OptionValue[ChartName]]->"#"<>ToString[#]&/@Range[1,Length[ListOfVariables[OptionValue[ChartName]]]]]&,{args}];
fShi2[args__]:=Apply[fShi\[FilledUpTriangle][][[2]]/.Thread[ListOfVariables[OptionValue[ChartName]]->"#"<>ToString[#]&/@Range[1,Length[ListOfVariables[OptionValue[ChartName]]]]]&,{args}];
fShi3[args__]:=Apply[fShi\[FilledUpTriangle][][[3]]/.Thread[ListOfVariables[OptionValue[ChartName]]->"#"<>ToString[#]&/@Range[1,Length[ListOfVariables[OptionValue[ChartName]]]]]&,{args}];
(expr/.{gShi[i_]:>(gShi[i]//ToBasis[OptionValue[ChartName]]//ToBasis[OptionValue[ChartName]]//TraceBasisDummy//ComponentArray//ToValues//ToValues),
fShi[i_]:>(fShi[i]//ToBasis[OptionValue[ChartName]]//ToBasis[OptionValue[ChartName]]//TraceBasisDummy//ComponentArray//ToValues//ToValues)})
]
